<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_cRHMACumEeyJjNOKZ7e9aA" name="Reliability">
    <eAnnotations xmi:id="_ce4iQCumEeyJjNOKZ7e9aA" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_ce4iQSumEeyJjNOKZ7e9aA" source="codegen">
        <details xmi:id="_ce4iQiumEeyJjNOKZ7e9aA" key="codegenDirectory" value="/cs2820-fall21/src"/>
        <details xmi:id="_dhsDECumEeyJjNOKZ7e9aA" key="AssociatedSourceCode" value="/cs2820-fall21/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820-fall21/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Channels.java;1571938740/1;/cs2820-fall21/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820-fall21/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-fall21/src/edu/uiowa/cs/warp/CommunicationGraph.java;3059989203/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820-fall21/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/cs2820-fall21/src/edu/uiowa/cs/warp/FileManager.java;2522714670/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Flow.java;1457286001/1;/cs2820-fall21/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-fall21/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-fall21/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-fall21/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-fall21/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-fall21/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-fall21/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-fall21/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820-fall21/src/edu/uiowa/cs/warp/NodeMap.java;1334945632/1;/cs2820-fall21/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-fall21/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-fall21/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Poset.java;284938601/1;/cs2820-fall21/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-fall21/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Program.java;2380932822/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ProgramVisualization.java;4243004560/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;3966881020/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1976749484/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;1810447907/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-fall21/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;/cs2820-fall21/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-fall21/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-fall21/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-fall21/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-fall21/src/edu/uiowa/cs/warp/SystemFactory.java;3961720827/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Visualization.java;4035723989/1;/cs2820-fall21/src/edu/uiowa/cs/warp/VisualizationFactory.java;3033941422/1;/cs2820-fall21/src/edu/uiowa/cs/warp/VisualizationImplementation.java;3708356065/1;/cs2820-fall21/src/edu/uiowa/cs/warp/VisualizationObject.java;823199562/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Warp.java;614271873/1;/cs2820-fall21/src/edu/uiowa/cs/warp/WarpDSL.java;463897055/1;/cs2820-fall21/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-fall21/src/edu/uiowa/cs/warp/WarpSystem.java;748895675/1;/cs2820-fall21/src/edu/uiowa/cs/warp/WarpTester.java;631014940/1;/cs2820-fall21/src/edu/uiowa/cs/warp/WorkLoadDescription.java;2731869887/1;/cs2820-fall21/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-fall21/src/edu/uiowa/cs/warp/WorkLoadTest.java;2148312765/1;/cs2820-fall21/src/edu/uiowa/cs/warp/WorkLoad.java;3239803475/1;"/>
      </contents>
      <contents xmi:type="ecore:EAnnotation" xmi:id="_zaC_YDXLEeyzKPzbxOg4Ww" source="preferences">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_zaC_YTXLEeyzKPzbxOg4Ww" source="com.yattasolutions.codegen.reverse">
          <details xmi:id="_zaDmcDXLEeyzKPzbxOg4Ww" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerNewFiles" value="true"/>
          <details xmi:id="_zaDmcTXLEeyzKPzbxOg4Ww" key="com.yattasolutions.codegen.reverse.roundtrip.RemoveDeletedFiles" value="true"/>
          <details xmi:id="_zaDmcjXLEeyzKPzbxOg4Ww" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerChangedFiles" value="true"/>
        </contents>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_dKr4UCumEeyJjNOKZ7e9aA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_dKr4USumEeyJjNOKZ7e9aA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_dKr4UiumEeyJjNOKZ7e9aA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_dKr4UyumEeyJjNOKZ7e9aA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_dKr4VCumEeyJjNOKZ7e9aA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_dKr4VSumEeyJjNOKZ7e9aA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_dKr4ViumEeyJjNOKZ7e9aA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_dKr4VyumEeyJjNOKZ7e9aA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_dKr4WCumEeyJjNOKZ7e9aA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_dKd14CumEeyJjNOKZ7e9aA" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_dKd14SumEeyJjNOKZ7e9aA" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_dKd14iumEeyJjNOKZ7e9aA" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_dKec8SumEeyJjNOKZ7e9aA" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_dK9lICumEeyJjNOKZ7e9aA" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_dUmCQCumEeyJjNOKZ7e9aA" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_dLBPgCumEeyJjNOKZ7e9aA" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_dUpspCumEeyJjNOKZ7e9aA" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_dLCdoCumEeyJjNOKZ7e9aA" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_dUqTtSumEeyJjNOKZ7e9aA" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_dUq6wSumEeyJjNOKZ7e9aA" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dL9qsCumEeyJjNOKZ7e9aA" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_dVGYkCumEeyJjNOKZ7e9aA" general="_dT9wICumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dVxG8CumEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dVxG8SumEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWaAICumEeyJjNOKZ7e9aA" name="AbstractMap" specification="_dL-40CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWaAISumEeyJjNOKZ7e9aA" type="_dL9qsCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dL-40CumEeyJjNOKZ7e9aA" name="AbstractMap" method="_dWaAICumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dL-40SumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dL-40iumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dL-40yumEeyJjNOKZ7e9aA" type="_dL9qsCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dL_f4CumEeyJjNOKZ7e9aA" name="Activation">
              <generalization xmi:id="_dUBagCumEeyJjNOKZ7e9aA" general="_dNCowCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dVxuACumEeyJjNOKZ7e9aA" name="coordinators" type="_dT-XMCumEeyJjNOKZ7e9aA" isReadOnly="true" association="_dXFVkCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dVxuAiumEeyJjNOKZ7e9aA" name="edges" type="_dT-XMCumEeyJjNOKZ7e9aA" isReadOnly="true" association="_dXF8oSumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dVxuBCumEeyJjNOKZ7e9aA" name="additionalScheduleTimes" type="_dT-XMCumEeyJjNOKZ7e9aA" isReadOnly="true" association="_dXF8pCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dVyVESumEeyJjNOKZ7e9aA" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dVyVEiumEeyJjNOKZ7e9aA" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_dVG_oiumEeyJjNOKZ7e9aA" client="_dL_f4CumEeyJjNOKZ7e9aA" supplier="_dVG_oCumEeyJjNOKZ7e9aA" contract="_dVG_oCumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWaAIiumEeyJjNOKZ7e9aA" name="Activation" specification="_dMAG8CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWaAIyumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWaAJCumEeyJjNOKZ7e9aA" type="_dL_f4CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWaAJSumEeyJjNOKZ7e9aA" name="Activation" specification="_dT--QyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWaAJiumEeyJjNOKZ7e9aA" name="elem" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWaAJyumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWaAKCumEeyJjNOKZ7e9aA" type="_dL_f4CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWaAKSumEeyJjNOKZ7e9aA" name="clone" specification="_dMAG9SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWaAKiumEeyJjNOKZ7e9aA" type="_dL_f4CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWaAKyumEeyJjNOKZ7e9aA" name="getEdgesByReleaseTime" specification="_dMAuAyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWaALCumEeyJjNOKZ7e9aA" type="_dM9JMiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWaALSumEeyJjNOKZ7e9aA" name="getEdgesByLatestReleaseTime" specification="_dMBVESumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWaALiumEeyJjNOKZ7e9aA" type="_dM9JMiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWaALyumEeyJjNOKZ7e9aA" name="getEdgesByPeriod" specification="_dMB8ICumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWaAMCumEeyJjNOKZ7e9aA" type="_dM9JMiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWaAMSumEeyJjNOKZ7e9aA" name="getEdgesByDeadline" specification="_dMB8IiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWaAMiumEeyJjNOKZ7e9aA" type="_dM9JMiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWaAMyumEeyJjNOKZ7e9aA" name="getEdgesByPriority" specification="_dMCjMCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWaANCumEeyJjNOKZ7e9aA" type="_dM9JMiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWanMCumEeyJjNOKZ7e9aA" name="addEdges" specification="_dVHmsCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWanMSumEeyJjNOKZ7e9aA" name="edges" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWanMiumEeyJjNOKZ7e9aA" name="addEdge" specification="_dT_lVyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWanMyumEeyJjNOKZ7e9aA" name="edge" type="_dMTB5CumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWanNCumEeyJjNOKZ7e9aA" name="increaseEdgePhases" specification="_dMCjMiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWanNSumEeyJjNOKZ7e9aA" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWanNiumEeyJjNOKZ7e9aA" name="updatePriorityAndRelease" specification="_dMCjNCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWanNyumEeyJjNOKZ7e9aA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWanOCumEeyJjNOKZ7e9aA" name="addConflict" specification="_dMCjNiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWanOSumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWanOiumEeyJjNOKZ7e9aA" name="addConflicts" specification="_dVHmsyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWanOyumEeyJjNOKZ7e9aA" name="conflicts" type="_dT--QSumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWanPCumEeyJjNOKZ7e9aA" name="addCoordinator" specification="_dMDKQSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWanPSumEeyJjNOKZ7e9aA" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWanPiumEeyJjNOKZ7e9aA" name="addCoordinators" specification="_dVINwSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWanPyumEeyJjNOKZ7e9aA" name="coordinators" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWanQCumEeyJjNOKZ7e9aA" name="addScheduleTimes" specification="_dVINxCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWanQSumEeyJjNOKZ7e9aA" name="scheduleTime" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWanQiumEeyJjNOKZ7e9aA" name="getNextScheduleTime" specification="_dMDKQyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWanQyumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWanRCumEeyJjNOKZ7e9aA" type="_dNQEKiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWbOQCumEeyJjNOKZ7e9aA" name="getMatchingEndTime" specification="_dMDxUCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWbOQSumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWbOQiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWbOQyumEeyJjNOKZ7e9aA" name="getNextStartTime" specification="_dMDxUyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWbORCumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWbORSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWbORiumEeyJjNOKZ7e9aA" name="getNextEndTime" specification="_dMDxViumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWbORyumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWbOSCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWbOSSumEeyJjNOKZ7e9aA" name="getNumEdges" specification="_dMDxWSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWbOSiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWbOSyumEeyJjNOKZ7e9aA" name="compareTo" specification="_dT_lWiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWbOTCumEeyJjNOKZ7e9aA" name="obj" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWbOTSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWbOTiumEeyJjNOKZ7e9aA" name="conflictExists" specification="_dUAMZCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWbOTyumEeyJjNOKZ7e9aA" name="obj" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWbOUCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWbOUSumEeyJjNOKZ7e9aA" name="canCombine" specification="_dUAMZyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWbOUiumEeyJjNOKZ7e9aA" name="a2" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWbOUyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWbOVCumEeyJjNOKZ7e9aA" name="getDelta" specification="_dMEYYCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWbOVSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWbOViumEeyJjNOKZ7e9aA" name="getExecutionDuration" specification="_dMEYYiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWbOVyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWbOWCumEeyJjNOKZ7e9aA" name="getCombinedExecutionDuration" specification="_dUAMaiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWbOWSumEeyJjNOKZ7e9aA" name="a2" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWbOWiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWbOWyumEeyJjNOKZ7e9aA" name="printAll" specification="_dME_cCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWbOXCumEeyJjNOKZ7e9aA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWbOXSumEeyJjNOKZ7e9aA" name="printAll" specification="_dME_ciumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWbOXiumEeyJjNOKZ7e9aA" name="printEdges" specification="_dUAzcCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWbOXyumEeyJjNOKZ7e9aA" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWbOYCumEeyJjNOKZ7e9aA" name="edges" type="_dM8iICumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWb1UCumEeyJjNOKZ7e9aA" name="printEdges" specification="_dUAzdCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWb1USumEeyJjNOKZ7e9aA" name="edges" type="_dM8iICumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dMAG8CumEeyJjNOKZ7e9aA" name="Activation" visibility="package" method="_dWaAIiumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dMAG8iumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dMAG8yumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dMAG8SumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMAG9CumEeyJjNOKZ7e9aA" type="_dL_f4CumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMAG9SumEeyJjNOKZ7e9aA" name="clone" method="_dWaAKSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dT_lUSumEeyJjNOKZ7e9aA" type="_dL_f4CumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMAuAyumEeyJjNOKZ7e9aA" name="getEdgesByReleaseTime" method="_dWaAKyumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZYmkDd2EeykP74baAFnvg">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_dT_lUiumEeyJjNOKZ7e9aA" type="_dM9JMiumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMBVESumEeyJjNOKZ7e9aA" name="getEdgesByLatestReleaseTime" method="_dWaALSumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZYmkTd2EeykP74baAFnvg">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_dT_lUyumEeyJjNOKZ7e9aA" type="_dM9JMiumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMB8ICumEeyJjNOKZ7e9aA" name="getEdgesByPeriod" method="_dWaALyumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZYmkjd2EeykP74baAFnvg">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_dT_lVCumEeyJjNOKZ7e9aA" type="_dM9JMiumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMB8IiumEeyJjNOKZ7e9aA" name="getEdgesByDeadline" method="_dWaAMSumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZYmkzd2EeykP74baAFnvg">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_dT_lVSumEeyJjNOKZ7e9aA" type="_dM9JMiumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMCjMCumEeyJjNOKZ7e9aA" name="getEdgesByPriority" method="_dWaAMyumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZYmlDd2EeykP74baAFnvg">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_dT_lViumEeyJjNOKZ7e9aA" type="_dM9JMiumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMCjMiumEeyJjNOKZ7e9aA" name="increaseEdgePhases" method="_dWanNCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZYmlTd2EeykP74baAFnvg">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMCjMyumEeyJjNOKZ7e9aA" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMCjNCumEeyJjNOKZ7e9aA" name="updatePriorityAndRelease" method="_dWanNiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZYmljd2EeykP74baAFnvg">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_dMCjNSumEeyJjNOKZ7e9aA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMCjNiumEeyJjNOKZ7e9aA" name="addConflict" method="_dWanOCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMDKQCumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMDKQSumEeyJjNOKZ7e9aA" name="addCoordinator" method="_dWanPCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMDKQiumEeyJjNOKZ7e9aA" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMDKQyumEeyJjNOKZ7e9aA" name="getNextScheduleTime" method="_dWanQiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZYmmDd2EeykP74baAFnvg">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMDKRCumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dT_lWSumEeyJjNOKZ7e9aA" type="_dNQEKiumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMDxUCumEeyJjNOKZ7e9aA" name="getMatchingEndTime" method="_dWbOQCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZYmmTd2EeykP74baAFnvg">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMDxUSumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMDxUiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMDxUyumEeyJjNOKZ7e9aA" name="getNextStartTime" method="_dWbOQyumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZYmmjd2EeykP74baAFnvg">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMDxVCumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMDxVSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMDxViumEeyJjNOKZ7e9aA" name="getNextEndTime" method="_dWbORiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZYmmzd2EeykP74baAFnvg">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMDxVyumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMDxWCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMDxWSumEeyJjNOKZ7e9aA" name="getNumEdges" method="_dWbOSSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMDxWiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMEYYCumEeyJjNOKZ7e9aA" name="getDelta" method="_dWbOVCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZZNoDd2EeykP74baAFnvg">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMEYYSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMEYYiumEeyJjNOKZ7e9aA" name="getExecutionDuration" method="_dWbOViumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMEYYyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dME_cCumEeyJjNOKZ7e9aA" name="printAll" method="_dWbOWyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dME_cSumEeyJjNOKZ7e9aA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dME_ciumEeyJjNOKZ7e9aA" name="printAll" method="_dWbOXSumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dT--QyumEeyJjNOKZ7e9aA" name="Activation" visibility="package" method="_dWaAJSumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dT--RiumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dT--RyumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dT--RCumEeyJjNOKZ7e9aA" name="elem" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dT--RSumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dT_lUCumEeyJjNOKZ7e9aA" type="_dL_f4CumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dT_lVyumEeyJjNOKZ7e9aA" name="addEdge" method="_dWanMiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dT_lWCumEeyJjNOKZ7e9aA" name="edge" type="_dMTB5CumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dT_lWiumEeyJjNOKZ7e9aA" name="compareTo" method="_dWbOSyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dT_lWyumEeyJjNOKZ7e9aA" name="obj" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUAMYCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUAMZCumEeyJjNOKZ7e9aA" name="conflictExists" method="_dWbOTiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUAMZSumEeyJjNOKZ7e9aA" name="obj" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUAMZiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUAMZyumEeyJjNOKZ7e9aA" name="canCombine" method="_dWbOUSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUAMaCumEeyJjNOKZ7e9aA" name="a2" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUAMaSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUAMaiumEeyJjNOKZ7e9aA" name="getCombinedExecutionDuration" method="_dWbOWCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUAMayumEeyJjNOKZ7e9aA" name="a2" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUAMbCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUAzcCumEeyJjNOKZ7e9aA" name="printEdges" visibility="private" method="_dWbOXiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUAzcSumEeyJjNOKZ7e9aA" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUAzciumEeyJjNOKZ7e9aA" name="edges" type="_dM8iICumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUAzdCumEeyJjNOKZ7e9aA" name="printEdges" visibility="private" method="_dWb1UCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUAzdSumEeyJjNOKZ7e9aA" name="edges" type="_dM8iICumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVHmsCumEeyJjNOKZ7e9aA" name="addEdges" method="_dWanMCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVHmsSumEeyJjNOKZ7e9aA" name="edges" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVHmsyumEeyJjNOKZ7e9aA" name="addConflicts" method="_dWanOiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVHmtCumEeyJjNOKZ7e9aA" name="conflicts" type="_dT--QSumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVINwSumEeyJjNOKZ7e9aA" name="addCoordinators" method="_dWanPiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVINwiumEeyJjNOKZ7e9aA" name="coordinators" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVINxCumEeyJjNOKZ7e9aA" name="addScheduleTimes" method="_dWanQCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZYmlzd2EeykP74baAFnvg">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_dVINxSumEeyJjNOKZ7e9aA" name="scheduleTime" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMHbsCumEeyJjNOKZ7e9aA" name="Activations">
              <generalization xmi:id="_dUCBkCumEeyJjNOKZ7e9aA" general="_dL9qsCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dVy8ICumEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dVy8ISumEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMHbsSumEeyJjNOKZ7e9aA" name="BasicPoset">
              <ownedComment xmi:id="_rZZNoTd2EeykP74baAFnvg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_dUCooyumEeyJjNOKZ7e9aA" general="_dMq1UCumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWb1UiumEeyJjNOKZ7e9aA" name="BasicPoset" specification="_dUCBkiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWb1UyumEeyJjNOKZ7e9aA" name="workload" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWb1VCumEeyJjNOKZ7e9aA" type="_dMHbsSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dUCBkiumEeyJjNOKZ7e9aA" name="BasicPoset" visibility="package" method="_dWb1UiumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUCooCumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUCooSumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUCBkyumEeyJjNOKZ7e9aA" name="workload" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUCooiumEeyJjNOKZ7e9aA" type="_dMHbsSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMICwCumEeyJjNOKZ7e9aA" name="Channels">
              <ownedComment xmi:id="_rZZNojd2EeykP74baAFnvg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dVy8JCumEeyJjNOKZ7e9aA" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dVy8JiumEeyJjNOKZ7e9aA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dVy8KCumEeyJjNOKZ7e9aA" name="channelsAvailable" visibility="package" type="_dT-XMCumEeyJjNOKZ7e9aA" association="_dXF8pyumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWb1WiumEeyJjNOKZ7e9aA" name="Channels" specification="_dMIp1SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWb1WyumEeyJjNOKZ7e9aA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWb1XCumEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWb1XSumEeyJjNOKZ7e9aA" type="_dMICwCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
     this.verbose = verbose;  &#xD;
     this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWb1XiumEeyJjNOKZ7e9aA" name="getChannelSet" specification="_dMJQ4SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWb1XyumEeyJjNOKZ7e9aA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWb1YCumEeyJjNOKZ7e9aA" type="_dT-XMiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot)); // get the channel set for this timeSlot&#xD;
 	return channelSet;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWb1YSumEeyJjNOKZ7e9aA" name="addNewChannelSet" specification="_dMJQ5CumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 	channelsAvailable.add(channels);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWb1YiumEeyJjNOKZ7e9aA" name="isEmpty" specification="_dMJQ5SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWb1YyumEeyJjNOKZ7e9aA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWb1ZCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this timeSlot&#xD;
 	return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWccYCumEeyJjNOKZ7e9aA" name="removeChannel" specification="_dMJ38CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWccYSumEeyJjNOKZ7e9aA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWccYiumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWccYyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 	ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 	result = channels.remove(channel);&#xD;
 	return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWccZCumEeyJjNOKZ7e9aA" name="addChannel" specification="_dMJ39CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWccZSumEeyJjNOKZ7e9aA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWccZiumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWccZyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 	ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 	result = channels.add(channel); // remove the channel, returning the result&#xD;
 	return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWccaCumEeyJjNOKZ7e9aA" name="getNumChannels" specification="_dMJ3-CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWccaSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dMIp1SumEeyJjNOKZ7e9aA" name="Channels" visibility="package" method="_dWb1WiumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dMIp2CumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dMIp2SumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dMIp1iumEeyJjNOKZ7e9aA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMIp1yumEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMJQ4CumEeyJjNOKZ7e9aA" type="_dMICwCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMJQ4SumEeyJjNOKZ7e9aA" name="getChannelSet" method="_dWb1XiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMJQ4iumEeyJjNOKZ7e9aA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVJb4iumEeyJjNOKZ7e9aA" type="_dT-XMiumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMJQ5CumEeyJjNOKZ7e9aA" name="addNewChannelSet" method="_dWb1YSumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dMJQ5SumEeyJjNOKZ7e9aA" name="isEmpty" method="_dWb1YiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMJQ5iumEeyJjNOKZ7e9aA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMJQ5yumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMJ38CumEeyJjNOKZ7e9aA" name="removeChannel" method="_dWccYCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMJ38SumEeyJjNOKZ7e9aA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMJ38iumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMJ38yumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMJ39CumEeyJjNOKZ7e9aA" name="addChannel" method="_dWccZCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMJ39SumEeyJjNOKZ7e9aA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMJ39iumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMJ39yumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMJ3-CumEeyJjNOKZ7e9aA" name="getNumChannels" method="_dWccaCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMJ3-SumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_dMICwSumEeyJjNOKZ7e9aA" name="ChannelSet" visibility="private">
                <generalization xmi:id="_dVJb4CumEeyJjNOKZ7e9aA" general="_dT-XMiumEeyJjNOKZ7e9aA"/>
                <ownedAttribute xmi:id="_dVy8IiumEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_dVy8IyumEeyJjNOKZ7e9aA" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWb1VSumEeyJjNOKZ7e9aA" name="ChannelSet" specification="_dMICwiumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWb1ViumEeyJjNOKZ7e9aA" type="_dMICwSumEeyJjNOKZ7e9aA" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>super();&#xD;
	    </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWb1VyumEeyJjNOKZ7e9aA" name="ChannelSet" specification="_dMIp0CumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWb1WCumEeyJjNOKZ7e9aA" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_dWb1WSumEeyJjNOKZ7e9aA" type="_dMICwSumEeyJjNOKZ7e9aA" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>super();&#xD;
	    	for (int i = 0; i &lt; nChannels; i++) {  // ASSUMES channels range from 0 to nChannels-1&#xD;
	    		this.add(String.valueOf(i));&#xD;
	    	}&#xD;
	    </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_dMICwiumEeyJjNOKZ7e9aA" name="ChannelSet" visibility="private" method="_dWb1VSumEeyJjNOKZ7e9aA">
                  <eAnnotations xmi:id="_dMICwyumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_dMICxCumEeyJjNOKZ7e9aA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_dMICxSumEeyJjNOKZ7e9aA" type="_dMICwSumEeyJjNOKZ7e9aA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_dMIp0CumEeyJjNOKZ7e9aA" name="ChannelSet" visibility="private" method="_dWb1VyumEeyJjNOKZ7e9aA">
                  <eAnnotations xmi:id="_dMIp0iumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_dMIp0yumEeyJjNOKZ7e9aA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_dMIp0SumEeyJjNOKZ7e9aA" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_dMIp1CumEeyJjNOKZ7e9aA" type="_dMICwSumEeyJjNOKZ7e9aA" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMKfACumEeyJjNOKZ7e9aA" name="CodeFragment">
              <ownedAttribute xmi:id="_dVzjMiumEeyJjNOKZ7e9aA" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dVzjMyumEeyJjNOKZ7e9aA" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dVzjNCumEeyJjNOKZ7e9aA" name="edges" visibility="package" type="_dT-XMCumEeyJjNOKZ7e9aA" association="_dXGjsSumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV0KQSumEeyJjNOKZ7e9aA" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV0KQyumEeyJjNOKZ7e9aA" name="codeFragment" visibility="package" type="_dT-XMCumEeyJjNOKZ7e9aA" association="_dXGjtCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV0KRiumEeyJjNOKZ7e9aA" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV0xUSumEeyJjNOKZ7e9aA" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWccaiumEeyJjNOKZ7e9aA" name="CodeFragment" specification="_dMLGECumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWccayumEeyJjNOKZ7e9aA" type="_dMKfACumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWccbCumEeyJjNOKZ7e9aA" name="CodeFragment" specification="_dVKC8CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWccbSumEeyJjNOKZ7e9aA" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWccbiumEeyJjNOKZ7e9aA" name="edges" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWccbyumEeyJjNOKZ7e9aA" name="coordinators" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWcccCumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWcccSumEeyJjNOKZ7e9aA" type="_dMKfACumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWccciumEeyJjNOKZ7e9aA" name="getCoordinator" specification="_dMLGFCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWcccyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWccdCumEeyJjNOKZ7e9aA" name="instructions" specification="_dMLGFiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWccdSumEeyJjNOKZ7e9aA" type="_dT-XMCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWccdiumEeyJjNOKZ7e9aA" name="size" specification="_dMLtISumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWccdyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWcceCumEeyJjNOKZ7e9aA" name="generateCodeFragment" specification="_dMLtIyumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWcceSumEeyJjNOKZ7e9aA" name="getBaseInstruction" specification="_dMLtJCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWcceiumEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWcceyumEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWccfCumEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWccfSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWccfiumEeyJjNOKZ7e9aA" name="push" specification="_dMMUMCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWccfyumEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWccgCumEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWccgSumEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWccgiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWccgyumEeyJjNOKZ7e9aA" name="pull" specification="_dMMUNSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWcchCumEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWcchSumEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWcchiumEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWcchyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWdDcCumEeyJjNOKZ7e9aA" name="ifHas" specification="_dMMUOiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWdDcSumEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWdDciumEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWdDcyumEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWdDdCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWdDdSumEeyJjNOKZ7e9aA" name="ifNotHas" specification="_dMM7QCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWdDdiumEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWdDdyumEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWdDeCumEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWdDeSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWdDeiumEeyJjNOKZ7e9aA" name="wait" specification="_dMM7RSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWdDeyumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWdDfCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWdDfSumEeyJjNOKZ7e9aA" name="sleep" specification="_dMM7SCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWdDfiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWdDfyumEeyJjNOKZ7e9aA" name="reportIfDifferentCoordinators" specification="_dVKqAyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWdDgCumEeyJjNOKZ7e9aA" name="coordinators" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWdDgSumEeyJjNOKZ7e9aA" name="multipleCoordinators" specification="_dVLRESumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWdDgiumEeyJjNOKZ7e9aA" name="coordinators" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWdDgyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dMLGECumEeyJjNOKZ7e9aA" name="CodeFragment" visibility="package" method="_dWccaiumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dMLGESumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dMLGEiumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rZZNozd2EeykP74baAFnvg">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMLGEyumEeyJjNOKZ7e9aA" type="_dMKfACumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMLGFCumEeyJjNOKZ7e9aA" name="getCoordinator" method="_dWccciumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZZNpTd2EeykP74baAFnvg">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMLGFSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMLGFiumEeyJjNOKZ7e9aA" name="instructions" method="_dWccdCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZZNpjd2EeykP74baAFnvg">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_dVKqAiumEeyJjNOKZ7e9aA" type="_dT-XMCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMLtISumEeyJjNOKZ7e9aA" name="size" method="_dWccdiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZZNpzd2EeykP74baAFnvg">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMLtIiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMLtIyumEeyJjNOKZ7e9aA" name="generateCodeFragment" visibility="private" method="_dWcceCumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dMLtJCumEeyJjNOKZ7e9aA" name="getBaseInstruction" visibility="private" method="_dWcceSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMLtJSumEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMLtJiumEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMLtJyumEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMLtKCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMMUMCumEeyJjNOKZ7e9aA" name="push" visibility="private" method="_dWccfiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMMUMSumEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMMUMiumEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMMUMyumEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMMUNCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMMUNSumEeyJjNOKZ7e9aA" name="pull" visibility="private" method="_dWccgyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMMUNiumEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMMUNyumEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMMUOCumEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMMUOSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMMUOiumEeyJjNOKZ7e9aA" name="ifHas" visibility="private" method="_dWdDcCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMMUOyumEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMMUPCumEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMMUPSumEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMMUPiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMM7QCumEeyJjNOKZ7e9aA" name="ifNotHas" visibility="private" method="_dWdDdSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMM7QSumEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMM7QiumEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMM7QyumEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMM7RCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMM7RSumEeyJjNOKZ7e9aA" name="wait" method="_dWdDeiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMM7RiumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMM7RyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMM7SCumEeyJjNOKZ7e9aA" name="sleep" isStatic="true" method="_dWdDfSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMM7SSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dVKC8CumEeyJjNOKZ7e9aA" name="CodeFragment" visibility="package" method="_dWccbCumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dVKC9SumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dVKC9iumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rZZNpDd2EeykP74baAFnvg">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_dVKC8SumEeyJjNOKZ7e9aA" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVKC8iumEeyJjNOKZ7e9aA" name="edges" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVKC8yumEeyJjNOKZ7e9aA" name="coordinators" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVKC9CumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVKC9yumEeyJjNOKZ7e9aA" type="_dMKfACumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVKqAyumEeyJjNOKZ7e9aA" name="reportIfDifferentCoordinators" visibility="private" method="_dWdDfyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVKqBCumEeyJjNOKZ7e9aA" name="coordinators" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVLRESumEeyJjNOKZ7e9aA" name="multipleCoordinators" visibility="private" method="_dWdDgSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVLREiumEeyJjNOKZ7e9aA" name="coordinators" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVLREyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMNiUCumEeyJjNOKZ7e9aA" name="CombinedActivation">
              <generalization xmi:id="_dUEd2SumEeyJjNOKZ7e9aA" general="_dL_f4CumEeyJjNOKZ7e9aA"/>
              <interfaceRealization xmi:id="_dVL4ICumEeyJjNOKZ7e9aA" client="_dMNiUCumEeyJjNOKZ7e9aA" supplier="_dVG_oCumEeyJjNOKZ7e9aA" contract="_dVG_oCumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWdDhCumEeyJjNOKZ7e9aA" name="CombinedActivation" specification="_dMOJYCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWdDhSumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWdDhiumEeyJjNOKZ7e9aA" type="_dMNiUCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWdDhyumEeyJjNOKZ7e9aA" name="CombinedActivation" specification="_dUD2wCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWdDiCumEeyJjNOKZ7e9aA" name="elem" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWdDiSumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWdDiiumEeyJjNOKZ7e9aA" type="_dMNiUCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWdDiyumEeyJjNOKZ7e9aA" name="CombinedActivation" specification="_dUD2xiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWdDjCumEeyJjNOKZ7e9aA" name="priorEntry" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWdDjSumEeyJjNOKZ7e9aA" name="next" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWdDjiumEeyJjNOKZ7e9aA" type="_dMNiUCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWdqgCumEeyJjNOKZ7e9aA" name="canCombine" specification="_dUEd0yumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWdqgSumEeyJjNOKZ7e9aA" name="a2" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWdqgiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dMOJYCumEeyJjNOKZ7e9aA" name="CombinedActivation" visibility="package" method="_dWdDhCumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dMOJYiumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dMOJYyumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dMOJYSumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMOJZCumEeyJjNOKZ7e9aA" type="_dMNiUCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUD2wCumEeyJjNOKZ7e9aA" name="CombinedActivation" visibility="package" method="_dWdDhyumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUD2wyumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUD2xCumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUD2wSumEeyJjNOKZ7e9aA" name="elem" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUD2wiumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUD2xSumEeyJjNOKZ7e9aA" type="_dMNiUCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUD2xiumEeyJjNOKZ7e9aA" name="CombinedActivation" visibility="package" method="_dWdDiyumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUEd0CumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUEd0SumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUD2xyumEeyJjNOKZ7e9aA" name="priorEntry" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUD2yCumEeyJjNOKZ7e9aA" name="next" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUEd0iumEeyJjNOKZ7e9aA" type="_dMNiUCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUEd0yumEeyJjNOKZ7e9aA" name="canCombine" method="_dWdqgCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUEd1CumEeyJjNOKZ7e9aA" name="a2" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUEd1SumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMOwcCumEeyJjNOKZ7e9aA" name="CommunicationGraph">
              <ownedComment xmi:id="_rZZNqDd2EeykP74baAFnvg">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dUFE8CumEeyJjNOKZ7e9aA" general="_dNacMCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV0xUyumEeyJjNOKZ7e9aA" name="wfm" visibility="package" type="_dMWsQCumEeyJjNOKZ7e9aA" association="_dXGjtyumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV0xVSumEeyJjNOKZ7e9aA" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV1YYSumEeyJjNOKZ7e9aA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV1YYyumEeyJjNOKZ7e9aA" name="workLoad" visibility="package" type="_dN6LcCumEeyJjNOKZ7e9aA" association="_dXGjuiumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWdqgyumEeyJjNOKZ7e9aA" name="CommunicationGraph" specification="_dUFE4CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWdqhCumEeyJjNOKZ7e9aA" name="fm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWdqhSumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWdqhiumEeyJjNOKZ7e9aA" type="_dMOwcCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWdqhyumEeyJjNOKZ7e9aA" name="CommunicationGraph" specification="_dUFE5iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWdqiCumEeyJjNOKZ7e9aA" name="fm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWdqiSumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWdqiiumEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWdqiyumEeyJjNOKZ7e9aA" type="_dMOwcCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWdqjCumEeyJjNOKZ7e9aA" name="createHeader" specification="_dMPXgCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWdqjSumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWdqjiumEeyJjNOKZ7e9aA" name="createFooter" specification="_dMP-kiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWdqjyumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWdqkCumEeyJjNOKZ7e9aA" name="visualization" specification="_dMP-liumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWdqkSumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getLinkCommunicationCosts(flowName); &#xD;
         var totalCost = workLoad.getTotalCommunicationCost(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWdqkiumEeyJjNOKZ7e9aA" name="createWarpFileContent" specification="_dMQloCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWdqkyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dMPXgCumEeyJjNOKZ7e9aA" name="createHeader" method="_dWdqjCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUFE7SumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMP-kiumEeyJjNOKZ7e9aA" name="createFooter" method="_dWdqjiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUFE7iumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMP-liumEeyJjNOKZ7e9aA" name="visualization" method="_dWdqkCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUFE7yumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMQloCumEeyJjNOKZ7e9aA" name="createWarpFileContent" method="_dWdqkiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMQloSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUFE4CumEeyJjNOKZ7e9aA" name="CommunicationGraph" method="_dWdqgyumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUFE4yumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUFE5CumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUFE4SumEeyJjNOKZ7e9aA" name="fm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUFE4iumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUFE5SumEeyJjNOKZ7e9aA" type="_dMOwcCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUFE5iumEeyJjNOKZ7e9aA" name="CommunicationGraph" method="_dWdqhyumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUFE6iumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUFE6yumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUFE5yumEeyJjNOKZ7e9aA" name="fm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUFE6CumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUFE6SumEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUFE7CumEeyJjNOKZ7e9aA" type="_dMOwcCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMRMsCumEeyJjNOKZ7e9aA" name="ConnectivityPoset">
              <ownedComment xmi:id="_rZZNqTd2EeykP74baAFnvg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_dUFr9SumEeyJjNOKZ7e9aA" general="_dMq1UCumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWdqlCumEeyJjNOKZ7e9aA" name="ConnectivityPoset" specification="_dUFr8CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWdqlSumEeyJjNOKZ7e9aA" name="workload" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWdqliumEeyJjNOKZ7e9aA" type="_dMRMsCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWdqlyumEeyJjNOKZ7e9aA" name="findCoordinator" specification="_dVMfMCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWdqmCumEeyJjNOKZ7e9aA" name="nodesInFlow" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWdqmSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dUFr8CumEeyJjNOKZ7e9aA" name="ConnectivityPoset" visibility="package" method="_dWdqlCumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUFr8iumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUFr8yumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUFr8SumEeyJjNOKZ7e9aA" name="workload" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUFr9CumEeyJjNOKZ7e9aA" type="_dMRMsCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVMfMCumEeyJjNOKZ7e9aA" name="findCoordinator" visibility="protected" method="_dWdqlyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVMfMSumEeyJjNOKZ7e9aA" name="nodesInFlow" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVMfMiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMRMsSumEeyJjNOKZ7e9aA" name="DeadlineComparator">
              <interfaceRealization xmi:id="_dVNGQCumEeyJjNOKZ7e9aA" client="_dMRMsSumEeyJjNOKZ7e9aA" supplier="_dUFr9iumEeyJjNOKZ7e9aA" contract="_dUFr9iumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWeRkCumEeyJjNOKZ7e9aA" name="compare" specification="_dVNtUCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWeRkSumEeyJjNOKZ7e9aA" name="obj1" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWeRkiumEeyJjNOKZ7e9aA" name="obj2" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWeRkyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dVNtUCumEeyJjNOKZ7e9aA" name="compare" method="_dWeRkCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVNtUSumEeyJjNOKZ7e9aA" name="obj1" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVNtUiumEeyJjNOKZ7e9aA" name="obj2" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVNtUyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMRzwSumEeyJjNOKZ7e9aA" name="Description">
              <ownedComment xmi:id="_rZZNqjd2EeykP74baAFnvg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dVOUYCumEeyJjNOKZ7e9aA" general="_dT-XMCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV1YZSumEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV1YZiumEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWeRlCumEeyJjNOKZ7e9aA" name="Description" specification="_dMSa0CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWeRlSumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWeRliumEeyJjNOKZ7e9aA" name="Description" specification="_dMSa1CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWeRlyumEeyJjNOKZ7e9aA" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWeRmCumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWeRmSumEeyJjNOKZ7e9aA" name="toString" specification="_dMSa2SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWeRmiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dMSa0CumEeyJjNOKZ7e9aA" name="Description" method="_dWeRlCumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dMSa0SumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dMSa0iumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dMSa0yumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMSa1CumEeyJjNOKZ7e9aA" name="Description" method="_dWeRliumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dMSa1iumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dMSa1yumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dMSa1SumEeyJjNOKZ7e9aA" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMSa2CumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMSa2SumEeyJjNOKZ7e9aA" name="toString" method="_dWeRmSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMTB4CumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMTB5CumEeyJjNOKZ7e9aA" name="Edge">
              <generalization xmi:id="_dUG6FCumEeyJjNOKZ7e9aA" general="_dNCowCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV1YZyumEeyJjNOKZ7e9aA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV1_cCumEeyJjNOKZ7e9aA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV1_cSumEeyJjNOKZ7e9aA" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV1_ciumEeyJjNOKZ7e9aA" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV1_cyumEeyJjNOKZ7e9aA" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV1_dCumEeyJjNOKZ7e9aA" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV1_dSumEeyJjNOKZ7e9aA" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV1_diumEeyJjNOKZ7e9aA" name="state" type="_dMTo8CumEeyJjNOKZ7e9aA" association="_dW1d8CumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV1_dyumEeyJjNOKZ7e9aA" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_dVOUYiumEeyJjNOKZ7e9aA" client="_dMTB5CumEeyJjNOKZ7e9aA" supplier="_dVG_oCumEeyJjNOKZ7e9aA" contract="_dVG_oCumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWeRmyumEeyJjNOKZ7e9aA" name="Edge" specification="_dMUQAiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWeRnCumEeyJjNOKZ7e9aA" type="_dMTB5CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWeRnSumEeyJjNOKZ7e9aA" name="Edge" specification="_dMU3ECumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWeRniumEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWeRnyumEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWeRoCumEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWeRoSumEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWeRoiumEeyJjNOKZ7e9aA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWeRoyumEeyJjNOKZ7e9aA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWeRpCumEeyJjNOKZ7e9aA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWeRpSumEeyJjNOKZ7e9aA" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWeRpiumEeyJjNOKZ7e9aA" type="_dMTB5CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWeRpyumEeyJjNOKZ7e9aA" name="compareTo" specification="_dUGTACumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWeRqCumEeyJjNOKZ7e9aA" name="edge" type="_dMTB5CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWeRqSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWeRqiumEeyJjNOKZ7e9aA" name="toString" specification="_dMVeICumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWeRqyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWeRrCumEeyJjNOKZ7e9aA" name="print" specification="_dMVeJSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWeRrSumEeyJjNOKZ7e9aA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWe4oCumEeyJjNOKZ7e9aA" name="print" specification="_dMWFMiumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dMUQAiumEeyJjNOKZ7e9aA" name="Edge" visibility="package" method="_dWeRmyumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dMUQAyumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dMUQBCumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dMUQBSumEeyJjNOKZ7e9aA" type="_dMTB5CumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMU3ECumEeyJjNOKZ7e9aA" name="Edge" visibility="package" method="_dWeRnSumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dMU3GSumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dMU3GiumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dMU3ESumEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMU3EiumEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMU3EyumEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMU3FCumEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMU3FSumEeyJjNOKZ7e9aA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMU3FiumEeyJjNOKZ7e9aA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMU3FyumEeyJjNOKZ7e9aA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMU3GCumEeyJjNOKZ7e9aA" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMU3GyumEeyJjNOKZ7e9aA" type="_dMTB5CumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMVeICumEeyJjNOKZ7e9aA" name="toString" method="_dWeRqiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMVeISumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMVeJSumEeyJjNOKZ7e9aA" name="print" method="_dWeRrCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMVeJiumEeyJjNOKZ7e9aA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMWFMiumEeyJjNOKZ7e9aA" name="print" method="_dWe4oCumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dUGTACumEeyJjNOKZ7e9aA" name="compareTo" method="_dWeRpyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUGTASumEeyJjNOKZ7e9aA" name="edge" type="_dMTB5CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUG6ECumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_dMTo8CumEeyJjNOKZ7e9aA" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_dMTo8iumEeyJjNOKZ7e9aA" name="RELEASED"/>
                <ownedLiteral xmi:id="_dMUQACumEeyJjNOKZ7e9aA" name="EXECUTING"/>
                <ownedLiteral xmi:id="_dMUQASumEeyJjNOKZ7e9aA" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMWsQCumEeyJjNOKZ7e9aA" name="FileManager">
              <ownedComment xmi:id="_rZZ0sDd2EeykP74baAFnvg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dV2mgCumEeyJjNOKZ7e9aA" name="COURSE_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV2mgSumEeyJjNOKZ7e9aA" value="&quot;// Course CS2820 Authentication Tag&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV2mgiumEeyJjNOKZ7e9aA" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV2mgyumEeyJjNOKZ7e9aA" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWe4oSumEeyJjNOKZ7e9aA" name="FileManager" specification="_dMXTUCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWe4oiumEeyJjNOKZ7e9aA" type="_dMWsQCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the base directory&#xD;
		// constructor for this class	&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWe4oyumEeyJjNOKZ7e9aA" name="FileManager" specification="_dMXTVCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWe4pCumEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWe4pSumEeyJjNOKZ7e9aA" type="_dMWsQCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the base directory&#xD;
		// constructor for this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWe4piumEeyJjNOKZ7e9aA" name="getDocumentsDirectory" specification="_dMXTWSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWe4pyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
		String documentsDirectory;&#xD;
		if ( OSValidator.isWindows() ) {&#xD;
			documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
		} else if ( OSValidator.isMac() ) {&#xD;
			documentsDirectory = System.getProperty(&quot;user.home&quot;)+File.separator+&quot;Documents&quot;;&#xD;
		} else { // for all other Unix systems&#xD;
			documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not MACOS)&#xD;
		}&#xD;
		return documentsDirectory;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWe4qCumEeyJjNOKZ7e9aA" name="getCurrentDirectory" specification="_dMX6YCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWe4qSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWe4qiumEeyJjNOKZ7e9aA" name="createFile" specification="_dMX6YiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWe4qyumEeyJjNOKZ7e9aA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWe4rCumEeyJjNOKZ7e9aA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWe4rSumEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWe4riumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* we don't actually create the file...it will be created when written to&#xD;
		 * this routine really just creates the file name ;-)&#xD;
		 */&#xD;
		Integer suffixIndex = file.lastIndexOf('.');&#xD;
		String fileString = file;&#xD;
		if (suffixIndex > 0) {  // if a suffix exists, index will be > 0&#xD;
			fileString = file.substring(0,suffixIndex); // get the file string sans the suffix&#xD;
		}&#xD;
		/* fileString has no suffix at this point (removed if it existed)&#xD;
		 * Now add file name extension and suffix&#xD;
		 */&#xD;
		fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
		}&#xD;
		return fileString; &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWe4ryumEeyJjNOKZ7e9aA" name="createFile" specification="_dMX6ZyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWe4sCumEeyJjNOKZ7e9aA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWe4sSumEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWe4siumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
		String fileString = file;&#xD;
		if (suffixIndex > 0) {  // if a suffix exists, index will be > 0&#xD;
			fileString = file.substring(0,suffixIndex-1); // get the file string sans the suffix&#xD;
		}&#xD;
		// fileString has no suffix at this point (removed if it existed)&#xD;
		// Now add file name extension and suffix&#xD;
		fileString = fileString + suffix;&#xD;
		// we don't actually create the file...it will be created when written to&#xD;
		// this routine really just creates the file name ;-)&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
		}&#xD;
		return fileString; &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWe4syumEeyJjNOKZ7e9aA" name="createDirectory" specification="_dMYhcCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWe4tCumEeyJjNOKZ7e9aA" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWe4tSumEeyJjNOKZ7e9aA" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWe4tiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory; &#xD;
		if (subDirectory.startsWith(&quot;/&quot;)) {  // check if full path provided&#xD;
			newDirectory = subDirectory ; // if subDirectory is a full path, use it.&#xD;
		} else { // subDirectory has relative path, so just append&#xD;
			newDirectory = directory + File.separator + subDirectory;&#xD;
		}&#xD;
		try {&#xD;
			Path path = Paths.get(newDirectory);&#xD;
			Files.createDirectories(path);&#xD;
			if (verbose) {&#xD;
				System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
			}&#xD;
		} catch (IOException e) {&#xD;
			System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
			newDirectory = directory;  // in case of error, just use the initial directory&#xD;
		}&#xD;
		return newDirectory;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWe4tyumEeyJjNOKZ7e9aA" name="writeFile" specification="_dMYhdCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWe4uCumEeyJjNOKZ7e9aA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWe4uSumEeyJjNOKZ7e9aA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Authentication tag = new Authentication(COURSE_TAG);&#xD;
		Path fileName = Path.of(file);&#xD;
		try {&#xD;
			Files.writeString(fileName, tag.sign(fileContents));&#xD;
		} catch (IOException e) {&#xD;
			// handle error&#xD;
			System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
		} // the file will be closed automatically upon exit of this try block&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWe4uiumEeyJjNOKZ7e9aA" name="readFile" specification="_dMYhdyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWe4uyumEeyJjNOKZ7e9aA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWe4vCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
		Path fileName = Path.of(file);&#xD;
		String contents = null;&#xD;
		try {&#xD;
			contents = Files.readString(fileName);&#xD;
		} catch (IOException e) {&#xD;
			// handle error&#xD;
			System.err.println(&quot;Error on reading file&quot; + file +&quot;: &quot; + e.getMessage());&#xD;
		} // the file will be closed automatically upon exit of this try block&#xD;
		return contents;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dMXTUCumEeyJjNOKZ7e9aA" name="FileManager" method="_dWe4oSumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dMXTUSumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dMXTUiumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rZZ0sTd2EeykP74baAFnvg">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMXTUyumEeyJjNOKZ7e9aA" type="_dMWsQCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMXTVCumEeyJjNOKZ7e9aA" name="FileManager" method="_dWe4oyumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dMXTViumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dMXTVyumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dMXTVSumEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMXTWCumEeyJjNOKZ7e9aA" type="_dMWsQCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMXTWSumEeyJjNOKZ7e9aA" name="getDocumentsDirectory" method="_dWe4piumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMXTWiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMX6YCumEeyJjNOKZ7e9aA" name="getCurrentDirectory" method="_dWe4qCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMX6YSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMX6YiumEeyJjNOKZ7e9aA" name="createFile" method="_dWe4qiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZZ0sjd2EeykP74baAFnvg">
                  <body>Build the name extension used for all files created by this tool.&#xD;
	 * The nameExtension will be added to the base input file name&#xD;
	 * so that all of the output files can be associated with the input file&#xD;
	 * The file naming pattern is:&#xD;
	 * baseFileNameFileType-NonDefaultParameterList&#xD;
	 * where FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray&#xD;
	 * Default parameters are not identified in the NameExtension&#xD;
	 * All parameters used to create the file, should be listed near the top&#xD;
	 * of the file in the Parameter Section, followed by the file contents.&#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMX6YyumEeyJjNOKZ7e9aA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMX6ZCumEeyJjNOKZ7e9aA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMX6ZSumEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMX6ZiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMX6ZyumEeyJjNOKZ7e9aA" name="createFile" method="_dWe4ryumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMX6aCumEeyJjNOKZ7e9aA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMX6aSumEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMX6aiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMYhcCumEeyJjNOKZ7e9aA" name="createDirectory" method="_dWe4syumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMYhcSumEeyJjNOKZ7e9aA" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMYhciumEeyJjNOKZ7e9aA" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMYhcyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMYhdCumEeyJjNOKZ7e9aA" name="writeFile" method="_dWe4tyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMYhdSumEeyJjNOKZ7e9aA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMYhdiumEeyJjNOKZ7e9aA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMYhdyumEeyJjNOKZ7e9aA" name="readFile" method="_dWe4uiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMYheCumEeyJjNOKZ7e9aA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMYheSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMZIgCumEeyJjNOKZ7e9aA" name="Flow">
              <ownedComment xmi:id="_rZZ0szd2EeykP74baAFnvg">
                <body>Represents a Flow which is a chain of nodes and edges that carries data between sensors, controllers and actuators&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dUJ9aCumEeyJjNOKZ7e9aA" general="_dNCowCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV2mhSumEeyJjNOKZ7e9aA" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV2mhiumEeyJjNOKZ7e9aA" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV2mhyumEeyJjNOKZ7e9aA" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV3NkCumEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV3NkSumEeyJjNOKZ7e9aA" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV3NkiumEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV3NkyumEeyJjNOKZ7e9aA" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV3NlCumEeyJjNOKZ7e9aA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV3NlSumEeyJjNOKZ7e9aA" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV3NliumEeyJjNOKZ7e9aA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV3NlyumEeyJjNOKZ7e9aA" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV3NmCumEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV3NmSumEeyJjNOKZ7e9aA" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV3NmiumEeyJjNOKZ7e9aA" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV3NnCumEeyJjNOKZ7e9aA" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV30oSumEeyJjNOKZ7e9aA" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV30oyumEeyJjNOKZ7e9aA" name="nodes" visibility="package" type="_dT-XMCumEeyJjNOKZ7e9aA" association="_dXHKwSumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV30piumEeyJjNOKZ7e9aA" name="linkTxAndTotalCost" visibility="package" type="_dT-XMCumEeyJjNOKZ7e9aA" association="_dXHKxCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV4bsiumEeyJjNOKZ7e9aA" name="edges" visibility="package" type="_dT-XMCumEeyJjNOKZ7e9aA" association="_dXHKxyumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV4btSumEeyJjNOKZ7e9aA" name="nodePredecessor" visibility="package" type="_dMl80SumEeyJjNOKZ7e9aA" association="_dXHx0SumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV5CwCumEeyJjNOKZ7e9aA" name="edgePredecessor" visibility="package" type="_dMTB5CumEeyJjNOKZ7e9aA" association="_dXHx1CumEeyJjNOKZ7e9aA"/>
              <interfaceRealization xmi:id="_dVPigCumEeyJjNOKZ7e9aA" client="_dMZIgCumEeyJjNOKZ7e9aA" supplier="_dVG_oCumEeyJjNOKZ7e9aA" contract="_dVG_oCumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWffsCumEeyJjNOKZ7e9aA" name="Flow" specification="_dMZvkCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWffsSumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWffsiumEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWffsyumEeyJjNOKZ7e9aA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWfftCumEeyJjNOKZ7e9aA" type="_dMZIgCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWfftSumEeyJjNOKZ7e9aA" name="Flow" specification="_dMZvlyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWfftiumEeyJjNOKZ7e9aA" type="_dMZIgCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWfftyumEeyJjNOKZ7e9aA" name="getInitialPriority" specification="_dMaWoCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWffuCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWffuSumEeyJjNOKZ7e9aA" name="getIndex" specification="_dMaWoiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWffuiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWffuyumEeyJjNOKZ7e9aA" name="getNumTxPerLink" specification="_dMaWpCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWffvCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWffvSumEeyJjNOKZ7e9aA" name="getNodes" specification="_dMaWpiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWffviumEeyJjNOKZ7e9aA" type="_dT-XMCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWffvyumEeyJjNOKZ7e9aA" name="getEdges" specification="_dMa9sCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWffwCumEeyJjNOKZ7e9aA" type="_dT-XMCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWffwSumEeyJjNOKZ7e9aA" name="addEdge" specification="_dUJWUCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWffwiumEeyJjNOKZ7e9aA" name="edge" type="_dMTB5CumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWffwyumEeyJjNOKZ7e9aA" name="addNode" specification="_dUJ9YCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWffxCumEeyJjNOKZ7e9aA" name="node" type="_dMl80SumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgGwCumEeyJjNOKZ7e9aA" name="getLinkTxAndTotalCost" specification="_dMa9siumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWgGwSumEeyJjNOKZ7e9aA" type="_dT-XMCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgGwiumEeyJjNOKZ7e9aA" name="setInitialPriority" specification="_dMbkwCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWgGwyumEeyJjNOKZ7e9aA" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgGxCumEeyJjNOKZ7e9aA" name="setIndex" specification="_dMbkwiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWgGxSumEeyJjNOKZ7e9aA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgGxiumEeyJjNOKZ7e9aA" name="setNumTxPerLink" specification="_dMbkxCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWgGxyumEeyJjNOKZ7e9aA" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgGyCumEeyJjNOKZ7e9aA" name="setNodes" specification="_dVQJkyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWgGySumEeyJjNOKZ7e9aA" name="nodes" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgGyiumEeyJjNOKZ7e9aA" name="setLinkTxAndTotalCost" specification="_dVQwoSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWgGyyumEeyJjNOKZ7e9aA" name="linkTxAndTotalCost" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgGzCumEeyJjNOKZ7e9aA" name="compareTo" specification="_dUJ9YiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWgGzSumEeyJjNOKZ7e9aA" name="flow" type="_dMZIgCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWgGziumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgGzyumEeyJjNOKZ7e9aA" name="toString" specification="_dMbkxiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWgG0CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dMZvkCumEeyJjNOKZ7e9aA" name="Flow" visibility="package" method="_dWffsCumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dMZvlCumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dMZvlSumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rZZ0tDd2EeykP74baAFnvg">
                  <body>Constructor that initializes a flow and sets the name, priority, and index according to given parameters&#xD;
     * @param name Flow's name&#xD;
     * @param priority Flow's system-wide priority&#xD;
     * @param index Flow's index</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMZvkSumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMZvkiumEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMZvkyumEeyJjNOKZ7e9aA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMZvliumEeyJjNOKZ7e9aA" type="_dMZIgCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMZvlyumEeyJjNOKZ7e9aA" name="Flow" visibility="package" method="_dWfftSumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dMZvmCumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dMZvmSumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rZZ0tTd2EeykP74baAFnvg">
                  <body>Constructor for a Flow without parameters, initializes a Flow with default values</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMZvmiumEeyJjNOKZ7e9aA" type="_dMZIgCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMaWoCumEeyJjNOKZ7e9aA" name="getInitialPriority" method="_dWfftyumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZZ0tjd2EeykP74baAFnvg">
                  <body>@return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMaWoSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMaWoiumEeyJjNOKZ7e9aA" name="getIndex" method="_dWffuSumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZZ0tzd2EeykP74baAFnvg">
                  <body>@return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMaWoyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMaWpCumEeyJjNOKZ7e9aA" name="getNumTxPerLink" method="_dWffuyumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZZ0uDd2EeykP74baAFnvg">
                  <body>@return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMaWpSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMaWpiumEeyJjNOKZ7e9aA" name="getNodes" method="_dWffvSumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZZ0uTd2EeykP74baAFnvg">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_dVQJkCumEeyJjNOKZ7e9aA" type="_dT-XMCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMa9sCumEeyJjNOKZ7e9aA" name="getEdges" method="_dWffvyumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZZ0ujd2EeykP74baAFnvg">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_dVQJkSumEeyJjNOKZ7e9aA" type="_dT-XMCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMa9siumEeyJjNOKZ7e9aA" name="getLinkTxAndTotalCost" method="_dWgGwCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZZ0vTd2EeykP74baAFnvg">
                  <body>@return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_dVQJkiumEeyJjNOKZ7e9aA" type="_dT-XMCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMbkwCumEeyJjNOKZ7e9aA" name="setInitialPriority" method="_dWgGwiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZZ0vjd2EeykP74baAFnvg">
                  <body>@param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMbkwSumEeyJjNOKZ7e9aA" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMbkwiumEeyJjNOKZ7e9aA" name="setIndex" method="_dWgGxCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZZ0vzd2EeykP74baAFnvg">
                  <body>@param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMbkwyumEeyJjNOKZ7e9aA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMbkxCumEeyJjNOKZ7e9aA" name="setNumTxPerLink" method="_dWgGxiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZZ0wDd2EeykP74baAFnvg">
                  <body>@param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMbkxSumEeyJjNOKZ7e9aA" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMbkxiumEeyJjNOKZ7e9aA" name="toString" method="_dWgGzyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMcL0CumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUJWUCumEeyJjNOKZ7e9aA" name="addEdge" method="_dWffwSumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZZ0uzd2EeykP74baAFnvg">
                  <body>Add and edge to the flow.&#xD;
	 * @param edge An edge to add</body>
                </ownedComment>
                <ownedParameter xmi:id="_dUJWUSumEeyJjNOKZ7e9aA" name="edge" type="_dMTB5CumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUJ9YCumEeyJjNOKZ7e9aA" name="addNode" method="_dWffwyumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZZ0vDd2EeykP74baAFnvg">
                  <body>Add and edge to the flow.&#xD;
	 * @param node A node to add</body>
                </ownedComment>
                <ownedParameter xmi:id="_dUJ9YSumEeyJjNOKZ7e9aA" name="node" type="_dMl80SumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUJ9YiumEeyJjNOKZ7e9aA" name="compareTo" method="_dWgGzCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUJ9YyumEeyJjNOKZ7e9aA" name="flow" type="_dMZIgCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUJ9ZCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dVQJkyumEeyJjNOKZ7e9aA" name="setNodes" method="_dWgGyCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZZ0wTd2EeykP74baAFnvg">
                  <body>@param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dVQJlCumEeyJjNOKZ7e9aA" name="nodes" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVQwoSumEeyJjNOKZ7e9aA" name="setLinkTxAndTotalCost" method="_dWgGyiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZZ0wjd2EeykP74baAFnvg">
                  <body>@param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dVQwoiumEeyJjNOKZ7e9aA" name="linkTxAndTotalCost" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMdZ8CumEeyJjNOKZ7e9aA" name="FlowMap">
              <ownedComment xmi:id="_rZZ0wzd2EeykP74baAFnvg">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dULLgCumEeyJjNOKZ7e9aA" general="_dL9qsCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV5CwiumEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV5CwyumEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMeBACumEeyJjNOKZ7e9aA" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_rZabwDd2EeykP74baAFnvg">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dULykCumEeyJjNOKZ7e9aA" general="_dL9qsCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV5CxCumEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV5CxSumEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMeoECumEeyJjNOKZ7e9aA" name="GraphViz">
              <ownedComment xmi:id="_rZabwTd2EeykP74baAFnvg">
                <body>@author sgoddard2&#xD;
Copyright Â© 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dUMZqiumEeyJjNOKZ7e9aA" general="_dNacMCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV5p0CumEeyJjNOKZ7e9aA" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV5p0SumEeyJjNOKZ7e9aA" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV5p0iumEeyJjNOKZ7e9aA" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV5p0yumEeyJjNOKZ7e9aA" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV5p1CumEeyJjNOKZ7e9aA" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV5p1iumEeyJjNOKZ7e9aA" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV5p2CumEeyJjNOKZ7e9aA" name="wfm" visibility="package" type="_dMWsQCumEeyJjNOKZ7e9aA" association="_dXHx1yumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV5p2iumEeyJjNOKZ7e9aA" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV6Q4SumEeyJjNOKZ7e9aA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV6Q4yumEeyJjNOKZ7e9aA" name="gv" visibility="package" type="_dMeoECumEeyJjNOKZ7e9aA" association="_dXIY4CumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgt0CumEeyJjNOKZ7e9aA" name="GraphViz" specification="_dULykiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWgt0SumEeyJjNOKZ7e9aA" name="wfm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWgt0iumEeyJjNOKZ7e9aA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWgt0yumEeyJjNOKZ7e9aA" type="_dMeoECumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgt1CumEeyJjNOKZ7e9aA" name="GraphViz" specification="_dUMZoiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWgt1SumEeyJjNOKZ7e9aA" name="wfm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWgt1iumEeyJjNOKZ7e9aA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWgt1yumEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWgt2CumEeyJjNOKZ7e9aA" type="_dMeoECumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgt2SumEeyJjNOKZ7e9aA" name="visualization" specification="_dMfPICumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWgt2iumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgt2yumEeyJjNOKZ7e9aA" name="initializeGraphVizContent" specification="_dMfPJCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWgt3CumEeyJjNOKZ7e9aA" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgt3SumEeyJjNOKZ7e9aA" name="finalizeGraphVizContent" specification="_dMfPJiumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgt3iumEeyJjNOKZ7e9aA" name="getGraphVizContent" specification="_dMfPJyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWgt3yumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgt4CumEeyJjNOKZ7e9aA" name="createGraphVizContent" specification="_dMf2MCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWgt4SumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgt4iumEeyJjNOKZ7e9aA" name="addFlowToGraphViz" specification="_dMf2MiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWgt4yumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgt5CumEeyJjNOKZ7e9aA" name="addSrcNodeToGraphViz" specification="_dMf2NCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWgt5SumEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgt5iumEeyJjNOKZ7e9aA" name="addSnkNodeToGraphViz" specification="_dMf2NiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWgt5yumEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgt6CumEeyJjNOKZ7e9aA" name="finalizeCurrentFlowInGraphViz" specification="_dMf2OCumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgt6SumEeyJjNOKZ7e9aA" name="addNodeName" specification="_dMf2OSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWgt6iumEeyJjNOKZ7e9aA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWgt6yumEeyJjNOKZ7e9aA" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dMfPICumEeyJjNOKZ7e9aA" name="visualization" method="_dWgt2SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUMZqSumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMfPJCumEeyJjNOKZ7e9aA" name="initializeGraphVizContent" method="_dWgt2yumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMfPJSumEeyJjNOKZ7e9aA" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMfPJiumEeyJjNOKZ7e9aA" name="finalizeGraphVizContent" method="_dWgt3SumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dMfPJyumEeyJjNOKZ7e9aA" name="getGraphVizContent" method="_dWgt3iumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZabwjd2EeykP74baAFnvg">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMfPKCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMf2MCumEeyJjNOKZ7e9aA" name="createGraphVizContent" method="_dWgt4CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMf2MSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMf2MiumEeyJjNOKZ7e9aA" name="addFlowToGraphViz" method="_dWgt4iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMf2MyumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMf2NCumEeyJjNOKZ7e9aA" name="addSrcNodeToGraphViz" method="_dWgt5CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMf2NSumEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMf2NiumEeyJjNOKZ7e9aA" name="addSnkNodeToGraphViz" method="_dWgt5iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMf2NyumEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMf2OCumEeyJjNOKZ7e9aA" name="finalizeCurrentFlowInGraphViz" method="_dWgt6CumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dMf2OSumEeyJjNOKZ7e9aA" name="addNodeName" visibility="private" method="_dWgt6SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMf2OiumEeyJjNOKZ7e9aA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMf2OyumEeyJjNOKZ7e9aA" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dULykiumEeyJjNOKZ7e9aA" name="GraphViz" visibility="package" method="_dWgt0CumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dULylSumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUMZoCumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dULykyumEeyJjNOKZ7e9aA" name="wfm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dULylCumEeyJjNOKZ7e9aA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUMZoSumEeyJjNOKZ7e9aA" type="_dMeoECumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUMZoiumEeyJjNOKZ7e9aA" name="GraphViz" visibility="package" method="_dWgt1CumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUMZpiumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUMZpyumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUMZoyumEeyJjNOKZ7e9aA" name="wfm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUMZpCumEeyJjNOKZ7e9aA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUMZpSumEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUMZqCumEeyJjNOKZ7e9aA" type="_dMeoECumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMhEUCumEeyJjNOKZ7e9aA" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_rZabwzd2EeykP74baAFnvg">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_dVR-wCumEeyJjNOKZ7e9aA" general="_dUNnxyumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV6Q5SumEeyJjNOKZ7e9aA" name="gv" visibility="package" type="_dMeoECumEeyJjNOKZ7e9aA" association="_dXIY4yumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWhU4CumEeyJjNOKZ7e9aA" name="GraphVizListener" specification="_dUOO1SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWhU4SumEeyJjNOKZ7e9aA" name="gv" type="_dMeoECumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWhU4iumEeyJjNOKZ7e9aA" type="_dMhEUCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWhU4yumEeyJjNOKZ7e9aA" name="buildGraphViz" specification="_dUO14yumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWhU5CumEeyJjNOKZ7e9aA" name="gv" type="_dMeoECumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWhU5SumEeyJjNOKZ7e9aA" name="enterWarpName" specification="_dUO15yumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWhU5iumEeyJjNOKZ7e9aA" name="ctx" type="_dUO15SumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWhU5yumEeyJjNOKZ7e9aA" name="exitWarp" specification="_dUPc9CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWhU6CumEeyJjNOKZ7e9aA" name="ctx" type="_dUPc8iumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWhU6SumEeyJjNOKZ7e9aA" name="enterFlowName" specification="_dUQEASumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWhU6iumEeyJjNOKZ7e9aA" name="ctx" type="_dUPc-SumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWhU6yumEeyJjNOKZ7e9aA" name="exitSrcNode" specification="_dUQECCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWhU7CumEeyJjNOKZ7e9aA" name="ctx" type="_dUQEBiumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWhU7SumEeyJjNOKZ7e9aA" name="exitSnkNode" specification="_dUQrFCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWhU7iumEeyJjNOKZ7e9aA" name="ctx" type="_dUQrEiumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWhU7yumEeyJjNOKZ7e9aA" name="exitFlow" specification="_dURSIiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWhU8CumEeyJjNOKZ7e9aA" name="ctx" type="_dURSICumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dUOO1SumEeyJjNOKZ7e9aA" name="GraphVizListener" visibility="private" method="_dWhU4CumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUO14CumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUO14SumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUOO1iumEeyJjNOKZ7e9aA" name="gv" type="_dMeoECumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUO14iumEeyJjNOKZ7e9aA" type="_dMhEUCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUO14yumEeyJjNOKZ7e9aA" name="buildGraphViz" isStatic="true" method="_dWhU4yumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUO15CumEeyJjNOKZ7e9aA" name="gv" type="_dMeoECumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUO15yumEeyJjNOKZ7e9aA" name="enterWarpName" method="_dWhU5SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUO16CumEeyJjNOKZ7e9aA" name="ctx" type="_dUO15SumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUPc9CumEeyJjNOKZ7e9aA" name="exitWarp" method="_dWhU5yumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUPc9SumEeyJjNOKZ7e9aA" name="ctx" type="_dUPc8iumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUQEASumEeyJjNOKZ7e9aA" name="enterFlowName" method="_dWhU6SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUQEAiumEeyJjNOKZ7e9aA" name="ctx" type="_dUPc-SumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUQECCumEeyJjNOKZ7e9aA" name="exitSrcNode" method="_dWhU6yumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUQECSumEeyJjNOKZ7e9aA" name="ctx" type="_dUQEBiumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUQrFCumEeyJjNOKZ7e9aA" name="exitSnkNode" method="_dWhU7SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUQrFSumEeyJjNOKZ7e9aA" name="ctx" type="_dUQrEiumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dURSIiumEeyJjNOKZ7e9aA" name="exitFlow" method="_dWhU7yumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dURSIyumEeyJjNOKZ7e9aA" name="ctx" type="_dURSICumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMhrYCumEeyJjNOKZ7e9aA" name="InputGraphFile">
              <ownedComment xmi:id="_rZabxDd2EeykP74baAFnvg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dV638CumEeyJjNOKZ7e9aA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV638SumEeyJjNOKZ7e9aA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV638iumEeyJjNOKZ7e9aA" name="wfm" visibility="private" type="_dMWsQCumEeyJjNOKZ7e9aA" association="_dXIY5iumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV639CumEeyJjNOKZ7e9aA" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV639SumEeyJjNOKZ7e9aA" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV639yumEeyJjNOKZ7e9aA" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV7fACumEeyJjNOKZ7e9aA" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWhU8SumEeyJjNOKZ7e9aA" name="InputGraphFile" specification="_dUSgQCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWhU8iumEeyJjNOKZ7e9aA" name="fm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWhU8yumEeyJjNOKZ7e9aA" type="_dMhrYCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWhU9CumEeyJjNOKZ7e9aA" name="InputGraphFile" specification="_dUSgRSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWhU9SumEeyJjNOKZ7e9aA" name="fm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWhU9iumEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWhU9yumEeyJjNOKZ7e9aA" type="_dMhrYCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWhU-CumEeyJjNOKZ7e9aA" name="setGraphFileName" specification="_dMiScCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWhU-SumEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWhU-iumEeyJjNOKZ7e9aA" name="verifyGraphFileName" specification="_dMiSciumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWhU-yumEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWh78CumEeyJjNOKZ7e9aA" name="readGraphFile" specification="_dMi5gCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWh78SumEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWh78iumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWh78yumEeyJjNOKZ7e9aA" name="getInputGraphFileName" specification="_dMi5gyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWh79CumEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWh79SumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWh79iumEeyJjNOKZ7e9aA" name="readGraphFileContents" specification="_dMi5hiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWh79yumEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWh7-CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWh7-SumEeyJjNOKZ7e9aA" name="printVerboseMessage" specification="_dMi5iSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWh7-iumEeyJjNOKZ7e9aA" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWh7-yumEeyJjNOKZ7e9aA" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWh7_CumEeyJjNOKZ7e9aA" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dMiScCumEeyJjNOKZ7e9aA" name="setGraphFileName" visibility="private" method="_dWhU-CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMiScSumEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMiSciumEeyJjNOKZ7e9aA" name="verifyGraphFileName" visibility="private" method="_dWhU-iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMiScyumEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMi5gCumEeyJjNOKZ7e9aA" name="readGraphFile" method="_dWh78CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMi5gSumEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMi5giumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMi5gyumEeyJjNOKZ7e9aA" name="getInputGraphFileName" visibility="private" method="_dWh78yumEeyJjNOKZ7e9aA" raisedException="_dVR-wSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMi5hCumEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMi5hSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMi5hiumEeyJjNOKZ7e9aA" name="readGraphFileContents" visibility="private" method="_dWh79iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMi5hyumEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMi5iCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMi5iSumEeyJjNOKZ7e9aA" name="printVerboseMessage" visibility="private" method="_dWh7-SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMi5iiumEeyJjNOKZ7e9aA" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMi5iyumEeyJjNOKZ7e9aA" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMi5jCumEeyJjNOKZ7e9aA" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUSgQCumEeyJjNOKZ7e9aA" name="InputGraphFile" method="_dWhU8SumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUSgQiumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUSgQyumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUSgQSumEeyJjNOKZ7e9aA" name="fm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUSgRCumEeyJjNOKZ7e9aA" type="_dMhrYCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUSgRSumEeyJjNOKZ7e9aA" name="InputGraphFile" method="_dWhU9CumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUSgSCumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUSgSSumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUSgRiumEeyJjNOKZ7e9aA" name="fm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUSgRyumEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUSgSiumEeyJjNOKZ7e9aA" type="_dMhrYCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMjgkCumEeyJjNOKZ7e9aA" name="InstructionTimeSlot">
              <generalization xmi:id="_dUTHUCumEeyJjNOKZ7e9aA" general="_dNBaoCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV7fAiumEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV7fAyumEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWh7_SumEeyJjNOKZ7e9aA" name="InstructionTimeSlot" specification="_dMkHoCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWh7_iumEeyJjNOKZ7e9aA" type="_dMjgkCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWh7_yumEeyJjNOKZ7e9aA" name="InstructionTimeSlot" specification="_dMkHpCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWh8ACumEeyJjNOKZ7e9aA" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWh8ASumEeyJjNOKZ7e9aA" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWh8AiumEeyJjNOKZ7e9aA" type="_dMjgkCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWh8AyumEeyJjNOKZ7e9aA" name="InstructionTimeSlot" specification="_dMkHqiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWh8BCumEeyJjNOKZ7e9aA" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWh8BSumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWh8BiumEeyJjNOKZ7e9aA" type="_dMjgkCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dMkHoCumEeyJjNOKZ7e9aA" name="InstructionTimeSlot" method="_dWh7_SumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dMkHoSumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dMkHoiumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dMkHoyumEeyJjNOKZ7e9aA" type="_dMjgkCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMkHpCumEeyJjNOKZ7e9aA" name="InstructionTimeSlot" visibility="package" method="_dWh7_yumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dMkHpyumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dMkHqCumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dMkHpSumEeyJjNOKZ7e9aA" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMkHpiumEeyJjNOKZ7e9aA" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMkHqSumEeyJjNOKZ7e9aA" type="_dMjgkCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMkHqiumEeyJjNOKZ7e9aA" name="InstructionTimeSlot" visibility="package" method="_dWh8AyumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dMkHrCumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dMkHrSumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dMkHqyumEeyJjNOKZ7e9aA" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dMkusSumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMkusCumEeyJjNOKZ7e9aA" type="_dMjgkCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMkusiumEeyJjNOKZ7e9aA" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_dVSl0SumEeyJjNOKZ7e9aA" client="_dMkusiumEeyJjNOKZ7e9aA" supplier="_dUFr9iumEeyJjNOKZ7e9aA" contract="_dUFr9iumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWh8ByumEeyJjNOKZ7e9aA" name="compare" specification="_dVTM4SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWh8CCumEeyJjNOKZ7e9aA" name="obj1" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWh8CSumEeyJjNOKZ7e9aA" name="obj2" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWh8CiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dVTM4SumEeyJjNOKZ7e9aA" name="compare" method="_dWh8ByumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVTM4iumEeyJjNOKZ7e9aA" name="obj1" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVTM4yumEeyJjNOKZ7e9aA" name="obj2" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVTM5CumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMlVwSumEeyJjNOKZ7e9aA" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_dVTz8CumEeyJjNOKZ7e9aA" client="_dMlVwSumEeyJjNOKZ7e9aA" supplier="_dUFr9iumEeyJjNOKZ7e9aA" contract="_dUFr9iumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWh8CyumEeyJjNOKZ7e9aA" name="compare" specification="_dVTz8iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWh8DCumEeyJjNOKZ7e9aA" name="obj1" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWh8DSumEeyJjNOKZ7e9aA" name="obj2" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWh8DiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dVTz8iumEeyJjNOKZ7e9aA" name="compare" method="_dWh8CyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVTz8yumEeyJjNOKZ7e9aA" name="obj1" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVTz9CumEeyJjNOKZ7e9aA" name="obj2" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVTz9SumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMl80SumEeyJjNOKZ7e9aA" name="Node">
              <generalization xmi:id="_dUUVdCumEeyJjNOKZ7e9aA" general="_dNCowCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV7fBCumEeyJjNOKZ7e9aA" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV7fBSumEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV8GECumEeyJjNOKZ7e9aA" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV8GESumEeyJjNOKZ7e9aA" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV8GEiumEeyJjNOKZ7e9aA" name="edges" type="_dT-XMCumEeyJjNOKZ7e9aA" isReadOnly="true" association="_dXIY6SumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV8GFCumEeyJjNOKZ7e9aA" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dV8GFSumEeyJjNOKZ7e9aA" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_dVUbAiumEeyJjNOKZ7e9aA" client="_dMl80SumEeyJjNOKZ7e9aA" supplier="_dVG_oCumEeyJjNOKZ7e9aA" contract="_dVG_oCumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWh8DyumEeyJjNOKZ7e9aA" name="Node" specification="_dMmj4CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWh8ECumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWh8ESumEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWh8EiumEeyJjNOKZ7e9aA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWh8EyumEeyJjNOKZ7e9aA" type="_dMl80SumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWijACumEeyJjNOKZ7e9aA" name="compareTo" specification="_dUTuYCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWijASumEeyJjNOKZ7e9aA" name="node" type="_dMl80SumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWijAiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWijAyumEeyJjNOKZ7e9aA" name="toString" specification="_dMmj5yumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWijBCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWijBSumEeyJjNOKZ7e9aA" name="addEdge" specification="_dUUVciumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWijBiumEeyJjNOKZ7e9aA" name="edge" type="_dMTB5CumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWijByumEeyJjNOKZ7e9aA" name="addConflict" specification="_dMnK8CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWijCCumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWijCSumEeyJjNOKZ7e9aA" name="numEdges" specification="_dMnK8iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWijCiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWijCyumEeyJjNOKZ7e9aA" name="print" specification="_dMnK9CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWijDCumEeyJjNOKZ7e9aA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWijDSumEeyJjNOKZ7e9aA" name="print" specification="_dMnK-SumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dMmj4CumEeyJjNOKZ7e9aA" name="Node" visibility="package" method="_dWh8DyumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dMmj5CumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dMmj5SumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dMmj4SumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMmj4iumEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMmj4yumEeyJjNOKZ7e9aA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMmj5iumEeyJjNOKZ7e9aA" type="_dMl80SumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMmj5yumEeyJjNOKZ7e9aA" name="toString" method="_dWijAyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMmj6CumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMnK8CumEeyJjNOKZ7e9aA" name="addConflict" method="_dWijByumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMnK8SumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMnK8iumEeyJjNOKZ7e9aA" name="numEdges" method="_dWijCSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMnK8yumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMnK9CumEeyJjNOKZ7e9aA" name="print" method="_dWijCyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMnK9SumEeyJjNOKZ7e9aA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMnK-SumEeyJjNOKZ7e9aA" name="print" method="_dWijDSumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dUTuYCumEeyJjNOKZ7e9aA" name="compareTo" method="_dWijACumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUTuYSumEeyJjNOKZ7e9aA" name="node" type="_dMl80SumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUTuYiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUUVciumEeyJjNOKZ7e9aA" name="addEdge" method="_dWijBSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUUVcyumEeyJjNOKZ7e9aA" name="edge" type="_dMTB5CumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMoZECumEeyJjNOKZ7e9aA" name="NodeMap">
              <ownedComment xmi:id="_rZabxTd2EeykP74baAFnvg">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (name, Node).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dUU8gCumEeyJjNOKZ7e9aA" general="_dL9qsCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV8GFiumEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV8tICumEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMoZESumEeyJjNOKZ7e9aA" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_rZabxjd2EeykP74baAFnvg">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dUU8iCumEeyJjNOKZ7e9aA" general="_dNLLoSumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWijDiumEeyJjNOKZ7e9aA" name="NonPreemptiveSchedule" specification="_dUU8giumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWijDyumEeyJjNOKZ7e9aA" name="poset" type="_dMq1UCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWijECumEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWijESumEeyJjNOKZ7e9aA" type="_dMoZESumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dUU8giumEeyJjNOKZ7e9aA" name="NonPreemptiveSchedule" visibility="package" method="_dWijDiumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUU8hSumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUU8hiumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUU8gyumEeyJjNOKZ7e9aA" name="poset" type="_dMq1UCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUU8hCumEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUU8hyumEeyJjNOKZ7e9aA" type="_dMoZESumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMpAICumEeyJjNOKZ7e9aA" name="NotImplentedVisualization">
              <generalization xmi:id="_dUVjkSumEeyJjNOKZ7e9aA" general="_dNacMCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV8tISumEeyJjNOKZ7e9aA" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV8tIiumEeyJjNOKZ7e9aA" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV8tIyumEeyJjNOKZ7e9aA" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV8tJCumEeyJjNOKZ7e9aA" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV8tJSumEeyJjNOKZ7e9aA" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV8tJiumEeyJjNOKZ7e9aA" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWijEiumEeyJjNOKZ7e9aA" name="NotImplentedVisualization" specification="_dMpAISumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWijEyumEeyJjNOKZ7e9aA" type="_dMpAICumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWijFCumEeyJjNOKZ7e9aA" name="NotImplentedVisualization" specification="_dMpAJSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWijFSumEeyJjNOKZ7e9aA" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWijFiumEeyJjNOKZ7e9aA" type="_dMpAICumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWijFyumEeyJjNOKZ7e9aA" name="visualization" specification="_dMpAKiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWijGCumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dMpAISumEeyJjNOKZ7e9aA" name="NotImplentedVisualization" visibility="package" method="_dWijEiumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dMpAIiumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dMpAIyumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dMpAJCumEeyJjNOKZ7e9aA" type="_dMpAICumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMpAJSumEeyJjNOKZ7e9aA" name="NotImplentedVisualization" visibility="package" method="_dWijFCumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dMpAJyumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dMpAKCumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dMpAJiumEeyJjNOKZ7e9aA" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMpAKSumEeyJjNOKZ7e9aA" type="_dMpAICumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMpAKiumEeyJjNOKZ7e9aA" name="visualization" method="_dWijFyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUVjkCumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMpnMyumEeyJjNOKZ7e9aA" name="PeriodComparator">
              <interfaceRealization xmi:id="_dVVCECumEeyJjNOKZ7e9aA" client="_dMpnMyumEeyJjNOKZ7e9aA" supplier="_dUFr9iumEeyJjNOKZ7e9aA" contract="_dUFr9iumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWijGSumEeyJjNOKZ7e9aA" name="compare" specification="_dVVpICumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWijGiumEeyJjNOKZ7e9aA" name="obj1" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWijGyumEeyJjNOKZ7e9aA" name="obj2" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWijHCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dVVpICumEeyJjNOKZ7e9aA" name="compare" method="_dWijGSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVVpISumEeyJjNOKZ7e9aA" name="obj1" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVVpIiumEeyJjNOKZ7e9aA" name="obj2" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVVpIyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMq1UCumEeyJjNOKZ7e9aA" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_rZabxzd2EeykP74baAFnvg">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dV8tJyumEeyJjNOKZ7e9aA" name="activations" visibility="private" type="_dMHbsCumEeyJjNOKZ7e9aA" association="_dXI_8SumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV8tKSumEeyJjNOKZ7e9aA" name="workload" visibility="private" type="_dN6LcCumEeyJjNOKZ7e9aA" association="_dXI_9CumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV9UMSumEeyJjNOKZ7e9aA" name="flows" visibility="protected" type="_dMZIgCumEeyJjNOKZ7e9aA" association="_dXI_9yumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dV9UMyumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dV9UNCumEeyJjNOKZ7e9aA" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dV9UMiumEeyJjNOKZ7e9aA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV9UNiumEeyJjNOKZ7e9aA" name="nodes" visibility="private" type="_dMl80SumEeyJjNOKZ7e9aA" association="_dXJnACumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dV9UOCumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dV9UOSumEeyJjNOKZ7e9aA" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dV9UNyumEeyJjNOKZ7e9aA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV9UOyumEeyJjNOKZ7e9aA" name="nodeMap" visibility="private" type="_dMoZECumEeyJjNOKZ7e9aA" association="_dXJnAyumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV97QCumEeyJjNOKZ7e9aA" name="priorityQueue" visibility="private" type="_dM9JMiumEeyJjNOKZ7e9aA" association="_dXJnBiumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV97QyumEeyJjNOKZ7e9aA" name="nodeConnectivityMap" visibility="protected" type="_dT9wICumEeyJjNOKZ7e9aA" association="_dXKOESumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV97RiumEeyJjNOKZ7e9aA" name="activationMap" visibility="package" type="_dMeBACumEeyJjNOKZ7e9aA" association="_dXKOFCumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjKECumEeyJjNOKZ7e9aA" name="Poset" specification="_dUWKoCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjKESumEeyJjNOKZ7e9aA" name="workload" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWjKEiumEeyJjNOKZ7e9aA" type="_dMq1UCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjKEyumEeyJjNOKZ7e9aA" name="getNodeConnectivity" specification="_dMrcYCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjKFCumEeyJjNOKZ7e9aA" type="_dT9wICumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjKFSumEeyJjNOKZ7e9aA" name="getNodeNames" specification="_dMrcYiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjKFiumEeyJjNOKZ7e9aA" type="_dT-XMCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjKFyumEeyJjNOKZ7e9aA" name="getNodesNamesOrderedAlphabetically" specification="_dMsDcSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjKGCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWjKGSumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjKGiumEeyJjNOKZ7e9aA" name="buildPosetOfActivations" specification="_dMsDdSumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjKGyumEeyJjNOKZ7e9aA" name="createEdgeLists" specification="_dMsDdiumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getLinkCommunicationCosts(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjKHCumEeyJjNOKZ7e9aA" name="createConflictLists" specification="_dMsDdyumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjKHSumEeyJjNOKZ7e9aA" name="createGlobalConflictLists" specification="_dMsqgCumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjKHiumEeyJjNOKZ7e9aA" name="createLocalConflictLists" specification="_dMsqgSumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjKHyumEeyJjNOKZ7e9aA" name="findCoordinator" specification="_dVWQMiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjKICumEeyJjNOKZ7e9aA" name="nodesInFlow" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWjKISumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjKIiumEeyJjNOKZ7e9aA" name="buildTxArray" specification="_dVW3QSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjKIyumEeyJjNOKZ7e9aA" name="nodesInFlow" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWjKJCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWjKJSumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjKJiumEeyJjNOKZ7e9aA" name="createInitialActivations" specification="_dMsqgiumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjKJyumEeyJjNOKZ7e9aA" name="getMaxTx" specification="_dUWKpSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjKKCumEeyJjNOKZ7e9aA" name="node" type="_dMl80SumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWjKKSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjKKiumEeyJjNOKZ7e9aA" name="getActivation" specification="_dUWxsCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjKKyumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWjKLCumEeyJjNOKZ7e9aA" name="node" type="_dMl80SumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWjKLSumEeyJjNOKZ7e9aA" type="_dL_f4CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjKLiumEeyJjNOKZ7e9aA" name="getHyperPeriod" specification="_dMsqgyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjKLyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjKMCumEeyJjNOKZ7e9aA" name="getMaxPhase" specification="_dMsqhSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjKMSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjKMiumEeyJjNOKZ7e9aA" name="orderActivations" specification="_dMtRkSumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjKMyumEeyJjNOKZ7e9aA" name="getNextActivation" specification="_dMtRkiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjKNCumEeyJjNOKZ7e9aA" type="_dL_f4CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjxICumEeyJjNOKZ7e9aA" name="addActivation" specification="_dUWxtSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjxISumEeyJjNOKZ7e9aA" name="activation" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjxIiumEeyJjNOKZ7e9aA" name="findBaseStation" specification="_dMtRkyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjxIyumEeyJjNOKZ7e9aA" type="_dMl80SumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dMrcYCumEeyJjNOKZ7e9aA" name="getNodeConnectivity" visibility="private" method="_dWjKEyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVWQMCumEeyJjNOKZ7e9aA" type="_dT9wICumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMrcYiumEeyJjNOKZ7e9aA" name="getNodeNames" method="_dWjKFSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVWQMSumEeyJjNOKZ7e9aA" type="_dT-XMCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMsDcSumEeyJjNOKZ7e9aA" name="getNodesNamesOrderedAlphabetically" method="_dWjKFyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMsDciumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dMsDcyumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMsDdSumEeyJjNOKZ7e9aA" name="buildPosetOfActivations" method="_dWjKGiumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dMsDdiumEeyJjNOKZ7e9aA" name="createEdgeLists" visibility="private" method="_dWjKGyumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dMsDdyumEeyJjNOKZ7e9aA" name="createConflictLists" visibility="private" method="_dWjKHCumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dMsqgCumEeyJjNOKZ7e9aA" name="createGlobalConflictLists" visibility="private" method="_dWjKHSumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dMsqgSumEeyJjNOKZ7e9aA" name="createLocalConflictLists" visibility="private" method="_dWjKHiumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dMsqgiumEeyJjNOKZ7e9aA" name="createInitialActivations" visibility="private" method="_dWjKJiumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dMsqgyumEeyJjNOKZ7e9aA" name="getHyperPeriod" method="_dWjKLiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMsqhCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMsqhSumEeyJjNOKZ7e9aA" name="getMaxPhase" method="_dWjKMCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMtRkCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMtRkSumEeyJjNOKZ7e9aA" name="orderActivations" method="_dWjKMiumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dMtRkiumEeyJjNOKZ7e9aA" name="getNextActivation" method="_dWjKMyumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZabyjd2EeykP74baAFnvg">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_dUWxtCumEeyJjNOKZ7e9aA" type="_dL_f4CumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMtRkyumEeyJjNOKZ7e9aA" name="findBaseStation" visibility="protected" method="_dWjxIiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZabzDd2EeykP74baAFnvg">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_dUWxtyumEeyJjNOKZ7e9aA" type="_dMl80SumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUWKoCumEeyJjNOKZ7e9aA" name="Poset" visibility="package" method="_dWjKECumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUWKoiumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUWKoyumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rZabyDd2EeykP74baAFnvg">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_dUWKoSumEeyJjNOKZ7e9aA" name="workload" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUWKpCumEeyJjNOKZ7e9aA" type="_dMq1UCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUWKpSumEeyJjNOKZ7e9aA" name="getMaxTx" visibility="private" method="_dWjKJyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUWKpiumEeyJjNOKZ7e9aA" name="node" type="_dMl80SumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUWKpyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUWxsCumEeyJjNOKZ7e9aA" name="getActivation" visibility="private" method="_dWjKKiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUWxsSumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUWxsiumEeyJjNOKZ7e9aA" name="node" type="_dMl80SumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUWxsyumEeyJjNOKZ7e9aA" type="_dL_f4CumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUWxtSumEeyJjNOKZ7e9aA" name="addActivation" method="_dWjxICumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZabyzd2EeykP74baAFnvg">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_dUWxtiumEeyJjNOKZ7e9aA" name="activation" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVWQMiumEeyJjNOKZ7e9aA" name="findCoordinator" visibility="protected" method="_dWjKHyumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZabyTd2EeykP74baAFnvg">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dVWQMyumEeyJjNOKZ7e9aA" name="nodesInFlow" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVWQNCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dVW3QSumEeyJjNOKZ7e9aA" name="buildTxArray" visibility="private" method="_dWjKIiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVW3QiumEeyJjNOKZ7e9aA" name="nodesInFlow" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVW3QyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dVW3RCumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMvGwCumEeyJjNOKZ7e9aA" name="PreemptiveSchedule">
              <ownedComment xmi:id="_rZbC0Dd2EeykP74baAFnvg">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dUZN_CumEeyJjNOKZ7e9aA" general="_dNLLoSumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjxJCumEeyJjNOKZ7e9aA" name="PreemptiveSchedule" specification="_dUXYwCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjxJSumEeyJjNOKZ7e9aA" name="poset" type="_dMq1UCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWjxJiumEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWjxJyumEeyJjNOKZ7e9aA" type="_dMvGwCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjxKCumEeyJjNOKZ7e9aA" name="continueSearch" specification="_dUXYxiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjxKSumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWjxKiumEeyJjNOKZ7e9aA" name="activation" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWjxKyumEeyJjNOKZ7e9aA" type="_dVXeUCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjxLCumEeyJjNOKZ7e9aA" name="toProgram" specification="_dMvt0CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjxLSumEeyJjNOKZ7e9aA" type="_dM5e0CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjxLiumEeyJjNOKZ7e9aA" name="findPreeptiveChannelAndTime" specification="_dUX_1CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjxLyumEeyJjNOKZ7e9aA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWjxMCumEeyJjNOKZ7e9aA" name="schedulableObject" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWjxMSumEeyJjNOKZ7e9aA" type="_dVXeUCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjxMiumEeyJjNOKZ7e9aA" name="findAdditionalTime" specification="_dUX_1yumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjxMyumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWjxNCumEeyJjNOKZ7e9aA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWjxNSumEeyJjNOKZ7e9aA" name="a1" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWjxNiumEeyJjNOKZ7e9aA" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWjxNyumEeyJjNOKZ7e9aA" type="_dT-XMCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjxOCumEeyJjNOKZ7e9aA" name="findMaxTimeAvailable" specification="_dUYm5CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjxOSumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWjxOiumEeyJjNOKZ7e9aA" name="schedulableObject" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWjxOyumEeyJjNOKZ7e9aA" type="_dVXeUCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjxPCumEeyJjNOKZ7e9aA" name="availableTime" specification="_dUYm5yumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjxPSumEeyJjNOKZ7e9aA" name="a1" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWjxPiumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWjxPyumEeyJjNOKZ7e9aA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWjxQCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjxQSumEeyJjNOKZ7e9aA" name="addToSchedule" specification="_dUZN8CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjxQiumEeyJjNOKZ7e9aA" name="next" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWjxQyumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWjxRCumEeyJjNOKZ7e9aA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWjxRSumEeyJjNOKZ7e9aA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWjxRiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjxRyumEeyJjNOKZ7e9aA" name="addToSchedule" specification="_dUZN9iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWjxSCumEeyJjNOKZ7e9aA" name="next" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWjxSSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dMvt0CumEeyJjNOKZ7e9aA" name="toProgram" method="_dWjxLCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUX_0yumEeyJjNOKZ7e9aA" type="_dM5e0CumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUXYwCumEeyJjNOKZ7e9aA" name="PreemptiveSchedule" visibility="package" method="_dWjxJCumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUXYwyumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUXYxCumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUXYwSumEeyJjNOKZ7e9aA" name="poset" type="_dMq1UCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUXYwiumEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUXYxSumEeyJjNOKZ7e9aA" type="_dMvGwCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUXYxiumEeyJjNOKZ7e9aA" name="continueSearch" visibility="protected" method="_dWjxKCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUXYxyumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUXYyCumEeyJjNOKZ7e9aA" name="activation" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVXeUiumEeyJjNOKZ7e9aA" type="_dVXeUCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUX_1CumEeyJjNOKZ7e9aA" name="findPreeptiveChannelAndTime" visibility="private" method="_dWjxLiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUX_1SumEeyJjNOKZ7e9aA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUX_1iumEeyJjNOKZ7e9aA" name="schedulableObject" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVYFYCumEeyJjNOKZ7e9aA" type="_dVXeUCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUX_1yumEeyJjNOKZ7e9aA" name="findAdditionalTime" visibility="private" method="_dWjxMiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUX_2CumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUYm4CumEeyJjNOKZ7e9aA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUYm4SumEeyJjNOKZ7e9aA" name="a1" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUYm4iumEeyJjNOKZ7e9aA" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVYFYSumEeyJjNOKZ7e9aA" type="_dT-XMCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUYm5CumEeyJjNOKZ7e9aA" name="findMaxTimeAvailable" visibility="private" method="_dWjxOCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUYm5SumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUYm5iumEeyJjNOKZ7e9aA" name="schedulableObject" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVYFYiumEeyJjNOKZ7e9aA" type="_dVXeUCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUYm5yumEeyJjNOKZ7e9aA" name="availableTime" visibility="private" method="_dWjxPCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUYm6CumEeyJjNOKZ7e9aA" name="a1" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUYm6SumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUYm6iumEeyJjNOKZ7e9aA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUYm6yumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUZN8CumEeyJjNOKZ7e9aA" name="addToSchedule" visibility="private" method="_dWjxQSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUZN8SumEeyJjNOKZ7e9aA" name="next" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUZN8iumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUZN8yumEeyJjNOKZ7e9aA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUZN9CumEeyJjNOKZ7e9aA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUZN9SumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUZN9iumEeyJjNOKZ7e9aA" name="addToSchedule" visibility="protected" method="_dWjxRyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUZN9yumEeyJjNOKZ7e9aA" name="next" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUZN-CumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMw78CumEeyJjNOKZ7e9aA" name="PriorityComparator">
              <interfaceRealization xmi:id="_dVYFYyumEeyJjNOKZ7e9aA" client="_dMw78CumEeyJjNOKZ7e9aA" supplier="_dUFr9iumEeyJjNOKZ7e9aA" contract="_dUFr9iumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWkYMCumEeyJjNOKZ7e9aA" name="compare" specification="_dVYscSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWkYMSumEeyJjNOKZ7e9aA" name="obj1" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWkYMiumEeyJjNOKZ7e9aA" name="obj2" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWkYMyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dVYscSumEeyJjNOKZ7e9aA" name="compare" method="_dWkYMCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVYsciumEeyJjNOKZ7e9aA" name="obj1" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVYscyumEeyJjNOKZ7e9aA" name="obj2" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVYsdCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMxjASumEeyJjNOKZ7e9aA" name="Program">
              <ownedComment xmi:id="_rZbC0Td2EeykP74baAFnvg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dV-iUSumEeyJjNOKZ7e9aA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV-iUiumEeyJjNOKZ7e9aA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV-iUyumEeyJjNOKZ7e9aA" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV-iVCumEeyJjNOKZ7e9aA" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV-iVSumEeyJjNOKZ7e9aA" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV_JYCumEeyJjNOKZ7e9aA" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV_JYSumEeyJjNOKZ7e9aA" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV_JYiumEeyJjNOKZ7e9aA" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV_JZSumEeyJjNOKZ7e9aA" name="workLoad" visibility="package" type="_dN6LcCumEeyJjNOKZ7e9aA" association="_dXK1ICumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV_JZyumEeyJjNOKZ7e9aA" name="scheduleBuilt" visibility="package" type="_dM5e0CumEeyJjNOKZ7e9aA" association="_dXK1IyumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV_JaSumEeyJjNOKZ7e9aA" name="SchedulerSelected" visibility="package" type="_dVZTgiumEeyJjNOKZ7e9aA" association="_dXK1JiumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dV_wcSumEeyJjNOKZ7e9aA" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV_wcyumEeyJjNOKZ7e9aA" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV_wdSumEeyJjNOKZ7e9aA" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV_wdyumEeyJjNOKZ7e9aA" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dV_weSumEeyJjNOKZ7e9aA" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWAXgSumEeyJjNOKZ7e9aA" name="channelsAvailable" visibility="package" type="_dMICwCumEeyJjNOKZ7e9aA" association="_dXK1KSumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWAXgyumEeyJjNOKZ7e9aA" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWAXhSumEeyJjNOKZ7e9aA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWAXhyumEeyJjNOKZ7e9aA" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWA-kSumEeyJjNOKZ7e9aA" name="latencyReport" visibility="private" type="_dMRzwSumEeyJjNOKZ7e9aA" association="_dXLcMSumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWA-kyumEeyJjNOKZ7e9aA" name="deadlineMisses" visibility="private" type="_dMRzwSumEeyJjNOKZ7e9aA" association="_dXLcNCumEeyJjNOKZ7e9aA"/>
              <interfaceRealization xmi:id="_dUacEiumEeyJjNOKZ7e9aA" client="_dMxjASumEeyJjNOKZ7e9aA" supplier="_dNSgYCumEeyJjNOKZ7e9aA" contract="_dNSgYCumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWkYNiumEeyJjNOKZ7e9aA" name="Program" specification="_dVZ6kCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWkYNyumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWkYOCumEeyJjNOKZ7e9aA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWkYOSumEeyJjNOKZ7e9aA" name="choice" type="_dVZTgiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWkYOiumEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWkYOyumEeyJjNOKZ7e9aA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWkYPCumEeyJjNOKZ7e9aA" type="_dMxjASumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
     buildProgram(choice);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWkYPSumEeyJjNOKZ7e9aA" name="Program" specification="_dVZ6mSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWkYPiumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWkYPyumEeyJjNOKZ7e9aA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWkYQCumEeyJjNOKZ7e9aA" name="choice" type="_dVZTgiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWkYQSumEeyJjNOKZ7e9aA" type="_dMxjASumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
     buildProgram(choice);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWkYQiumEeyJjNOKZ7e9aA" name="setDefaultParameters" specification="_dUbDICumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWkYQyumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWkYRCumEeyJjNOKZ7e9aA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWkYRSumEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWkYRiumEeyJjNOKZ7e9aA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
     this.scheduleBuilt = new ProgramSchedule();&#xD;
     this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     this.schedulerName = &quot;Priority&quot;;&#xD;
     this.schChoice = &quot;Priority&quot;;&#xD;
     this.nTransmissions = 0;&#xD;
     this.realTimeHARTflag = false;&#xD;
     this.optimizationRequested = true;&#xD;
     this.nChannels = nChannels;&#xD;
     this.verbose = verbose;&#xD;
     this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
     this.reportLatency = reportLatency;&#xD;
     this.latencyReport = new Description();&#xD;
     this.deadlineMisses = new Description();   &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWkYRyumEeyJjNOKZ7e9aA" name="toWorkLoad" specification="_dMzYMCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWkYSCumEeyJjNOKZ7e9aA" type="_dN6LcCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWkYSSumEeyJjNOKZ7e9aA" name="buildProgram" specification="_dVahpSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWkYSiumEeyJjNOKZ7e9aA" name="choice" type="_dVZTgiumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>/* Switch on the scheduler choice.&#xD;
 	 * If it is POSET-based scheduler, create the POSET&#xD;
 	 * that matches the name and then use the newer&#xD;
 	 * schedule object to convert the POSET to a program.&#xD;
 	 * If it is an original scheduler choice, build&#xD;
 	 * set the scheduler type and build the schedule&#xD;
 	 * and WARP program by calling buildOriginalProgram();&#xD;
 	 */&#xD;
 	switch (choice) { // select the requested scheduler&#xD;
 	case WARP_POSET_PRIORITY: 	// fall through&#xD;
		case WARP_POSET_RM: 		// fall through&#xD;
		case WARP_POSET_DM:		// fall through&#xD;
			setScheduleSelected (choice);&#xD;
			var poset1 = new WarpPoset(workLoad);&#xD;
			var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
	    	var newProgram = schedule1.toProgram();&#xD;
	    	setSchedule(newProgram); // store the schedule built&#xD;
	    	break;&#xD;
		case CONNECTIVITY_POSET_PRIORITY: 	// fall through&#xD;
		case CONNECTIVITY_POSET_RM: 		// fall through&#xD;
		case CONNECTIVITY_POSET_DM:		// fall through&#xD;
		case POSET_PRIORITY: 	// fall through&#xD;
		case POSET_RM: 		// fall through&#xD;
		case POSET_DM:&#xD;
			setScheduleSelected (choice);&#xD;
			// var poset = new BasicPoset(workLoad);&#xD;
			var poset2 = new ConnectivityPoset(workLoad);&#xD;
			var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
	    	newProgram = schedule2.toProgram();&#xD;
	    	setSchedule(newProgram); // store the schedule built&#xD;
	    	break;&#xD;
////		case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: 	// fall through&#xD;
////		case CONNECTIVITY_POSET_PREEMPTIVE_RM: 		// fall through&#xD;
////		case CONNECTIVITY_POSET_PREEMPTIVE_DM:		// fall through&#xD;
//	    	var poset3 = new ConnectivityPoset(workLoad);&#xD;
//	    	var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
//	    	newProgram = schedule3.toProgram();&#xD;
//	    	setSchedule(newProgram); // store the schedule built&#xD;
//	    	break;&#xD;
		case PRIORITY:	&#xD;
			selectPriority();&#xD;
			buildOriginalProgram();  // build the requested schedule&#xD;
			break;&#xD;
		case RM:	&#xD;
			selectRM();&#xD;
			buildOriginalProgram();  // build the requested schedule&#xD;
			break;&#xD;
		case DM:	&#xD;
			selectDM();&#xD;
			buildOriginalProgram();  // build the requested schedule&#xD;
			break;&#xD;
		case RTHART: &#xD;
			selectRtHART();&#xD;
			buildOriginalProgram();  // build the requested schedule&#xD;
			break;&#xD;
		default:&#xD;
			selectPriority();&#xD;
			buildOriginalProgram();  // build the requested schedule&#xD;
			break; // break from switch&#xD;
		}&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWkYSyumEeyJjNOKZ7e9aA" name="buildOriginalProgram" specification="_dMzYMSumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
 	&#xD;
 	if (verbose) {&#xD;
 		var scheduleDetails = String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;, workLoad.getName());&#xD;
 		scheduleDetails = String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;,getSchedulerName());&#xD;
 		scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
 		scheduleDetails = String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;,String.valueOf(workLoad.getE2e()));&#xD;
 		scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;,getNumChannels());&#xD;
 		// The following parameters are only output when special schedules are requested&#xD;
 		if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
 			scheduleDetails = String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;,getNumTransmissions());&#xD;
 		}&#xD;
 		if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
 			scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
 		}&#xD;
 		System.out.println(scheduleDetails);&#xD;
 	}&#xD;
 	var nTx = 0;// support nTx per transmission, which is set based on input parameter if nTransmissions == n 0 else flow.nTXperLink&#xD;
 	var nTransmissions = getNumTransmissions();&#xD;
 	Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 	var optimizationRequested = getOptimizationFlag();&#xD;
 	var schedule = new ProgramSchedule();  // create an empty schedule&#xD;
 	var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 	var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 	var orderedNodes = workLoad.getNodesOrderedAlphabetically();  // create an array of node names sorted alphabetically&#xD;
 	var nodeIndex = new NodeIndexMap(); // create a new mapping from node names to index in schedule table&#xD;
 	var nNodes = orderedNodes.length;&#xD;
 	for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
 		var name = orderedNodes[index];&#xD;
 		nodeIndex.put(name,index); // add name, index mapping to NodeIndex map&#xD;
 	}&#xD;
 	var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 	for (int i = 0; i &lt; hyperPeriod; i++) {  // This loop makes sure the schedule is full up to the period and the channels entries are all initialized&#xD;
 		var newInstructionTimeSlot = new InstructionTimeSlot(nNodes,SLEEP_INSTRUCTION);  // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION&#xD;
 		schedule.add(newInstructionTimeSlot);&#xD;
 		channelsAvailable.addNewChannelSet() ;// initially, all channels are available in each time slot&#xD;
 	}&#xD;
 	// create an instance of the Warp DSL class for parsing instructions&#xD;
 	var dsl = new WarpDSL();&#xD;
 	&#xD;
 	for (String flowName: prioritizedFlows) {  // loop through all of the nodes in priority order&#xD;
 		var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
 		var nNodesInFlow = nodesInFlow.length; &#xD;
 		var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
 		if (nTransmissions == 0) {  // use nTx from flow.nTXperLink for realtimeHart and the linkTX array otherwise&#xD;
 			e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
 			if (realtimeHART) {&#xD;
 				nTx = workLoad.getFlowTxPerLink(flowName);  &#xD;
 			} // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
 		} else {&#xD;
 			nTx = nTransmissions;&#xD;
 		}&#xD;
 		var snk = &quot;&quot;;&#xD;
 		var linkTxCosts = workLoad.getLinkCommunicationCosts(flowName);&#xD;
 		if (verbose) {&#xD;
 			var totalCost = workLoad.getTotalCommunicationCost(flowName);&#xD;
 			var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost, i.e., min nTx to go E2E with no errors&#xD;
 			System.out.printf(&quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;, flowName, minCost, totalCost);&#xD;
 		}&#xD;
 		if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx is dependent on reliability target&#xD;
 			nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
 		}&#xD;
 		var previousNodeInstruction = new Integer[nTx];  // set instruction location in schedule for previous slots to 0&#xD;
 		Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0		&#xD;
 		var flowPhase = workLoad.getFlowPhase(flowName);  // used to compute latency after done scheduling this flow&#xD;
 		var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this flow&#xD;
 		var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for this flow&#xD;
 		var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
 		var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src node can first transmit&#xD;
 		for (int instance = 0; instance &lt; hyperPeriod/flowPeriod; instance++) {&#xD;
 			for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow-1; flowNodeIndex++)  { // don't push for last node, so stop at node n-1, which is 2 less than count&#xD;
 				var currentNodeName = nodesInFlow[flowNodeIndex];   // get name of current node in the flow (aka source of data)&#xD;
 				if (e2eFlag) {&#xD;
 					nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
 				}&#xD;
 				var currentNodeInstruction = new Integer[nTx];  // store instruction location in schedule for previous node&#xD;
 				Arrays.fill(currentNodeInstruction, 0);  // initialize the currentNondeInstruction&#xD;
 				for (int index = 0; index &lt; nTx; index++) {  // repeat instruction nTx times so that this flow meets desired reliability&#xD;
 					var instructionNodeName = currentNodeName; // name of node for which we write an instruction in its program&#xD;
 					var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the priorSrcInstruction during optimization&#xD;
 					var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or not&#xD;
 					snk = nodesInFlow[flowNodeIndex+1]; // should get a valid sink node, set name to UNKNOWN if we don't&#xD;
 					// when not optimizing instructionNodeName is current node, but we might update a different node's instruction to optimize&#xD;
 					var phase = instance*flowPeriod + flowPhase;   // update phase for the instance of the flow release, which happens once every period in the hyperPeriod&#xD;
 					var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure precedence constraints on flow are preserved&#xD;
 					Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule, firstPossibleSlot , flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART , optimizationRequested, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
 					if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current schedule length. Increase schedule and channelsAvailable tables&#xD;
 						for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
 							var newInstructionTimeSlot = new InstructionTimeSlot(nNodes,SLEEP_INSTRUCTION);  // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION&#xD;
 							schedule.add(newInstructionTimeSlot);&#xD;
 							channelsAvailable.addNewChannelSet(); // need make sure we have channels available for all slots. instructionIndex may be > initialized size of array because of phases...&#xD;
 						}&#xD;
 					}&#xD;
 					String channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
 					// Now check if we have a valid channel. If not we need to find a new time slot further down the schedule.&#xD;
 					// So, initialize the search to start at the current slot and then increase by one each time we loop if the current slot&#xD;
 					// Now check if we have a valid channel. If not we need to find a new time slot further down the schedule.&#xD;
 					// So, initialize the search to start at the current slot and then increase by one each time we loop if the current slot&#xD;
 					while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no channel was available. In that case, we need to find a new slot for this instruction after the last index found&#xD;
 						var startSearchIndex = instructionIndex+1;&#xD;
 						instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex , flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART , optimizationRequested, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
 						if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current schedule lenght. Increase schedule and channelsAvailable tables&#xD;
 							for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
 								var newInstructionTimeSlot = new InstructionTimeSlot(nNodes,SLEEP_INSTRUCTION);  // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION&#xD;
 								schedule.add(newInstructionTimeSlot);&#xD;
 								channelsAvailable.addNewChannelSet(); // need make sure we have channels available for all slots. instructionIndex may be > initialized size of array because of phases...&#xD;
 							}&#xD;
 						}&#xD;
 						channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
 					}&#xD;
 					workLoad.setNodeChannel(instructionNodeName,Integer.valueOf(channel));&#xD;
 					if (realtimeHART) {&#xD;
 						newInstruction = pushInstruction(flowName,currentNodeName,snk, channel);&#xD;
 					} else {&#xD;
 						newInstruction = hasPushInstruction(flowName,currentNodeName,snk, channel);&#xD;
 					}&#xD;
 					&#xD;
 					// if optimization flag is set, look to see if any optimizations are possible&#xD;
 					if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
 						var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex-1);&#xD;
 						var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList.toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
 						var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction scheduled for snk to execute in the prior time slot&#xD;
 						if (index == (nTx-1)) {&#xD;
 							String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
 							String elseSubString = &quot;else pull(&quot;;&#xD;
 							if (priorInstruction.contains(hasSubstring) &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {  &#xD;
 								// The sink node is not waiting, so add this instruction as an else to it&#xD;
 								// Also need to make sure we haven't already combined a prior instruction by moving it to the else clause. May need a smater way to do this later...&#xD;
 								// The combined instructions both use channels for their respective time slots! The else is being added to the prior time slot, so we need to&#xD;
 								// get a new channel for that time slot and put back the channel we extraced from this time slot. And of course, clean up if any errors occur&#xD;
 								// in the process&#xD;
 								var instructionParametersArrayList = dsl.getInstructionParameters(priorInstruction);&#xD;
 								var priorInstructionChannel = UNKNOWN;&#xD;
 								if (instructionParametersArrayList.size() == 1) {&#xD;
 									var instructionParameters = instructionParametersArrayList.get(0); // get a copy of the parameters&#xD;
 									priorInstructionChannel = instructionParameters.getChannel();&#xD;
 								} else { // we just checked above that the prior instruction did not have an else pull, wait, or sleep. So, there should be only one instruction here&#xD;
 									String msg = String.format(&quot;ERROR: More than one instruction in prior instruction string: %s&quot;,priorInstruction);&#xD;
 									System.err.println(msg);&#xD;
 								}&#xD;
 								workLoad.setNodeChannel(instructionNodeName,Integer.valueOf(priorInstructionChannel));&#xD;
 								channelsAvailable.addChannel(instructionIndex,channel); // return channel for this slot&#xD;
 								channel = priorInstructionChannel; // update this so that the corresponding wait uses this channel&#xD;
 								newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;, flowName, currentNodeName, snk,priorInstructionChannel ); // was channel&#xD;
 								instructionIndex -= 1;  //set instructionIndex to the priorInstruction index so we replace that slot with the new, optimized instruction&#xD;
 								instructionNodeName = snk; // change currntNodeName to the snk node, which is the node name of the prior instruction&#xD;
 							}&#xD;
 						} else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag) &amp;&amp; &#xD;
 										!(priorInstruction.contains(SLEEP_INSTRUCTION) || priorInstruction.contains(WAIT_FRAGMENT)) ) {&#xD;
 							// We hit this case when combining the last push of one flow with the first push of a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
 							// print (&quot;Skipping optimization of combining \(priorInstruction) with \(newInstruction)\n&quot;)&#xD;
 							// May want to add code here to combine when e2eFlag is true but need to compute new reliability values given less than 1 probablity that&#xD;
 							// this first push/now pull will happen&#xD;
 							// System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;, newInstruction, priorInstruction);&#xD;
 						} else { // not sure when we hit this when combining a sleep or wait() from prior flow with a new instruction&#xD;
 							// Anywhere else?  :-) Probably better figure it out!!&#xD;
 							if (!priorInstruction.contains(ELSE_PULL_FRAGMENT) &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT) &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) {  // The sink node is not waiting, so add this instruction as an else to it&#xD;
 								// Also need to make sure we haven't already combined a prior instruction by moving it to the else clause. May need a smarter way to do this later...&#xD;
 								var instructionParametersArrayList = dsl.getInstructionParameters(priorInstruction);&#xD;
 								var priorInstructionChannel = UNKNOWN;&#xD;
 								var priorInstructionSnk = UNKNOWN;&#xD;
 								if (instructionParametersArrayList.size() == 1) {&#xD;
 									var instructionParameters = instructionParametersArrayList.get(0); // get a copy of the parameters&#xD;
 									priorInstructionSnk = instructionParameters.getSnk();&#xD;
 									priorInstructionChannel = instructionParameters.getChannel();&#xD;
 								} else { // we just checked above that the prior instruction did not have an else pull, wait, or sleep. So, there should be only one instruction here&#xD;
 									String msg = String.format(&quot;ERROR: More than one instruction in prior instruction string: %s&quot;,priorInstruction);&#xD;
 									System.err.println(msg);&#xD;
 								}  								&#xD;
 								priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get instruction scheduled for snk/curentNodeName) to execute in the prior time &#xD;
 								if (priorInstructionSnk.equals(currentNodeName) ) {  // will try to push and pull to/from the same node, so use the prior instruction channel&#xD;
 									newInstruction = priorInstruction + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
 									instructionIndex -= 1 ; //set instructionIndex to the priorInstruction index so we replace that slot with the new, optimized instruction&#xD;
 									instructionNodeName = snk; // change currntNodeName to the snk node, which is the node name of the prior instruction&#xD;
 								} else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)){ // was !priorSrcInstruction.contains(&quot;wait(&quot;); I think it needs to be a sleep and then we can add a wait there&#xD;
 									// Make sure the currentNodeName entry for this time slot has a sleep. If so, then we combine instructions with new as an else push and add wait at currentNodeName&#xD;
 									workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(priorInstructionChannel));  &#xD;
 									newInstruction = priorInstruction + elsePullClause(flowName,currentNodeName,snk,priorInstructionChannel);  // was channel&#xD;
 									// need to change priorSrcInstruction from sleep to wait on channel&#xD;
 									priorSrcInstruction = waitInstruction(priorInstructionChannel);  // was channel&#xD;
 									priorSrcUpdated = true; // set flag so this instruction is updated when we insert currenInstruction into the currentInstructionTimeSlot&#xD;
 									instructionIndex -= 1;  //set instructionIndex to the priorInstruction index so we replace that slot with the new, optimized instruction&#xD;
 									instructionNodeName = snk; // change currntNodeName to the snk node, which is the node name of the prior instruction&#xD;
 								}&#xD;
 							}&#xD;
 						}&#xD;
 					}&#xD;
 					ArrayList&lt;String> currentInstructionTimeSlotArrayList; // = schedule.get(instructionIndex);&#xD;
						String[] currentInstructionTimeSlot; // = currentInstructionTimeSlotArrayList.toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
 					currentNodeInstruction[index] = instructionIndex;  // store the slot index for this instruction&#xD;
 					if (instructionIndex &lt; schedule.size()) {&#xD;
 						currentInstructionTimeSlotArrayList = schedule.get(instructionIndex);  // load current instruction, in case another instruction is in this time slot for another node that doesn't conflict channels&#xD;
 						currentInstructionTimeSlot = currentInstructionTimeSlotArrayList.toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
 					} else {&#xD;
 						currentInstructionTimeSlotArrayList = new InstructionTimeSlot(nNodes,SLEEP_INSTRUCTION); &#xD;
 						currentInstructionTimeSlot = currentInstructionTimeSlotArrayList.toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
 					}&#xD;
 					currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an error finding the right location will result in location of snk or 0&#xD;
 					if (priorSrcUpdated) {&#xD;
 						currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an error finding the right location will result in location of snk or 0&#xD;
 					}&#xD;
 					// If this is a basic push() then the snk node will have the initial wait instruction in its time slot. Thus, need to add the channel # to that wait&#xD;
 					var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)];  // get instruction scheduled for snk to execute in the current time slot&#xD;
 					if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
 						currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
 					}&#xD;
 					if (flowNodeIndex > 0) {&#xD;
 						var priorNodeName = nodesInFlow[flowNodeIndex-1] ;// get name of prior node in the flow (aka predecessor)&#xD;
 						var possibleCombineInstruction = String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;,flowName,priorNodeName,currentNodeName);&#xD;
 						if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) {  // One more optimization possible: combine two conditional pushes at the same slot involving a common node&#xD;
 							var upstreamNodeInstruction = currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
 							var instr = hasPushInstruction(flowName,currentNodeName,snk,channel);&#xD;
 							if (newInstruction.equals(instr) &amp;&amp;&#xD;
 									upstreamNodeInstruction.contains(possibleCombineInstruction) &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
 								var instructionParametersArrayList = dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
 								var upstreamNodeChannel = UNKNOWN;&#xD;
 								if (instructionParametersArrayList.size() == 1) {&#xD;
 									var instructionParameters = instructionParametersArrayList.get(0); // get a copy of the paramaters&#xD;
 									upstreamNodeChannel = instructionParameters.getChannel();&#xD;
 											// return upstreamNodeChannel to the available channels for this time slot&#xD;
 									channelsAvailable.addChannel(instructionIndex,upstreamNodeChannel); &#xD;
 								} else { // we just checked above that the prior instruction did not have an else pull, wait, or sleep. So, there should be only one instruction here&#xD;
 									String msg = String.format(&quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,upstreamNodeInstruction);&#xD;
 									System.err.println(msg); &#xD;
 								}&#xD;
 								// use the newInstruction channel in upstream instruction that is being combined and return the upstream channel to the available channel set&#xD;
 								newInstruction = newInstruction + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was upstreamNodeChannel&#xD;
 								currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)]  = newInstruction; // an error finding the right location will result in location of snk or 0&#xD;
 								currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]  = waitInstruction(channel);; // an error finding the right location will result in location of snk or 0 // was upstreamNodeChannel&#xD;
 							} else if (newInstruction.contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel)) &#xD;
 												&amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)].contains(possibleCombineInstruction)) {&#xD;
 								currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]  = waitInstruction(channel); // Replace combined instruction in prior node program with wait()&#xD;
 							}&#xD;
 						}&#xD;
 						if (!realtimeHART &amp;&amp; nTx > 1) {  // WARP schedule with multiple tx per link requested, so add 'else wait()' for down upstream node when needed&#xD;
 							var upstreamNodeInstruction = currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
 							if (newInstruction.equals(hasPushInstruction(flowName,currentNodeName,snk,channel)) &#xD;
 													&amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
 								String upstreamNodeChannel = getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
 								newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this node needs to wait for upstream node if message hasn't arrived&#xD;
 								currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)]  = newInstruction; // an error finding the right location will result in location of snk or 0&#xD;
 								// Don't replace the push instruction in the upstream node in this case, because we added the else in this nodes time slot instead&#xD;
 							}&#xD;
 						}&#xD;
 					}&#xD;
 					var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
 					if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check anyway&#xD;
 						schedule.set(instructionIndex,timeSlot);&#xD;
 					} else {&#xD;
 						schedule.add(timeSlot);&#xD;
 						String msg = String.format(&quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,instructionIndex,schedule.size());&#xD;
							System.err.println(msg);&#xD;
							System.err.println(&quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
 					}&#xD;
 					flowLastInstruction = instructionIndex;&#xD;
 					if (index ==0) {&#xD;
 						FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the flow's src node first transmits&#xD;
 					}&#xD;
 				}&#xD;
 				previousNodeInstruction = currentNodeInstruction ; // copy current to previous node...don't worry about clearing currentNodeInstrucitons; will be set in loop&#xD;
 			}&#xD;
 			Integer latency = flowLastInstruction - (flowPhase + (instance*flowPeriod)) + 1;&#xD;
 			String latencyMsg = String.format(&#xD;
 					&quot;Maximum latency for %s:%d is %d\n&quot;,flowName, instance, latency );&#xD;
 			latencyReport.add(latencyMsg);&#xD;
 			if (verbose) {&#xD;
 				System.out.printf(latencyMsg);&#xD;
 			}&#xD;
 			if (latency > flowDeadline) {&#xD;
 				String deadlineMsg = String.format(&#xD;
 		    &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
 		    					flowName, instance, latency, flowDeadline);&#xD;
 				deadlineMisses.add(deadlineMsg);&#xD;
 				// System.out.printf(deadlineMsg);&#xD;
 			}&#xD;
 		}&#xD;
 	}&#xD;
 	setSchedule(schedule); // store the schedule built&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWkYTCumEeyJjNOKZ7e9aA" name="waitInstruction" specification="_dMzYMiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWkYTSumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWkYTiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 	if (!Utilities.isInteger(channel)) {&#xD;
         System.out.println(&quot;channel length is &quot;+ String.valueOf(size)); &#xD;
         System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 	}&#xD;
 	return String.format(&quot;wait(#%s)&quot;,channel);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWkYTyumEeyJjNOKZ7e9aA" name="elseWaitInstruction" specification="_dMzYNSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWkYUCumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWkYUSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 	if (!Utilities.isInteger(channel)) {&#xD;
         System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
         System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 	}&#xD;
 	return String.format(&quot; else wait(#%s)&quot;,channel);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWkYUiumEeyJjNOKZ7e9aA" name="elsePullClause" specification="_dMz_QCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWkYUyumEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWkYVCumEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWkYVSumEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWkYViumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWkYVyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;,flow, src, snk, channel);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWk_QCumEeyJjNOKZ7e9aA" name="hasPushInstruction" specification="_dMz_RiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWk_QSumEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_QiumEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_QyumEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_RCumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_RSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;,flow,src,snk,channel);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWk_RiumEeyJjNOKZ7e9aA" name="pushInstruction" specification="_dMz_TCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWk_RyumEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_SCumEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_SSumEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_SiumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_SyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;,flow,src,snk,channel);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWk_TCumEeyJjNOKZ7e9aA" name="getFirstChannelInInstruction" specification="_dM0mVCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWk_TSumEeyJjNOKZ7e9aA" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_TiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#')+1; // get index of the start of the channel #&#xD;
		var endIndex = Instruction.indexOf(')',beginIndex); // get index of the last character of the channel #&#xD;
		var channel = Instruction.substring(beginIndex,endIndex); // this substring has the 1st channel&#xD;
		return channel;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWk_TyumEeyJjNOKZ7e9aA" name="findNextAvailableInstructionTimeSlot" specification="_dUbqMSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWk_UCumEeyJjNOKZ7e9aA" name="schedule" type="_dM5e0CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWk_USumEeyJjNOKZ7e9aA" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_UiumEeyJjNOKZ7e9aA" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_UyumEeyJjNOKZ7e9aA" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_VCumEeyJjNOKZ7e9aA" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_VSumEeyJjNOKZ7e9aA" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWk_ViumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_VyumEeyJjNOKZ7e9aA" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWk_WCumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_WSumEeyJjNOKZ7e9aA" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_WiumEeyJjNOKZ7e9aA" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_WyumEeyJjNOKZ7e9aA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_XCumEeyJjNOKZ7e9aA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_XSumEeyJjNOKZ7e9aA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_XiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting location&#xD;
 	if (transIndex > 0) {&#xD;
 		currentTime = Math.max(startLocation, currentNodeInstruction[transIndex-1]); // Make sure we don't start looking before the startLocation AND the previous instruction we inserted&#xD;
 	}&#xD;
 	var done = false; // Flag indicating time slot search is done&#xD;
 	if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx-1 )) {  &#xD;
 							// do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and for kth retry&#xD;
 		while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
 			var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
 			if (slotIsAvailable (currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
 				done = true;&#xD;
 			} else {&#xD;
 				currentTime += 1;&#xD;
 			}&#xD;
 		}&#xD;
 	} else {  //  !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
 		Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
 		if (transIndex >= (previousNodeInstruction.length-1)) {&#xD;
 			slotOffsetFromLastPreviousInstructionEntry = transIndex - (previousNodeInstruction.length-1) + 1;&#xD;
 			var possibleInstructionTimeSlotIndex = previousNodeInstruction[previousNodeInstruction.length-1] + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry entry&#xD;
 			// or continuous past it if more attempts for this instruction&#xD;
 			if (startLocation &lt; possibleInstructionTimeSlotIndex) {   // make sure this time isn't earlier than the starting location&#xD;
 				// (which can also mean the start time for searching available slots due to channel unavailability)&#xD;
 				currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
 			}&#xD;
 			done = false;  // However, we need to check if the current slot is available, and if not keep searching until we find one. This happens with preemptions&#xD;
 			if (!optimizationRequested) {&#xD;
 				while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
 					var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
 					if (slotIsAvailable (currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {   // get the proposed currentInstructionTimeSlot. If available, done is true, else keep checking for a time&#xD;
 						done = true;&#xD;
 					} else {&#xD;
 						currentTime += 1;&#xD;
 					}&#xD;
 				}&#xD;
 			} else {&#xD;
 				// do something to support the optimization&#xD;
 				while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
 					var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
 					if (slotIsAvailable (currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {   // get the proposed currentInstructionTimeSlot. If available, done is true, else keep checking for a time&#xD;
 						done = true;&#xD;
 					} else {&#xD;
 						currentTime += 1;&#xD;
 					}&#xD;
 				}&#xD;
 			}&#xD;
 		} else {&#xD;
 			var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex+1]; // same as previous node's next retry entry&#xD;
 			if (startLocation &lt;= possibleInstructionTimeSlotIndex) {   // make sure this time isn't earlier than the starting location&#xD;
 				// (which can also mean the start time for searching available slots due to channel unavailability)&#xD;
 				currentTime = possibleInstructionTimeSlotIndex; //&#xD;
 			}&#xD;
 			done = false;  // However, we need to check if the current slot is available, and if not keep searching until we find one. This happens with preemptions&#xD;
 			if (!optimizationRequested) {&#xD;
 				while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
 					var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
 					if (slotIsAvailable (currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {   // get the proposed currentInstructionTimeSlot. If available, done is true, else keep checking for a time&#xD;
 						done = true;&#xD;
 					} else {&#xD;
 						currentTime += 1;&#xD;
 					}&#xD;
 				}&#xD;
 			} else {&#xD;
 				// do something to support the optimization&#xD;
 				if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current schedule table. If so, no need to optimize.&#xD;
 					// Just return current time and let caller figure out what to do.&#xD;
 					var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
 					var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
 					var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
 					if (!srcInstruction.contains(&quot;wait(&quot;) ||  !snkInstruction.contains(&quot;sleep&quot;)) { // instruction should contain a wait, so we can use it during optimization. Only a wait for this time slot is expected at this point&#xD;
 						// we also need to be sure the snk is sleeping&#xD;
 						// If either condition is not true, then we need to find another time slot&#xD;
 						while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
 							var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
 							if (slotIsAvailable (currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {   // get the proposed currentInstructionTimeSlot. If available, done is true, else keep checking for a time&#xD;
 								done = true;&#xD;
 							} else {&#xD;
 								currentTime += 1;&#xD;
 							}&#xD;
 						}&#xD;
 					} else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not sure if it is bad...print an error indicating the issue&#xD;
 						var errorString = String.format(&quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;, currentTime);&#xD;
 						errorString += &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
 						errorString += srcInstruction;&#xD;
 						System.err.println(errorString);&#xD;
 					}&#xD;
 				}&#xD;
 			}&#xD;
 		}&#xD;
 	}&#xD;
 	return currentTime;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWk_XyumEeyJjNOKZ7e9aA" name="slotIsAvailable" specification="_dUcRQCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWk_YCumEeyJjNOKZ7e9aA" name="currentInstructionTimeSlot" type="_dMjgkCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWk_YSumEeyJjNOKZ7e9aA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_YiumEeyJjNOKZ7e9aA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_YyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is done&#xD;
     if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex)) &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk are both sleeping, so slot is available&#xD;
         vacantSlot = true;&#xD;
     }&#xD;
     return vacantSlot;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWk_ZCumEeyJjNOKZ7e9aA" name="findNextAvailableChannel" specification="_dUcRRSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWk_ZSumEeyJjNOKZ7e9aA" name="schedule" type="_dM5e0CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWk_ZiumEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_ZyumEeyJjNOKZ7e9aA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_aCumEeyJjNOKZ7e9aA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_aSumEeyJjNOKZ7e9aA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWk_aiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check this result&#xD;
&#xD;
 	// create an instance of the Warp DSL class for parsing instructions&#xD;
 	var dsl = new WarpDSL();&#xD;
 	InstructionTimeSlot priorInstructionTimeSlot; &#xD;
&#xD;
 	var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 	if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in that slot, which have to be avoided here&#xD;
 		Integer priorTime = currentTime-1;&#xD;
 		priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
 		var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
 		var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
 		// extract the channels used by the src and snk nodes in the prior time slot and store them in an array&#xD;
 		var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get the parameters from the instruction in the src node's prior time slot&#xD;
 		for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
 			var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the paramaters&#xD;
 			channels.remove(instructionParameters.getChannel());&#xD;
 		}&#xD;
 		instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the parameters from the instruction in the snk node's prior time slot&#xD;
 		for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
 			var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the paramaters&#xD;
 			channels.remove(instructionParameters.getChannel());&#xD;
 		}&#xD;
 	}&#xD;
 	Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node &#xD;
 	channel++; // increment the channel because we don't use the same channel in consecutive time slots for the same node&#xD;
 	if (channel >= getNumChannels()) {  // valid range is 0..NumChannels-1. Reset when channel hits max&#xD;
 		channel = 0;&#xD;
 	}&#xD;
 	var channelFound = false;&#xD;
 	while (!channelFound &amp;&amp; !channels.isEmpty()){ // loop until a channel is found or we run out of channels to assign&#xD;
 		var channelString = String.valueOf(channel);&#xD;
 		var channelRemoved = channels.remove(channelString);&#xD;
 		if (channelRemoved) {&#xD;
 			// newChannel has the channel&#xD;
 			newChannel = channelString;&#xD;
 			channelFound = true;&#xD;
 		} else {&#xD;
 			// try another channel&#xD;
 			channel += 1;&#xD;
 			if (channel >= getNumChannels()) {  // valid range is 0..NumChannels-1. Reset when channel hits max&#xD;
 				channel = 0;&#xD;
 			}&#xD;
 		}&#xD;
 	}&#xD;
 	return newChannel;   // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWk_ayumEeyJjNOKZ7e9aA" name="selectPriority" specification="_dM0mVyumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>setScheduleSelected (ScheduleChoices.PRIORITY);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWk_bCumEeyJjNOKZ7e9aA" name="selectRM" specification="_dM1NYCumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>setScheduleSelected (ScheduleChoices.RM);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWk_bSumEeyJjNOKZ7e9aA" name="selectDM" specification="_dM1NYSumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>setScheduleSelected (ScheduleChoices.DM);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWk_biumEeyJjNOKZ7e9aA" name="selectRtHART" specification="_dM1NYiumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>setScheduleSelected (ScheduleChoices.RTHART);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWk_byumEeyJjNOKZ7e9aA" name="setScheduleSelected" specification="_dVahpyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWk_cCumEeyJjNOKZ7e9aA" name="choice" type="_dVZTgiumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
 	case PRIORITY:&#xD;
 		schedulerName = &quot;Priority&quot;;&#xD;
 		schChoice = &quot;-Priority&quot;;&#xD;
 		workLoad.setFlowsInPriorityOrder();&#xD;
 		break;&#xD;
 	case RM:&#xD;
 		schedulerName = &quot;RateMonotonic&quot;;&#xD;
 		schChoice = &quot;-RM&quot;;&#xD;
 		workLoad.setFlowsInRMorder();&#xD;
 		break;&#xD;
 	case DM:&#xD;
 		schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
 		schChoice = &quot;-DM&quot;;&#xD;
 		workLoad.setFlowsInDMorder();&#xD;
 		break;&#xD;
 	case RTHART:&#xD;
 		schedulerName = &quot;RealtimeHART&quot;;&#xD;
 		schChoice = &quot;-RealTimeHART&quot;;&#xD;
 		workLoad.setFlowsInRealTimeHARTorder();&#xD;
 		setRealTimeHartFlag(true);&#xD;
 		break;&#xD;
		case CONNECTIVITY_POSET_DM:&#xD;
			schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
 		schChoice = &quot;-CPdm&quot;;&#xD;
 		workLoad.setFlowsInDMorder();&#xD;
			break;&#xD;
		case CONNECTIVITY_POSET_PRIORITY:&#xD;
			schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
 		schChoice = &quot;-CPoset&quot;;&#xD;
 		workLoad.setFlowsInPriorityOrder();&#xD;
			break;&#xD;
		case CONNECTIVITY_POSET_RM:&#xD;
			schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
 		schChoice = &quot;-CPrm&quot;;&#xD;
 		workLoad.setFlowsInRMorder();&#xD;
			break;&#xD;
		case POSET_DM:&#xD;
			schedulerName = &quot;PosetDM&quot;;&#xD;
 		schChoice = &quot;-PosetDM&quot;;&#xD;
 		workLoad.setFlowsInDMorder();&#xD;
			break;&#xD;
		case POSET_PRIORITY:&#xD;
			schedulerName = &quot;Poset&quot;;&#xD;
 		schChoice = &quot;-Poset&quot;;&#xD;
 		workLoad.setFlowsInPriorityOrder();&#xD;
			break;&#xD;
		case POSET_RM:&#xD;
			schedulerName = &quot;PosetRM&quot;;&#xD;
 		schChoice = &quot;-PosetDM&quot;;&#xD;
 		workLoad.setFlowsInRMorder();&#xD;
			break;&#xD;
		case WARP_POSET_DM:&#xD;
			schedulerName = &quot;WarpPosetDM&quot;;&#xD;
 		schChoice = &quot;-WPdm&quot;;&#xD;
 		workLoad.setFlowsInDMorder();&#xD;
			break;&#xD;
		case WARP_POSET_PRIORITY:&#xD;
			schedulerName = &quot;WarpPoset&quot;;&#xD;
 		schChoice = &quot;-WarpPoset&quot;;&#xD;
 		workLoad.setFlowsInPriorityOrder();&#xD;
			break;&#xD;
		case WARP_POSET_RM:&#xD;
			schedulerName = &quot;WarpPosetRM&quot;;&#xD;
 		schChoice = &quot;-WPrm&quot;;&#xD;
 		workLoad.setFlowsInRMorder();&#xD;
			break;&#xD;
		default:&#xD;
			schedulerName = &quot;Priority&quot;;&#xD;
 		schChoice = &quot;-Priority&quot;;&#xD;
 		workLoad.setFlowsInPriorityOrder();&#xD;
			break;&#xD;
 	}&#xD;
 	SchedulerSelected = choice;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWk_cSumEeyJjNOKZ7e9aA" name="setSchedule" specification="_dUcRTCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWk_ciumEeyJjNOKZ7e9aA" name="schedule" type="_dM5e0CumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWlmUCumEeyJjNOKZ7e9aA" name="getSchedule" specification="_dM1NYyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWlmUSumEeyJjNOKZ7e9aA" type="_dM5e0CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWlmUiumEeyJjNOKZ7e9aA" name="getSchedulerName" specification="_dM1NZCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWlmUyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWlmVCumEeyJjNOKZ7e9aA" name="getSchChoice" specification="_dM1NZiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWlmVSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWlmViumEeyJjNOKZ7e9aA" name="getNumChannels" specification="_dM1NaCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWlmVyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWlmWCumEeyJjNOKZ7e9aA" name="getNumTransmissions" specification="_dM10cCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWlmWSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWlmWiumEeyJjNOKZ7e9aA" name="getRealTimeHartFlag" specification="_dM10ciumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWlmWyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWlmXCumEeyJjNOKZ7e9aA" name="setRealTimeHartFlag" specification="_dM10dCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWlmXSumEeyJjNOKZ7e9aA" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWlmXiumEeyJjNOKZ7e9aA" name="getMinPacketReceptionRate" specification="_dM10diumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWlmXyumEeyJjNOKZ7e9aA" type="_dVbIsCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWlmYCumEeyJjNOKZ7e9aA" name="getE2e" specification="_dM10eiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWlmYSumEeyJjNOKZ7e9aA" type="_dVbIsCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWlmYiumEeyJjNOKZ7e9aA" name="getName" specification="_dM2bgyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWlmYyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWlmZCumEeyJjNOKZ7e9aA" name="getOptimizationFlag" specification="_dM2biCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWlmZSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWlmZiumEeyJjNOKZ7e9aA" name="latencyReport" specification="_dM3CkiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWlmZyumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return latencyReport;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWlmaCumEeyJjNOKZ7e9aA" name="deadlineMisses" specification="_dM3CkyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWlmaSumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWlmaiumEeyJjNOKZ7e9aA" name="getNumFaults" specification="_dM3ClCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWlmayumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dMzYMCumEeyJjNOKZ7e9aA" name="toWorkLoad" method="_dWkYRyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUbqMCumEeyJjNOKZ7e9aA" type="_dN6LcCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMzYMSumEeyJjNOKZ7e9aA" name="buildOriginalProgram" method="_dWkYSyumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dMzYMiumEeyJjNOKZ7e9aA" name="waitInstruction" visibility="private" method="_dWkYTCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMzYMyumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMzYNCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMzYNSumEeyJjNOKZ7e9aA" name="elseWaitInstruction" visibility="private" method="_dWkYTyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMzYNiumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMzYNyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMz_QCumEeyJjNOKZ7e9aA" name="elsePullClause" visibility="private" method="_dWkYUiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMz_QSumEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMz_QiumEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMz_QyumEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMz_RCumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMz_RSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMz_RiumEeyJjNOKZ7e9aA" name="hasPushInstruction" visibility="private" method="_dWk_QCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMz_RyumEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMz_SCumEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMz_SSumEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMz_SiumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dMz_SyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMz_TCumEeyJjNOKZ7e9aA" name="pushInstruction" visibility="private" method="_dWk_RiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dMz_TSumEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dM0mUCumEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dM0mUSumEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dM0mUiumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dM0mUyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dM0mVCumEeyJjNOKZ7e9aA" name="getFirstChannelInInstruction" visibility="private" method="_dWk_TCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dM0mVSumEeyJjNOKZ7e9aA" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dM0mViumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dM0mVyumEeyJjNOKZ7e9aA" name="selectPriority" method="_dWk_ayumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dM1NYCumEeyJjNOKZ7e9aA" name="selectRM" method="_dWk_bCumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dM1NYSumEeyJjNOKZ7e9aA" name="selectDM" method="_dWk_bSumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dM1NYiumEeyJjNOKZ7e9aA" name="selectRtHART" method="_dWk_biumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dM1NYyumEeyJjNOKZ7e9aA" name="getSchedule" method="_dWlmUCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUcRTiumEeyJjNOKZ7e9aA" type="_dM5e0CumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dM1NZCumEeyJjNOKZ7e9aA" name="getSchedulerName" method="_dWlmUiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dM1NZSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dM1NZiumEeyJjNOKZ7e9aA" name="getSchChoice" method="_dWlmVCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dM1NZyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dM1NaCumEeyJjNOKZ7e9aA" name="getNumChannels" method="_dWlmViumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dM1NaSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dM10cCumEeyJjNOKZ7e9aA" name="getNumTransmissions" method="_dWlmWCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dM10cSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dM10ciumEeyJjNOKZ7e9aA" name="getRealTimeHartFlag" visibility="private" method="_dWlmWiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dM10cyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dM10dCumEeyJjNOKZ7e9aA" name="setRealTimeHartFlag" visibility="private" method="_dWlmXCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dM10dSumEeyJjNOKZ7e9aA" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dM10diumEeyJjNOKZ7e9aA" name="getMinPacketReceptionRate" method="_dWlmXiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVbIsiumEeyJjNOKZ7e9aA" type="_dVbIsCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dM10eiumEeyJjNOKZ7e9aA" name="getE2e" method="_dWlmYCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVbIsyumEeyJjNOKZ7e9aA" type="_dVbIsCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dM2bgyumEeyJjNOKZ7e9aA" name="getName" method="_dWlmYiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dM2bhCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dM2biCumEeyJjNOKZ7e9aA" name="getOptimizationFlag" method="_dWlmZCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dM2biSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dM3CkiumEeyJjNOKZ7e9aA" name="latencyReport" method="_dWlmZiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUcRTyumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dM3CkyumEeyJjNOKZ7e9aA" name="deadlineMisses" method="_dWlmaCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUcRUCumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dM3ClCumEeyJjNOKZ7e9aA" name="getNumFaults" method="_dWlmaiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dM3ClSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUbDICumEeyJjNOKZ7e9aA" name="setDefaultParameters" visibility="private" method="_dWkYQiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUbDISumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUbDIiumEeyJjNOKZ7e9aA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUbDIyumEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUbDJCumEeyJjNOKZ7e9aA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUbqMSumEeyJjNOKZ7e9aA" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_dWk_TyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUbqMiumEeyJjNOKZ7e9aA" name="schedule" type="_dM5e0CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUbqMyumEeyJjNOKZ7e9aA" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUbqNCumEeyJjNOKZ7e9aA" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUbqNSumEeyJjNOKZ7e9aA" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUbqNiumEeyJjNOKZ7e9aA" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUbqNyumEeyJjNOKZ7e9aA" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dUbqPyumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUbqOCumEeyJjNOKZ7e9aA" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dUbqQCumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUbqOSumEeyJjNOKZ7e9aA" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUbqOiumEeyJjNOKZ7e9aA" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUbqOyumEeyJjNOKZ7e9aA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUbqPCumEeyJjNOKZ7e9aA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUbqPSumEeyJjNOKZ7e9aA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUbqPiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUcRQCumEeyJjNOKZ7e9aA" name="slotIsAvailable" visibility="private" method="_dWk_XyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUcRQSumEeyJjNOKZ7e9aA" name="currentInstructionTimeSlot" type="_dMjgkCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUcRQiumEeyJjNOKZ7e9aA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUcRQyumEeyJjNOKZ7e9aA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUcRRCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUcRRSumEeyJjNOKZ7e9aA" name="findNextAvailableChannel" visibility="private" method="_dWk_ZCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUcRRiumEeyJjNOKZ7e9aA" name="schedule" type="_dM5e0CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUcRRyumEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUcRSCumEeyJjNOKZ7e9aA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUcRSSumEeyJjNOKZ7e9aA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUcRSiumEeyJjNOKZ7e9aA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUcRSyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUcRTCumEeyJjNOKZ7e9aA" name="setSchedule" visibility="private" method="_dWk_cSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUcRTSumEeyJjNOKZ7e9aA" name="schedule" type="_dM5e0CumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVZ6kCumEeyJjNOKZ7e9aA" name="Program" visibility="package" method="_dWkYNiumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dVZ6liumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dVZ6lyumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dVZ6kSumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVZ6kiumEeyJjNOKZ7e9aA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVZ6kyumEeyJjNOKZ7e9aA" name="choice" type="_dVZTgiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVZ6lCumEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVZ6lSumEeyJjNOKZ7e9aA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVZ6mCumEeyJjNOKZ7e9aA" type="_dMxjASumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVZ6mSumEeyJjNOKZ7e9aA" name="Program" visibility="package" method="_dWkYPSumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dVahoiumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dVahoyumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dVZ6miumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVahoCumEeyJjNOKZ7e9aA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVahoSumEeyJjNOKZ7e9aA" name="choice" type="_dVZTgiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVahpCumEeyJjNOKZ7e9aA" type="_dMxjASumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVahpSumEeyJjNOKZ7e9aA" name="buildProgram" method="_dWkYSSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVahpiumEeyJjNOKZ7e9aA" name="choice" type="_dVZTgiumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVahpyumEeyJjNOKZ7e9aA" name="setScheduleSelected" visibility="private" method="_dWk_byumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVahqCumEeyJjNOKZ7e9aA" name="choice" type="_dVZTgiumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_dMyKECumEeyJjNOKZ7e9aA" name="NodeIndexMap" visibility="private">
                <generalization xmi:id="_dVZTgCumEeyJjNOKZ7e9aA" general="_dT9wICumEeyJjNOKZ7e9aA"/>
                <ownedAttribute xmi:id="_dV_JYyumEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_dV_JZCumEeyJjNOKZ7e9aA" value="-6518730224642183876L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWkYNCumEeyJjNOKZ7e9aA" name="NodeIndexMap" specification="_dMyKESumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWkYNSumEeyJjNOKZ7e9aA" type="_dMyKECumEeyJjNOKZ7e9aA" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>super();&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_dMyKESumEeyJjNOKZ7e9aA" name="NodeIndexMap" method="_dWkYNCumEeyJjNOKZ7e9aA">
                  <eAnnotations xmi:id="_dMyxICumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_dMyxISumEeyJjNOKZ7e9aA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_dMyxIiumEeyJjNOKZ7e9aA" type="_dMyKECumEeyJjNOKZ7e9aA" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dM5e0CumEeyJjNOKZ7e9aA" name="ProgramSchedule">
              <generalization xmi:id="_dUeGcCumEeyJjNOKZ7e9aA" general="_dNUVkCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWBloCumEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWBloSumEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWmNYCumEeyJjNOKZ7e9aA" name="ProgramSchedule" specification="_dM6F4CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWmNYSumEeyJjNOKZ7e9aA" type="_dM5e0CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWmNYiumEeyJjNOKZ7e9aA" name="ProgramSchedule" specification="_dM6F5CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWmNYyumEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWmNZCumEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWmNZSumEeyJjNOKZ7e9aA" type="_dM5e0CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dM6F4CumEeyJjNOKZ7e9aA" name="ProgramSchedule" method="_dWmNYCumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dM6F4SumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dM6F4iumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dM6F4yumEeyJjNOKZ7e9aA" type="_dM5e0CumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dM6F5CumEeyJjNOKZ7e9aA" name="ProgramSchedule" visibility="package" method="_dWmNYiumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dM6F5yumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dM6F6CumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dM6F5SumEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dM6F5iumEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dM6F6SumEeyJjNOKZ7e9aA" type="_dM5e0CumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dM6s8CumEeyJjNOKZ7e9aA" name="ProgramVisualization">
              <ownedComment xmi:id="_rZbC0jd2EeykP74baAFnvg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dUetgSumEeyJjNOKZ7e9aA" general="_dNacMCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWBloiumEeyJjNOKZ7e9aA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWBloyumEeyJjNOKZ7e9aA" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWBlpCumEeyJjNOKZ7e9aA" name="sourceCode" visibility="private" type="_dM5e0CumEeyJjNOKZ7e9aA" association="_dXLcNyumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWBlpiumEeyJjNOKZ7e9aA" name="program" visibility="private" type="_dMxjASumEeyJjNOKZ7e9aA" association="_dXMDQSumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWmNZiumEeyJjNOKZ7e9aA" name="ProgramVisualization" specification="_dUeGciumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWmNZyumEeyJjNOKZ7e9aA" name="warp" type="_dNdfgCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWmNaCumEeyJjNOKZ7e9aA" type="_dM6s8CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.program = warp.toProgram();&#xD;
		this.sourceCode = program.getSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWmNaSumEeyJjNOKZ7e9aA" name="visualization" specification="_dM6s8SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWmNaiumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 	var orderedNodes = program.toWorkLoad().getNodesOrderedAlphabetically();  &#xD;
&#xD;
 	/* create schedule output header of column node names in order, with \t as  separator */&#xD;
 	String nodeString = &quot;Time Slot\t&quot;;&#xD;
 	/* loop through the node names, stopping just before last name */&#xD;
 	for (int i =0; i &lt; orderedNodes.length-1; i++) { &#xD;
 		/* add each name to the string, with \t between each name */&#xD;
 		nodeString += String.format(&quot;%s\t&quot;, orderedNodes[i]);&#xD;
 	}&#xD;
 	/* add the last name with \n instead of \t at the end */&#xD;
 	nodeString += String.format(&quot;%s\n&quot;, orderedNodes[orderedNodes.length-1]); &#xD;
 	content.add(nodeString);&#xD;
&#xD;
 	for (int rowIndex = 0;rowIndex &lt; sourceCode.size(); rowIndex++) {&#xD;
 		ArrayList&lt;String> rowArrayList = sourceCode.get(rowIndex);&#xD;
 		var row = rowArrayList.toArray(new String[rowArrayList.size()]);&#xD;
 		String rowString = String.format(&quot;%d\t&quot;, rowIndex) + String.join(&quot;\t&quot;,row) + &quot;\n&quot;;&#xD;
 		content.add(rowString);&#xD;
 	}&#xD;
 	return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWmNayumEeyJjNOKZ7e9aA" name="createHeader" specification="_dM6s9SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWmNbCumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		&#xD;
		header.add(String.format(&#xD;
				&quot;WARP system for graph %s created with the following parameters:\n&quot;,&#xD;
				program.getName()));&#xD;
 	header.add(String.format(&#xD;
 			&quot;Scheduler Name:\t%s\n&quot;,program.getSchedulerName()));&#xD;
 	header.add(String.format(&#xD;
 			&quot;M:\t%s\n&quot;,String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 	header.add(String.format(&quot;E2E:\t%s\n&quot;,String.valueOf(program.getE2e())));&#xD;
 	header.add(String.format(&quot;nChannels:\t%d\n&quot;,program.getNumChannels()));&#xD;
 	/* The following parameters are only output when special schedules are requested */&#xD;
 	if (program.getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
 		header.add(String.format(&quot;nTransmissions:\t%d)\n&quot;,program.getNumTransmissions()));&#xD;
 	}&#xD;
 	if (!program.getOptimizationFlag()) { // only specify when optimization not requested&#xD;
 		header.add(&quot;Optimization Requested:\tFalse\n&quot;) ;&#xD;
 	}&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dM6s8SumEeyJjNOKZ7e9aA" name="visualization" method="_dWmNaSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUeGdyumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dM6s9SumEeyJjNOKZ7e9aA" name="createHeader" method="_dWmNayumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUetgCumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUeGciumEeyJjNOKZ7e9aA" name="ProgramVisualization" visibility="package" method="_dWmNZiumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUeGdCumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUeGdSumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUeGcyumEeyJjNOKZ7e9aA" name="warp" type="_dNdfgCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUeGdiumEeyJjNOKZ7e9aA" type="_dM6s8CumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dM77ECumEeyJjNOKZ7e9aA" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_dVcW0CumEeyJjNOKZ7e9aA" client="_dM77ECumEeyJjNOKZ7e9aA" supplier="_dUFr9iumEeyJjNOKZ7e9aA" contract="_dUFr9iumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWmNbSumEeyJjNOKZ7e9aA" name="compare" specification="_dVc94CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWmNbiumEeyJjNOKZ7e9aA" name="obj1" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWmNbyumEeyJjNOKZ7e9aA" name="obj2" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWmNcCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dVc94CumEeyJjNOKZ7e9aA" name="compare" method="_dWmNbSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVc94SumEeyJjNOKZ7e9aA" name="obj1" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVc94iumEeyJjNOKZ7e9aA" name="obj2" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVc94yumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dM8iICumEeyJjNOKZ7e9aA" name="ReleaseTimeQueue">
              <generalization xmi:id="_dM9JNCumEeyJjNOKZ7e9aA" general="_dM9JMiumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWCMsSumEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWCMsiumEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWmNcSumEeyJjNOKZ7e9aA" name="ReleaseTimeQueue" specification="_dM8iIiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWmNciumEeyJjNOKZ7e9aA" type="_dM8iICumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWmNcyumEeyJjNOKZ7e9aA" name="ReleaseTimeQueue" specification="_dUetgiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWmNdCumEeyJjNOKZ7e9aA" name="schedulableObjects" type="_dUVjkiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWmNdSumEeyJjNOKZ7e9aA" type="_dM8iICumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dM8iIiumEeyJjNOKZ7e9aA" name="ReleaseTimeQueue" visibility="package" method="_dWmNcSumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dM8iIyumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dM9JMCumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dM9JMSumEeyJjNOKZ7e9aA" type="_dM8iICumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUetgiumEeyJjNOKZ7e9aA" name="ReleaseTimeQueue" visibility="package" method="_dWmNcyumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUethCumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUethSumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUetgyumEeyJjNOKZ7e9aA" name="schedulableObjects" type="_dUVjkiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUethiumEeyJjNOKZ7e9aA" type="_dM8iICumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dM9wQCumEeyJjNOKZ7e9aA" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_q14Q4Dd2EeykP74baAFnvg">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability&#xD;
of messages transmitted in flows for the WARP system. &lt;p>&#xD;
 &#xD;
Let M represent the Minimum Packet Reception Rate on an&#xD;
edge in a flow. The end-to-end reliability for each&#xD;
flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when&#xD;
it is released. All other initial probabilities are 0.0. (That&#xD;
is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as&#xD;
NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been &#xD;
received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time &#xD;
a push or pull is executed with SinkNode as a listener. &lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of&#xD;
the message reaching that node, and the end-to-end reliability of&#xD;
a flow is the value of the last Flow:SinkNode probability.&lt;p>&#xD;
&#xD;
CS2820 Fall 2021 Project: Implement this class to compute the&#xD;
probabilities the comprise the ReliablityMatrix, which is the core&#xD;
of the file visualization that is requested in WarpTester.&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source,&#xD;
parse the instructions for each node, in each time slot,&#xD;
to extract the src and snk nodes in the instruction and then&#xD;
apply the message success probability equation defined above.&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the &#xD;
WarpDSL class to extract the src and snk nodes from the instruction &#xD;
string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_0OQDgDXLEeyzKPzbxOg4Ww" name="DEFAULT_E2E" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_0OQqkDXLEeyzKPzbxOg4Ww" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_0OQqkTXLEeyzKPzbxOg4Ww" name="DEFAULT_MIN_PACKET_RECEPTION_RATE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_0OQqkjXLEeyzKPzbxOg4Ww" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_0OQqkzXLEeyzKPzbxOg4Ww" name="e2e" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_0OQqlTXLEeyzKPzbxOg4Ww" name="minPacketReceptionRate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_0ORRoTXLEeyzKPzbxOg4Ww" name="numFaults" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_0ORRozXLEeyzKPzbxOg4Ww" name="whichResult" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWmNdiumEeyJjNOKZ7e9aA" name="ReliabilityAnalysis" specification="_dUfUkSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWmNdyumEeyJjNOKZ7e9aA" name="program" type="_dMxjASumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWmNeCumEeyJjNOKZ7e9aA" type="_dM9wQCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
	   </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWmNeSumEeyJjNOKZ7e9aA" name="verifyReliabilities" specification="_dM9wQSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWmNeiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
        return false;&#xD;
    </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0OYmYDXLEeyzKPzbxOg4Ww" name="ReliabilityAnalysis" specification="_-Bz9oDBMEeyJyfgKlcqSwg">
                <ownedParameter xmi:id="_0OYmYTXLEeyzKPzbxOg4Ww" name="e2e" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_0OYmYjXLEeyzKPzbxOg4Ww" name="minPacketReceptionRate" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_0OYmYzXLEeyzKPzbxOg4Ww" type="_dM9wQCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
		  this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
		  whichResult = true;&#xD;
		  &#xD;
	      &#xD;
	   </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0OYmZDXLEeyzKPzbxOg4Ww" name="ReliabilityAnalysis" specification="_ZH6oQDBNEeyJyfgKlcqSwg">
                <ownedParameter xmi:id="_0OYmZTXLEeyzKPzbxOg4Ww" type="_dM9wQCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <ownedParameter xmi:id="_0OYmZjXLEeyzKPzbxOg4Ww" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numFaults = numFaults; &#xD;
		  this.e2e = DEFAULT_E2E;&#xD;
		  this.minPacketReceptionRate = DEFAULT_MIN_PACKET_RECEPTION_RATE;&#xD;
		  whichResult = false;&#xD;
		  &#xD;
	   </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0OYmZzXLEeyzKPzbxOg4Ww" name="numTxPerLinkAndTotalCost" specification="_wlOcsDBMEeyJyfgKlcqSwg">
                <ownedParameter xmi:id="_0OYmaDXLEeyzKPzbxOg4Ww" type="_dT-XMCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <ownedParameter xmi:id="_0OYmaTXLEeyzKPzbxOg4Ww" name="flow" type="_dMZIgCumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>if(whichResult == true) {&#xD;
	    	var nodesInFlow = flow.nodes;&#xD;
	        var nNodesInFlow = nodesInFlow.size(); // The last entry will contain the worst-case cost of&#xD;
	                                               // transmitting E2E in isolation&#xD;
	        var nPushes = new ArrayList&lt;Integer>(nNodesInFlow + 1);//OUR CODE&#xD;
	          											// Array to track nPushes for each node in this&#xD;
	                                                     // flow (same as nTx per link)&#xD;
	        &#xD;
	        for(int i = 0; i &lt; nNodesInFlow+1; i++) {&#xD;
	        	nPushes.add(0);&#xD;
	        } // initialize to all 0 values&#xD;
	        var nHops = nNodesInFlow - 1;&#xD;
	        // minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E&#xD;
	        // reliability for the flow&#xD;
	        Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); // use max&#xD;
	                                                                                              // to&#xD;
	                                                                                              // handle&#xD;
	                                                                                              // rounding&#xD;
	                                                                                              // error&#xD;
	                                                                                              // when&#xD;
	                                                                                              // e2e ==&#xD;
	                                                                                              // 1.0&#xD;
	        // Now compute reliability of packet reaching each node in the given time slot&#xD;
	        // Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
	        // each row is a time slot, stating at time 0&#xD;
	        // each column represents the reliability of the packet reaching that node at the&#xD;
	        // current time slot (i.e., the row it is in)&#xD;
	        // will add rows as we compute reliabilities until the final reliability is reached&#xD;
	        // for all nodes.&#xD;
	        var reliabilityWindow = new ReliabilityTable();&#xD;
	        var newReliabilityRow = new ReliabilityRow();&#xD;
	        for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
	          newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values&#xD;
	        }&#xD;
	        reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0&#xD;
	        ReliabilityRow tmpVector = reliabilityWindow.get(0);;&#xD;
	        ReliabilityRow currentReliabilityRowArrayList = new ReliabilityRow();&#xD;
	        currentReliabilityRowArrayList.addAll(tmpVector);&#xD;
	        // Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
	        // So, we initialize this first entry to 1.0, wich is reliabilityWindow[0][0]&#xD;
	        // We will then update this row with computed values for each node and put it&#xD;
	        // back in the matrix&#xD;
	        currentReliabilityRowArrayList.set(0, 1.0);&#xD;
	        // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
	        Double e2eReliabilityState = currentReliabilityRowArrayList.get(nNodesInFlow - 1); // the analysis will end&#xD;
	                                                                              // when the 2e2&#xD;
	                                                                              // reliability matrix is&#xD;
	                                                                              // met, initially the&#xD;
	                                                                              // state is not met and&#xD;
	                                                                              // will be 0 with this&#xD;
	                                                                              // statement&#xD;
	        var timeSlot = 0; // start time at 0&#xD;
	        while (e2eReliabilityState &lt; e2e) { // change to while and increment increment timeSlot because&#xD;
	                                            // we don't know how long this schedule window will last&#xD;
	          ReliabilityRow prevReliabilityRow = new ReliabilityRow();&#xD;
	          prevReliabilityRow.clear();&#xD;
	          prevReliabilityRow.addAll(currentReliabilityRowArrayList); 							// would&#xD;
	          currentReliabilityRowArrayList.clear();            									 // be&#xD;
	          currentReliabilityRowArrayList.addAll(newReliabilityRow);                               // reliabilityWindow[timeSlot]&#xD;
	                                                                                                   // if&#xD;
	                                                                                                   // working&#xD;
	                                                                                                   // through&#xD;
	                                                                                                   // a&#xD;
	                                                                                                   // schedule&#xD;
	          // Now use each flow:src->sink to update reliability computations&#xD;
	          // this is the update formula for the state probabilities&#xD;
	          // nextState = (1 - M) * prevState + M*NextHighestFlowState&#xD;
	          // use MinLQ for M in above equation&#xD;
&#xD;
	          for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) { // loop through each&#xD;
	                                                                                 // node in the flow and&#xD;
	                                                                                 // update the sates for&#xD;
	                                                                                 // each link (i.e.,&#xD;
	                                                                                 // sink->src pair)&#xD;
	            var flowSrcNodeindex = nodeIndex;&#xD;
	            var flowSnkNodeindex = nodeIndex + 1;&#xD;
	            var prevSrcNodeState = prevReliabilityRow.get(flowSrcNodeindex);&#xD;
	            var prevSnkNodeState = prevReliabilityRow.get(flowSnkNodeindex);&#xD;
	            Double nextSnkState;&#xD;
	            if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) { // do a push&#xD;
	                                                                                       // until PrevSnk&#xD;
	                                                                                       // state > e2e to&#xD;
	                                                                                       // ensure next&#xD;
	                                                                                       // node reaches&#xD;
	                                                                                       // target E2E BUT&#xD;
	                                                                                       // skip if no&#xD;
	                                                                                       // chance of&#xD;
	                                                                                       // success (i.e.,&#xD;
	                                                                                       // source doesn't&#xD;
	                                                                                       // have packet)&#xD;
	              nextSnkState = ((1.0 - minPacketReceptionRate) * prevSnkNodeState) + (minPacketReceptionRate * prevSrcNodeState); // need to&#xD;
	                                                                                      // continue&#xD;
	                                                                                      // attempting to&#xD;
	                                                                                      // Tx, so update&#xD;
	              nPushes.set(nodeIndex, nPushes.get(nodeIndex) + 1); // our CODE         // current state&#xD;
	               // increment the number of pushes for for this node to snk node&#xD;
	            } else {&#xD;
	              nextSnkState = prevSnkNodeState; // snkNode has met its reliability. Thus move on to the&#xD;
	                                               // next node and record the reliability met&#xD;
	            }&#xD;
&#xD;
	            if (currentReliabilityRowArrayList.get(flowSrcNodeindex) &lt; prevReliabilityRow.get(flowSrcNodeindex)) { // probabilities&#xD;
	                                                                                                  // are&#xD;
	                                                                                                  // non-decreasing&#xD;
	                                                                                                  // so&#xD;
	                                                                                                  // update&#xD;
	                                                                                                  // if&#xD;
	                                                                                                  // we&#xD;
	                                                                                                  // were&#xD;
	                                                                                                  // higher&#xD;
	                                                                                                  // by&#xD;
	                                                                                                  // carring&#xD;
	                                                                                                  // old&#xD;
	                                                                                                  // value&#xD;
	              currentReliabilityRowArrayList.set(flowSrcNodeindex, prevReliabilityRow.get(flowSrcNodeindex));                                                                                    // forward&#xD;
	              																					// carry&#xD;
	                                                                                              // forward&#xD;
	                                                                                              // the&#xD;
	                                                                                              // previous&#xD;
	                                                                                              // state&#xD;
	                                                                                              // for the&#xD;
	                                                                                              // src&#xD;
	                                                                                              // node,&#xD;
	                                                                                              // which&#xD;
	                                                                                              // may get&#xD;
	                                                                                              // over&#xD;
	                                                                                              // written&#xD;
	                                                                                              // later&#xD;
	                                                                                              // by&#xD;
	                                                                                              // another&#xD;
	                                                                                              // instruction&#xD;
	                                                                                              // in this&#xD;
	                                                                                              // slot&#xD;
	            }&#xD;
	            currentReliabilityRowArrayList.set(flowSnkNodeindex, nextSnkState);;&#xD;
	          }&#xD;
&#xD;
	          e2eReliabilityState = currentReliabilityRowArrayList.get(nNodesInFlow - 1);&#xD;
	          ReliabilityRow currentReliabilityVector = new ReliabilityRow();&#xD;
	          // convert the row to a vector so we can add it to the reliability window&#xD;
	          &#xD;
	          //REMINDER THIS IS WHERE WE LEFT OFF need to change the .addAll&#xD;
	          currentReliabilityVector = currentReliabilityRowArrayList;&#xD;
	          &#xD;
	          if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
	            reliabilityWindow.set(timeSlot, (currentReliabilityVector));&#xD;
	          } else {&#xD;
	            reliabilityWindow.add(currentReliabilityVector);&#xD;
	          }&#xD;
	          timeSlot += 1; // increase to next time slot&#xD;
	        }&#xD;
	        var size = reliabilityWindow.size();&#xD;
	        nPushes.set(nNodesInFlow, size);&#xD;
	        							// The total (worst-case) cost to transmit E2E in isolation with&#xD;
	                                      // specified reliability target is the number of rows in the&#xD;
	                                      // reliabilityWindow&#xD;
	        // Now convert the array to the ArrayList needed to return&#xD;
	        return nPushes; 	&#xD;
	    	&#xD;
	    }else{//END OF IF&#xD;
	    	var nodesInFlow = flow.nodes;&#xD;
	        var nNodesInFlow = nodesInFlow.size();&#xD;
	        ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
	        /*&#xD;
	         * Each node will have at most numFaults+1 transmissions. Because we don't know which nodes will&#xD;
	         * send the message over an edge, we give the cost to each node.&#xD;
	         */&#xD;
	        for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
	          txArrayList.add(numFaults + 1);&#xD;
	        }&#xD;
	        /*&#xD;
	         * now compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and&#xD;
	         * each edge requires at least one successful TX.&#xD;
	         */&#xD;
	        var numEdgesInFlow = nNodesInFlow - 1;&#xD;
	        var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
	        txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
	        return txArrayList;&#xD;
	    	&#xD;
	   &#xD;
	    }//END OF ELSE&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dM9wQSumEeyJjNOKZ7e9aA" name="verifyReliabilities" method="_dWmNeSumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q14Q5Dd2EeykP74baAFnvg">
                  <body>&#xD;
    * @return Boolean</body>
                </ownedComment>
                <ownedParameter xmi:id="_dM9wQiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUfUkSumEeyJjNOKZ7e9aA" name="ReliabilityAnalysis" method="_dWmNdiumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUfUkyumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUfUlCumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_q14Q4Td2EeykP74baAFnvg">
                  <body>Creates an object ReliabilityAnalysis with the specified information&#xD;
    * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_dUfUkiumEeyJjNOKZ7e9aA" name="program" type="_dMxjASumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUfUlSumEeyJjNOKZ7e9aA" type="_dM9wQCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n7Y6cCupEeyJjNOKZ7e9aA" name="getReliabilities">
                <ownedComment xmi:id="_q14Q5Td2EeykP74baAFnvg">
                  <body>&#xD;
    * @return ReliabilityTable</body>
                </ownedComment>
                <ownedParameter xmi:id="_n7Y6cSupEeyJjNOKZ7e9aA" type="_dM--ZCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_wlOcsDBMEeyJyfgKlcqSwg" name="numTxPerLinkAndTotalCost" method="_0OYmZzXLEeyzKPzbxOg4Ww">
                <ownedComment xmi:id="_q14Q5jd2EeykP74baAFnvg">
                  <body>Public function designed to return an ArrayList, representing a flow's &#xD;
    * numTxPerLinkAndTotalCost, results are meant to vary depending on the&#xD;
    * instance of the ReliabilityAnalysis object that is created.&#xD;
    * &#xD;
    * @param flow Name of the flow that calculations should be done on&#xD;
    * @return An ArrayList of Integers that either represents the &#xD;
    *         FixedTxPerLinkAndTotalTxCost or nTxPerLinkAndTotalTxCost depending&#xD;
    *         on the parameters feed into the ReliabilityAnalysis constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_wlOcsTBMEeyJyfgKlcqSwg" type="_dT-XMCumEeyJjNOKZ7e9aA" direction="return"/>
                <ownedParameter xmi:id="_yXz0oDBMEeyJyfgKlcqSwg" name="flow" type="_dMZIgCumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_-Bz9oDBMEeyJyfgKlcqSwg" name="ReliabilityAnalysis" method="_0OYmYDXLEeyzKPzbxOg4Ww">
                <eAnnotations xmi:id="_VK0gkDBNEeyJyfgKlcqSwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_VK0gkTBNEeyJyfgKlcqSwg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_q14Q4jd2EeykP74baAFnvg">
                  <body>This public constructor is when the constructor call has both a specific&#xD;
    * e2e and a specific minimum packet reception rate and does not take in &#xD;
    * numfaults&#xD;
    * @param e2e&#xD;
    * @param minPacketReceptionRate</body>
                </ownedComment>
                <ownedParameter xmi:id="__s7boDBMEeyJyfgKlcqSwg" name="e2e" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_B3_lADBNEeyJyfgKlcqSwg" name="minPacketReceptionRate" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_RESwETBNEeyJyfgKlcqSwg" type="_dM9wQCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZH6oQDBNEeyJyfgKlcqSwg" name="ReliabilityAnalysis" method="_0OYmZDXLEeyzKPzbxOg4Ww">
                <eAnnotations xmi:id="_glHZoDBNEeyJyfgKlcqSwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_glHZoTBNEeyJyfgKlcqSwg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_q14Q4zd2EeykP74baAFnvg">
                  <body>This public constructor is for when the constructor call only gives&#xD;
    * an integer representing the numFaults and uses the default e2e and&#xD;
    * default minimum packet reception rate&#xD;
    * @param numFaults</body>
                </ownedComment>
                <ownedParameter xmi:id="_anIYQDBNEeyJyfgKlcqSwg" type="_dM9wQCumEeyJjNOKZ7e9aA" direction="return"/>
                <ownedParameter xmi:id="_bPZSIDBNEeyJyfgKlcqSwg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_dM9wQyumEeyJjNOKZ7e9aA" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_rZbC0zd2EeykP74baAFnvg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dM-XUCumEeyJjNOKZ7e9aA" name="minPacketReceptionRate" type="_dVbIsCumEeyJjNOKZ7e9aA" isReadOnly="true"/>
              <ownedAttribute xmi:id="_dM-XUSumEeyJjNOKZ7e9aA" name="e2e" type="_dVbIsCumEeyJjNOKZ7e9aA" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dM-XUiumEeyJjNOKZ7e9aA" name="ReliabilityRow">
              <generalization xmi:id="_dUfUliumEeyJjNOKZ7e9aA" general="_dNBaoCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWCMsyumEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWCMtCumEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWmNeyumEeyJjNOKZ7e9aA" name="ReliabilityRow" specification="_dM--YCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWmNfCumEeyJjNOKZ7e9aA" type="_dM-XUiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWm0cCumEeyJjNOKZ7e9aA" name="ReliabilityRow" specification="_dVdk8CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWm0cSumEeyJjNOKZ7e9aA" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWm0ciumEeyJjNOKZ7e9aA" name="element" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWm0cyumEeyJjNOKZ7e9aA" type="_dM-XUiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWm0dCumEeyJjNOKZ7e9aA" name="ReliabilityRow" specification="_dVdk9iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWm0dSumEeyJjNOKZ7e9aA" name="rowArray" type="_dVbIsCumEeyJjNOKZ7e9aA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWm0diumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWm0dyumEeyJjNOKZ7e9aA" type="_dM-XUiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dM--YCumEeyJjNOKZ7e9aA" name="ReliabilityRow" method="_dWmNeyumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dM--YSumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dM--YiumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dM--YyumEeyJjNOKZ7e9aA" type="_dM-XUiumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVdk8CumEeyJjNOKZ7e9aA" name="ReliabilityRow" visibility="package" method="_dWm0cCumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dVdk8yumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dVdk9CumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dVdk8SumEeyJjNOKZ7e9aA" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVdk8iumEeyJjNOKZ7e9aA" name="element" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVdk9SumEeyJjNOKZ7e9aA" type="_dM-XUiumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVdk9iumEeyJjNOKZ7e9aA" name="ReliabilityRow" visibility="package" method="_dWm0dCumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dVdk-CumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dVdk-SumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dVdk9yumEeyJjNOKZ7e9aA" name="rowArray" type="_dVbIsCumEeyJjNOKZ7e9aA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dVeMACumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVdk-iumEeyJjNOKZ7e9aA" type="_dM-XUiumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dM--ZCumEeyJjNOKZ7e9aA" name="ReliabilityTable">
              <generalization xmi:id="_dUf7oSumEeyJjNOKZ7e9aA" general="_dNUVkCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWCMtSumEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWCMtiumEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWm0eCumEeyJjNOKZ7e9aA" name="ReliabilityTable" specification="_dM_lcCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWm0eSumEeyJjNOKZ7e9aA" type="_dM--ZCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWm0eiumEeyJjNOKZ7e9aA" name="ReliabilityTable" specification="_dM_ldCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWm0eyumEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWm0fCumEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWm0fSumEeyJjNOKZ7e9aA" type="_dM--ZCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dM_lcCumEeyJjNOKZ7e9aA" name="ReliabilityTable" method="_dWm0eCumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dM_lcSumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dM_lciumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dM_lcyumEeyJjNOKZ7e9aA" type="_dM--ZCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dM_ldCumEeyJjNOKZ7e9aA" name="ReliabilityTable" visibility="package" method="_dWm0eiumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dM_ldyumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dM_leCumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dM_ldSumEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dM_ldiumEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dM_leSumEeyJjNOKZ7e9aA" type="_dM--ZCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dM_leiumEeyJjNOKZ7e9aA" name="ReliabilityVisualization">
              <ownedComment xmi:id="_rZbC1Dd2EeykP74baAFnvg">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Fall 2021 Project: Implement this class to create&#xD;
the file visualization that is requested in WarpTester.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dUgitCumEeyJjNOKZ7e9aA" general="_dNacMCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWCMtyumEeyJjNOKZ7e9aA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWCMuCumEeyJjNOKZ7e9aA" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWCMuSumEeyJjNOKZ7e9aA" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWCzwCumEeyJjNOKZ7e9aA" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWCzwSumEeyJjNOKZ7e9aA" name="warp" visibility="private" type="_dNdfgCumEeyJjNOKZ7e9aA" association="_dXMDRCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWCzwyumEeyJjNOKZ7e9aA" name="ra" visibility="private" type="_dM9wQCumEeyJjNOKZ7e9aA" association="_dXMDRyumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWm0fiumEeyJjNOKZ7e9aA" name="ReliabilityVisualization" specification="_dUf7oyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWm0fyumEeyJjNOKZ7e9aA" name="warp" type="_dNdfgCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWm0gCumEeyJjNOKZ7e9aA" type="_dM_leiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dUf7oyumEeyJjNOKZ7e9aA" name="ReliabilityVisualization" visibility="package" method="_dWm0fiumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUgisSumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUgisiumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUgisCumEeyJjNOKZ7e9aA" name="warp" type="_dNdfgCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUgisyumEeyJjNOKZ7e9aA" type="_dM_leiumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNAMgCumEeyJjNOKZ7e9aA" name="ReportVisualization">
              <generalization xmi:id="_dUhJwiumEeyJjNOKZ7e9aA" general="_dNacMCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWCzxSumEeyJjNOKZ7e9aA" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWCzxiumEeyJjNOKZ7e9aA" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWCzxyumEeyJjNOKZ7e9aA" name="content" visibility="private" type="_dMRzwSumEeyJjNOKZ7e9aA" association="_dXMDSiumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWCzySumEeyJjNOKZ7e9aA" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWm0gSumEeyJjNOKZ7e9aA" name="ReportVisualization" specification="_dUgitSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWm0giumEeyJjNOKZ7e9aA" name="fm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWm0gyumEeyJjNOKZ7e9aA" name="warp" type="_dNSgYCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWm0hCumEeyJjNOKZ7e9aA" name="content" type="_dMRzwSumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWm0hSumEeyJjNOKZ7e9aA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWm0hiumEeyJjNOKZ7e9aA" type="_dNAMgCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWm0hyumEeyJjNOKZ7e9aA" name="visualization" specification="_dNAzkCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWm0iCumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWm0iSumEeyJjNOKZ7e9aA" name="createReport" specification="_dNAzlCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWm0iiumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dNAzkCumEeyJjNOKZ7e9aA" name="visualization" method="_dWm0hyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUhJwCumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNAzlCumEeyJjNOKZ7e9aA" name="createReport" visibility="private" method="_dWm0iSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUhJwSumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUgitSumEeyJjNOKZ7e9aA" name="ReportVisualization" visibility="package" method="_dWm0gSumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUgiuiumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUgiuyumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUgitiumEeyJjNOKZ7e9aA" name="fm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUgityumEeyJjNOKZ7e9aA" name="warp" type="_dNSgYCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUgiuCumEeyJjNOKZ7e9aA" name="content" type="_dMRzwSumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUgiuSumEeyJjNOKZ7e9aA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUgivCumEeyJjNOKZ7e9aA" type="_dNAMgCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNBaoCumEeyJjNOKZ7e9aA" name="Row">
              <generalization xmi:id="_dVezGSumEeyJjNOKZ7e9aA" general="_dT-XMCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWDa0SumEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWDa0iumEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWm0iyumEeyJjNOKZ7e9aA" name="Row" specification="_dNCBsCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWm0jCumEeyJjNOKZ7e9aA" type="_dNBaoCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWm0jSumEeyJjNOKZ7e9aA" name="Row" specification="_dVeMASumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWm0jiumEeyJjNOKZ7e9aA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWm0jyumEeyJjNOKZ7e9aA" name="element" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWm0kCumEeyJjNOKZ7e9aA" type="_dNBaoCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWm0kSumEeyJjNOKZ7e9aA" name="Row" specification="_dVezEyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWm0kiumEeyJjNOKZ7e9aA" name="rowArray" type="_dVNGQiumEeyJjNOKZ7e9aA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWm0kyumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWm0lCumEeyJjNOKZ7e9aA" type="_dNBaoCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWm0lSumEeyJjNOKZ7e9aA" name="Row" specification="_dNCBtCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWm0liumEeyJjNOKZ7e9aA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWm0lyumEeyJjNOKZ7e9aA" type="_dNBaoCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dNCBsCumEeyJjNOKZ7e9aA" name="Row" method="_dWm0iyumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dNCBsSumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dNCBsiumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dNCBsyumEeyJjNOKZ7e9aA" type="_dNBaoCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNCBtCumEeyJjNOKZ7e9aA" name="Row" visibility="package" method="_dWm0lSumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dNCBtiumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dNCBtyumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dNCBtSumEeyJjNOKZ7e9aA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNCBuCumEeyJjNOKZ7e9aA" type="_dNBaoCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVeMASumEeyJjNOKZ7e9aA" name="Row" visibility="package" method="_dWm0jSumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dVezECumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dVezESumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dVeMAiumEeyJjNOKZ7e9aA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVeMAyumEeyJjNOKZ7e9aA" name="element" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVezEiumEeyJjNOKZ7e9aA" type="_dNBaoCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVezEyumEeyJjNOKZ7e9aA" name="Row" visibility="package" method="_dWm0kSumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dVezFSumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dVezFiumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dVezFCumEeyJjNOKZ7e9aA" name="rowArray" type="_dVNGQiumEeyJjNOKZ7e9aA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dVezGCumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVezFyumEeyJjNOKZ7e9aA" type="_dNBaoCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNCowCumEeyJjNOKZ7e9aA" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_dWDa0yumEeyJjNOKZ7e9aA" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWDa1CumEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWDa1SumEeyJjNOKZ7e9aA" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWDa1iumEeyJjNOKZ7e9aA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWDa1yumEeyJjNOKZ7e9aA" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWDa2CumEeyJjNOKZ7e9aA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWDa2SumEeyJjNOKZ7e9aA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWEB4CumEeyJjNOKZ7e9aA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWEB4SumEeyJjNOKZ7e9aA" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWEB4iumEeyJjNOKZ7e9aA" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWEB4yumEeyJjNOKZ7e9aA" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWEB5SumEeyJjNOKZ7e9aA" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWEB5iumEeyJjNOKZ7e9aA" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWEB5yumEeyJjNOKZ7e9aA" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWEB6CumEeyJjNOKZ7e9aA" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWEo8SumEeyJjNOKZ7e9aA" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWEo8yumEeyJjNOKZ7e9aA" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWEo9SumEeyJjNOKZ7e9aA" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWEo9iumEeyJjNOKZ7e9aA" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWEo9yumEeyJjNOKZ7e9aA" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWEo-CumEeyJjNOKZ7e9aA" name="predecessor" type="_dNCowCumEeyJjNOKZ7e9aA" association="_dW3TJCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWEo-SumEeyJjNOKZ7e9aA" name="endTimes" visibility="private" type="_dM9JMiumEeyJjNOKZ7e9aA" association="_dXMqUSumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWFQAiumEeyJjNOKZ7e9aA" name="subObjects" type="_dUhw0iumEeyJjNOKZ7e9aA" isReadOnly="true" association="_dXMqVCumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWnbgCumEeyJjNOKZ7e9aA" name="SchedulableObject" specification="_dNDP0CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWnbgSumEeyJjNOKZ7e9aA" type="_dNCowCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWnbgiumEeyJjNOKZ7e9aA" name="SchedulableObject" specification="_dUiX4CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWnbgyumEeyJjNOKZ7e9aA" name="obj" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWnbhCumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWnbhSumEeyJjNOKZ7e9aA" type="_dNCowCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWnbhiumEeyJjNOKZ7e9aA" name="SchedulableObject" specification="_dND24CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWnbhyumEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWnbiCumEeyJjNOKZ7e9aA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWnbiSumEeyJjNOKZ7e9aA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWnbiiumEeyJjNOKZ7e9aA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWnbiyumEeyJjNOKZ7e9aA" type="_dNCowCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWnbjCumEeyJjNOKZ7e9aA" name="SchedulableObject" specification="_dND26CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWnbjSumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWnbjiumEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWnbjyumEeyJjNOKZ7e9aA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWnbkCumEeyJjNOKZ7e9aA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWnbkSumEeyJjNOKZ7e9aA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWnbkiumEeyJjNOKZ7e9aA" type="_dNCowCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWnbkyumEeyJjNOKZ7e9aA" name="setDefaultParameters" specification="_dND28SumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWnblCumEeyJjNOKZ7e9aA" name="getAllEndTimes" specification="_dNEd8CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWnblSumEeyJjNOKZ7e9aA" type="_dM9JMiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWnbliumEeyJjNOKZ7e9aA" name="addToEndTimes" specification="_dNEd8iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWnblyumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWnbmCumEeyJjNOKZ7e9aA" name="peekEndTimes" specification="_dNEd9CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWnbmSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWnbmiumEeyJjNOKZ7e9aA" name="pollEndTimes" specification="_dNEd9iumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWnbmyumEeyJjNOKZ7e9aA" name="addSubObject" specification="_dUiX5yumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWnbnCumEeyJjNOKZ7e9aA" name="obj" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWnbnSumEeyJjNOKZ7e9aA" name="getName" specification="_dNFFACumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWnbniumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWnbnyumEeyJjNOKZ7e9aA" name="setName" specification="_dNFFAiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWnboCumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWnboSumEeyJjNOKZ7e9aA" name="getReleaseTime" specification="_dNFFBCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWnboiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWnboyumEeyJjNOKZ7e9aA" name="getPhase" specification="_dNFFBiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWnbpCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWnbpSumEeyJjNOKZ7e9aA" name="getStartTime" specification="_dNFFCCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWnbpiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWoCkCumEeyJjNOKZ7e9aA" name="setEndTime" specification="_dNFFCiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWoCkSumEeyJjNOKZ7e9aA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWoCkiumEeyJjNOKZ7e9aA" name="setStartTime" specification="_dNFsECumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWoCkyumEeyJjNOKZ7e9aA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWoClCumEeyJjNOKZ7e9aA" name="setReleaseTime" specification="_dNFsEiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWoClSumEeyJjNOKZ7e9aA" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWoCliumEeyJjNOKZ7e9aA" name="setPeriod" specification="_dNFsFCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWoClyumEeyJjNOKZ7e9aA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWoCmCumEeyJjNOKZ7e9aA" name="setPhase" specification="_dNFsFiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWoCmSumEeyJjNOKZ7e9aA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWoCmiumEeyJjNOKZ7e9aA" name="setNextReleaseTime" specification="_dNFsGCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWoCmyumEeyJjNOKZ7e9aA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWoCnCumEeyJjNOKZ7e9aA" name="maxPhaseComparison" specification="_dUiX6SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWoCnSumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWoCniumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWoCnyumEeyJjNOKZ7e9aA" name="maxPhaseComparison" specification="_dUi-8SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWoCoCumEeyJjNOKZ7e9aA" name="obj1" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWoCoSumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWoCoiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWoCoyumEeyJjNOKZ7e9aA" name="deadlineComparison" specification="_dUi-9SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWoCpCumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWoCpSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWoCpiumEeyJjNOKZ7e9aA" name="deadlineComparison" specification="_dUi--CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWoCpyumEeyJjNOKZ7e9aA" name="obj1" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWoCqCumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWoCqSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWoCqiumEeyJjNOKZ7e9aA" name="periodComparison" specification="_dUi-_CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWoCqyumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWoCrCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWoCrSumEeyJjNOKZ7e9aA" name="periodComparison" specification="_dUi-_yumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWoCriumEeyJjNOKZ7e9aA" name="obj1" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWoCryumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWoCsCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWoCsSumEeyJjNOKZ7e9aA" name="priorityComparison" specification="_dUjmAyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWoCsiumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWoCsyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWoCtCumEeyJjNOKZ7e9aA" name="priorityComparison" specification="_dUjmBiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWoCtSumEeyJjNOKZ7e9aA" name="obj1" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWoCtiumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWoCtyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWoCuCumEeyJjNOKZ7e9aA" name="releaseTimeComparison" specification="_dUjmCiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWoCuSumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWoCuiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWoCuyumEeyJjNOKZ7e9aA" name="releaseTimeComparison" specification="_dUjmDSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWoCvCumEeyJjNOKZ7e9aA" name="obj1" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWoCvSumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWoCviumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWopoCumEeyJjNOKZ7e9aA" name="LatestReleaseTimeComparison" specification="_dUkNECumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWopoSumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWopoiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWopoyumEeyJjNOKZ7e9aA" name="LatestReleaseTimeComparison" specification="_dUkNEyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWoppCumEeyJjNOKZ7e9aA" name="obj1" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWoppSumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWoppiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWoppyumEeyJjNOKZ7e9aA" name="compareAscendingOrder" specification="_dNGTICumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWopqCumEeyJjNOKZ7e9aA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWopqSumEeyJjNOKZ7e9aA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWopqiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWopqyumEeyJjNOKZ7e9aA" name="compareDescendingOrder" specification="_dNG6MCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWoprCumEeyJjNOKZ7e9aA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWoprSumEeyJjNOKZ7e9aA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWopriumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWopryumEeyJjNOKZ7e9aA" name="print" specification="_dNG6NCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWopsCumEeyJjNOKZ7e9aA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWopsSumEeyJjNOKZ7e9aA" name="print" specification="_dNG6NiumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dNDP0CumEeyJjNOKZ7e9aA" name="SchedulableObject" visibility="package" method="_dWnbgCumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dNDP0SumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dNDP0iumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dNDP0yumEeyJjNOKZ7e9aA" type="_dNCowCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dND24CumEeyJjNOKZ7e9aA" name="SchedulableObject" visibility="package" method="_dWnbhiumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dND25SumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dND25iumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dND24SumEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dND24iumEeyJjNOKZ7e9aA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dND24yumEeyJjNOKZ7e9aA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dND25CumEeyJjNOKZ7e9aA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dND25yumEeyJjNOKZ7e9aA" type="_dNCowCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dND26CumEeyJjNOKZ7e9aA" name="SchedulableObject" visibility="package" method="_dWnbjCumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dND27iumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dND27yumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dND26SumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dND26iumEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dND26yumEeyJjNOKZ7e9aA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dND27CumEeyJjNOKZ7e9aA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dND27SumEeyJjNOKZ7e9aA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dND28CumEeyJjNOKZ7e9aA" type="_dNCowCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dND28SumEeyJjNOKZ7e9aA" name="setDefaultParameters" visibility="private" method="_dWnbkyumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNEd8CumEeyJjNOKZ7e9aA" name="getAllEndTimes" method="_dWnblCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZc4Ajd2EeykP74baAFnvg">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_dUiX5iumEeyJjNOKZ7e9aA" type="_dM9JMiumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNEd8iumEeyJjNOKZ7e9aA" name="addToEndTimes" method="_dWnbliumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNEd8yumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNEd9CumEeyJjNOKZ7e9aA" name="peekEndTimes" method="_dWnbmCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNEd9SumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNEd9iumEeyJjNOKZ7e9aA" name="pollEndTimes" method="_dWnbmiumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNFFACumEeyJjNOKZ7e9aA" name="getName" method="_dWnbnSumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZc4Azd2EeykP74baAFnvg">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNFFASumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNFFAiumEeyJjNOKZ7e9aA" name="setName" method="_dWnbnyumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZc4BDd2EeykP74baAFnvg">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNFFAyumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNFFBCumEeyJjNOKZ7e9aA" name="getReleaseTime" method="_dWnboSumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZc4BTd2EeykP74baAFnvg">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNFFBSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNFFBiumEeyJjNOKZ7e9aA" name="getPhase" method="_dWnboyumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZc4Bjd2EeykP74baAFnvg">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNFFByumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNFFCCumEeyJjNOKZ7e9aA" name="getStartTime" method="_dWnbpSumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZc4Bzd2EeykP74baAFnvg">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNFFCSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNFFCiumEeyJjNOKZ7e9aA" name="setEndTime" method="_dWoCkCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZc4CDd2EeykP74baAFnvg">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNFFCyumEeyJjNOKZ7e9aA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNFsECumEeyJjNOKZ7e9aA" name="setStartTime" method="_dWoCkiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZc4CTd2EeykP74baAFnvg">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNFsESumEeyJjNOKZ7e9aA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNFsEiumEeyJjNOKZ7e9aA" name="setReleaseTime" method="_dWoClCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZc4Cjd2EeykP74baAFnvg">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNFsEyumEeyJjNOKZ7e9aA" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNFsFCumEeyJjNOKZ7e9aA" name="setPeriod" method="_dWoCliumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZc4Czd2EeykP74baAFnvg">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNFsFSumEeyJjNOKZ7e9aA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNFsFiumEeyJjNOKZ7e9aA" name="setPhase" method="_dWoCmCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZc4DDd2EeykP74baAFnvg">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNFsFyumEeyJjNOKZ7e9aA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNFsGCumEeyJjNOKZ7e9aA" name="setNextReleaseTime" method="_dWoCmiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZc4DTd2EeykP74baAFnvg">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNFsGSumEeyJjNOKZ7e9aA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNGTICumEeyJjNOKZ7e9aA" name="compareAscendingOrder" method="_dWoppyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNGTISumEeyJjNOKZ7e9aA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNGTIiumEeyJjNOKZ7e9aA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNGTIyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNG6MCumEeyJjNOKZ7e9aA" name="compareDescendingOrder" method="_dWopqyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNG6MSumEeyJjNOKZ7e9aA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNG6MiumEeyJjNOKZ7e9aA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNG6MyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNG6NCumEeyJjNOKZ7e9aA" name="print" method="_dWopryumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNG6NSumEeyJjNOKZ7e9aA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNG6NiumEeyJjNOKZ7e9aA" name="print" method="_dWopsSumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dUiX4CumEeyJjNOKZ7e9aA" name="SchedulableObject" visibility="package" method="_dWnbgiumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUiX4yumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUiX5CumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rZc4ATd2EeykP74baAFnvg">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_dUiX4SumEeyJjNOKZ7e9aA" name="obj" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUiX4iumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUiX5SumEeyJjNOKZ7e9aA" type="_dNCowCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUiX5yumEeyJjNOKZ7e9aA" name="addSubObject" method="_dWnbmyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUiX6CumEeyJjNOKZ7e9aA" name="obj" type="_dNCowCumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUiX6SumEeyJjNOKZ7e9aA" name="maxPhaseComparison" method="_dWoCnCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUiX6iumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUi-8CumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUi-8SumEeyJjNOKZ7e9aA" name="maxPhaseComparison" method="_dWoCnyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUi-8iumEeyJjNOKZ7e9aA" name="obj1" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUi-8yumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUi-9CumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUi-9SumEeyJjNOKZ7e9aA" name="deadlineComparison" method="_dWoCoyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUi-9iumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUi-9yumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUi--CumEeyJjNOKZ7e9aA" name="deadlineComparison" method="_dWoCpiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUi--SumEeyJjNOKZ7e9aA" name="obj1" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUi--iumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUi--yumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUi-_CumEeyJjNOKZ7e9aA" name="periodComparison" method="_dWoCqiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUi-_SumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUi-_iumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUi-_yumEeyJjNOKZ7e9aA" name="periodComparison" method="_dWoCrSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUjmACumEeyJjNOKZ7e9aA" name="obj1" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUjmASumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUjmAiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUjmAyumEeyJjNOKZ7e9aA" name="priorityComparison" method="_dWoCsSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUjmBCumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUjmBSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUjmBiumEeyJjNOKZ7e9aA" name="priorityComparison" method="_dWoCtCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUjmByumEeyJjNOKZ7e9aA" name="obj1" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUjmCCumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUjmCSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUjmCiumEeyJjNOKZ7e9aA" name="releaseTimeComparison" method="_dWoCuCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUjmCyumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUjmDCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUjmDSumEeyJjNOKZ7e9aA" name="releaseTimeComparison" method="_dWoCuyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUjmDiumEeyJjNOKZ7e9aA" name="obj1" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUjmDyumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUjmECumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUkNECumEeyJjNOKZ7e9aA" name="LatestReleaseTimeComparison" method="_dWopoCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUkNESumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUkNEiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUkNEyumEeyJjNOKZ7e9aA" name="LatestReleaseTimeComparison" method="_dWopoyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUkNFCumEeyJjNOKZ7e9aA" name="obj1" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUkNFSumEeyJjNOKZ7e9aA" name="obj2" type="_dNCowCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUkNFiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNJ9gCumEeyJjNOKZ7e9aA" name="SchedulableObjectQueue">
              <generalization xmi:id="_dNKkkSumEeyJjNOKZ7e9aA" general="_dM9JMiumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWGeICumEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWGeISumEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWopsiumEeyJjNOKZ7e9aA" name="SchedulableObjectQueue" specification="_dVgoQCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWopsyumEeyJjNOKZ7e9aA" name="comparitor" type="_dUFr9iumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWoptCumEeyJjNOKZ7e9aA" type="_dNJ9gCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWoptSumEeyJjNOKZ7e9aA" name="SchedulableObjectQueue" specification="_dVgoRiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWoptiumEeyJjNOKZ7e9aA" name="comparitor" type="_dUFr9iumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWoptyumEeyJjNOKZ7e9aA" name="schedulableObjects" type="_dUVjkiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWopuCumEeyJjNOKZ7e9aA" type="_dNJ9gCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dVgoQCumEeyJjNOKZ7e9aA" name="SchedulableObjectQueue" visibility="package" method="_dWopsiumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dVgoQiumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dVgoQyumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dVgoQSumEeyJjNOKZ7e9aA" name="comparitor" type="_dUFr9iumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVgoRCumEeyJjNOKZ7e9aA" type="_dNJ9gCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVgoRiumEeyJjNOKZ7e9aA" name="SchedulableObjectQueue" visibility="package" method="_dWoptSumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dVgoSSumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dVgoSiumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dVgoRyumEeyJjNOKZ7e9aA" name="comparitor" type="_dUFr9iumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVgoSCumEeyJjNOKZ7e9aA" name="schedulableObjects" type="_dUVjkiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVgoSyumEeyJjNOKZ7e9aA" type="_dNJ9gCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNLLoSumEeyJjNOKZ7e9aA" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_rZbp4Dd2EeykP74baAFnvg">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dWGeIiumEeyJjNOKZ7e9aA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWGeIyumEeyJjNOKZ7e9aA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWGeJCumEeyJjNOKZ7e9aA" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWHFMSumEeyJjNOKZ7e9aA" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWHFMyumEeyJjNOKZ7e9aA" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWHFNCumEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWHFNiumEeyJjNOKZ7e9aA" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWHFOCumEeyJjNOKZ7e9aA" name="schedule" visibility="protected" type="_dNPdECumEeyJjNOKZ7e9aA" association="_dXMqVyumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWHsQSumEeyJjNOKZ7e9aA" name="poset" visibility="protected" type="_dMq1UCumEeyJjNOKZ7e9aA" association="_dXNRYSumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWopuSumEeyJjNOKZ7e9aA" name="Schedule" specification="_dUmCQiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWopuiumEeyJjNOKZ7e9aA" name="poset" type="_dMq1UCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWopuyumEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWopvCumEeyJjNOKZ7e9aA" type="_dNLLoSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWpQuSumEeyJjNOKZ7e9aA" name="getSchedule" specification="_dNMZyiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWpQuiumEeyJjNOKZ7e9aA" type="_dNPdECumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWpQuyumEeyJjNOKZ7e9aA" name="buildSchedule" specification="_dNNA0CumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWpQvCumEeyJjNOKZ7e9aA" name="toProgram" specification="_dNNA0SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWpQvSumEeyJjNOKZ7e9aA" type="_dM5e0CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWpQviumEeyJjNOKZ7e9aA" name="replaceNullWithSleep" specification="_dUmpUiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWpQvyumEeyJjNOKZ7e9aA" name="program" type="_dM5e0CumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWpQwCumEeyJjNOKZ7e9aA" name="fakeSchedulingToTestRest" specification="_dUmpVCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWpQwSumEeyJjNOKZ7e9aA" name="next" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWpQwiumEeyJjNOKZ7e9aA" name="getChannelAndSetStartTime" specification="_dUmpViumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWpQwyumEeyJjNOKZ7e9aA" name="schedulableObject" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWpQxCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWpQxSumEeyJjNOKZ7e9aA" name="findChannelAndTime" specification="_dUmpWSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWpQxiumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWpQxyumEeyJjNOKZ7e9aA" name="schedulableObject" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWpQyCumEeyJjNOKZ7e9aA" type="_dNLysCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWpQySumEeyJjNOKZ7e9aA" name="continueSearch" specification="_dUnQYCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWpQyiumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWpQyyumEeyJjNOKZ7e9aA" name="activation" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWpQzCumEeyJjNOKZ7e9aA" type="_dNLysCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWpQzSumEeyJjNOKZ7e9aA" name="noOtherChannelConflicts" specification="_dUnQZCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWpQziumEeyJjNOKZ7e9aA" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWpQzyumEeyJjNOKZ7e9aA" name="schedulableObject" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWpQ0CumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWpQ0SumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWpQ0iumEeyJjNOKZ7e9aA" name="conflictsExist" specification="_dUnQaSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWpQ0yumEeyJjNOKZ7e9aA" name="obj" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWpQ1CumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWpQ1SumEeyJjNOKZ7e9aA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWpQ1iumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWpQ1yumEeyJjNOKZ7e9aA" name="freeOfCoordinatorConflicts" specification="_dUnQbiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWpQ2CumEeyJjNOKZ7e9aA" name="obj" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWpQ2SumEeyJjNOKZ7e9aA" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWpQ2iumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWpQ2yumEeyJjNOKZ7e9aA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWpQ3CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWp3wCumEeyJjNOKZ7e9aA" name="isAvailable" specification="_dUn3cCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWp3wSumEeyJjNOKZ7e9aA" name="a1" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWp3wiumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWp3wyumEeyJjNOKZ7e9aA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWp3xCumEeyJjNOKZ7e9aA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWp3xSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWp3xiumEeyJjNOKZ7e9aA" name="isAvailable" specification="_dUn3diumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWp3xyumEeyJjNOKZ7e9aA" name="a1" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWp3yCumEeyJjNOKZ7e9aA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWp3ySumEeyJjNOKZ7e9aA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWp3yiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWp3yyumEeyJjNOKZ7e9aA" name="timeRemaining" specification="_dNNn4CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWp3zCumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWp3zSumEeyJjNOKZ7e9aA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWp3ziumEeyJjNOKZ7e9aA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWp3zyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWp30CumEeyJjNOKZ7e9aA" name="canCombineEntriesInPlace" specification="_dUn3eyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWp30SumEeyJjNOKZ7e9aA" name="a1" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWp30iumEeyJjNOKZ7e9aA" name="a2" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWp30yumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWp31CumEeyJjNOKZ7e9aA" name="combinedEntriesInPlace" specification="_dUn3fyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWp31SumEeyJjNOKZ7e9aA" name="a1" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWp31iumEeyJjNOKZ7e9aA" name="a2" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWp31yumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWp32CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWp32SumEeyJjNOKZ7e9aA" name="addToSchedule" specification="_dUoegSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWp32iumEeyJjNOKZ7e9aA" name="next" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWp32yumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWp33CumEeyJjNOKZ7e9aA" name="reportNotSchedulable" specification="_dUoehCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWp33SumEeyJjNOKZ7e9aA" name="object" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWp33iumEeyJjNOKZ7e9aA" name="printVerbose" specification="_dNNn5SumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWp33yumEeyJjNOKZ7e9aA" name="print" specification="_dNNn5iumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dNMZyiumEeyJjNOKZ7e9aA" name="getSchedule" method="_dWpQuSumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZbp4zd2EeykP74baAFnvg">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_dUmpUCumEeyJjNOKZ7e9aA" type="_dNPdECumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNNA0CumEeyJjNOKZ7e9aA" name="buildSchedule" visibility="private" method="_dWpQuyumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNNA0SumEeyJjNOKZ7e9aA" name="toProgram" method="_dWpQvCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUmpUSumEeyJjNOKZ7e9aA" type="_dM5e0CumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNNn4CumEeyJjNOKZ7e9aA" name="timeRemaining" visibility="protected" method="_dWp3yyumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZbp6Td2EeykP74baAFnvg">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNNn4SumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNNn4iumEeyJjNOKZ7e9aA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNNn4yumEeyJjNOKZ7e9aA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNNn5CumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNNn5SumEeyJjNOKZ7e9aA" name="printVerbose" method="_dWp33iumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNNn5iumEeyJjNOKZ7e9aA" name="print" method="_dWp33yumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dUmCQiumEeyJjNOKZ7e9aA" name="Schedule" visibility="package" method="_dWopuSumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUmCRSumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUmCRiumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUmCQyumEeyJjNOKZ7e9aA" name="poset" type="_dMq1UCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUmCRCumEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUmCRyumEeyJjNOKZ7e9aA" type="_dNLLoSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUmpUiumEeyJjNOKZ7e9aA" name="replaceNullWithSleep" visibility="private" method="_dWpQviumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZbp5Dd2EeykP74baAFnvg">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_dUmpUyumEeyJjNOKZ7e9aA" name="program" type="_dM5e0CumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUmpVCumEeyJjNOKZ7e9aA" name="fakeSchedulingToTestRest" visibility="private" method="_dWpQwCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUmpVSumEeyJjNOKZ7e9aA" name="next" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUmpViumEeyJjNOKZ7e9aA" name="getChannelAndSetStartTime" visibility="protected" method="_dWpQwiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZbp5Td2EeykP74baAFnvg">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_dUmpVyumEeyJjNOKZ7e9aA" name="schedulableObject" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUmpWCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUmpWSumEeyJjNOKZ7e9aA" name="findChannelAndTime" visibility="protected" method="_dWpQxSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUmpWiumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUmpWyumEeyJjNOKZ7e9aA" name="schedulableObject" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUmpXCumEeyJjNOKZ7e9aA" type="_dNLysCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUnQYCumEeyJjNOKZ7e9aA" name="continueSearch" visibility="protected" method="_dWpQySumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZbp5jd2EeykP74baAFnvg">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_dUnQYSumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUnQYiumEeyJjNOKZ7e9aA" name="activation" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUnQYyumEeyJjNOKZ7e9aA" type="_dNLysCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUnQZCumEeyJjNOKZ7e9aA" name="noOtherChannelConflicts" visibility="protected" method="_dWpQzSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUnQZSumEeyJjNOKZ7e9aA" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUnQZiumEeyJjNOKZ7e9aA" name="schedulableObject" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUnQZyumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUnQaCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUnQaSumEeyJjNOKZ7e9aA" name="conflictsExist" visibility="protected" method="_dWpQ0iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUnQaiumEeyJjNOKZ7e9aA" name="obj" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUnQayumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUnQbCumEeyJjNOKZ7e9aA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUnQbSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUnQbiumEeyJjNOKZ7e9aA" name="freeOfCoordinatorConflicts" visibility="protected" method="_dWpQ1yumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUnQbyumEeyJjNOKZ7e9aA" name="obj" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUnQcCumEeyJjNOKZ7e9aA" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUnQcSumEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUnQciumEeyJjNOKZ7e9aA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUnQcyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUn3cCumEeyJjNOKZ7e9aA" name="isAvailable" visibility="protected" method="_dWp3wCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZbp5zd2EeykP74baAFnvg">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_dUn3cSumEeyJjNOKZ7e9aA" name="a1" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUn3ciumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUn3cyumEeyJjNOKZ7e9aA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUn3dCumEeyJjNOKZ7e9aA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUn3dSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUn3diumEeyJjNOKZ7e9aA" name="isAvailable" visibility="protected" method="_dWp3xiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZbp6Dd2EeykP74baAFnvg">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_dUn3dyumEeyJjNOKZ7e9aA" name="a1" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUn3eCumEeyJjNOKZ7e9aA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUn3eSumEeyJjNOKZ7e9aA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUn3eiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUn3eyumEeyJjNOKZ7e9aA" name="canCombineEntriesInPlace" visibility="private" method="_dWp30CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUn3fCumEeyJjNOKZ7e9aA" name="a1" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUn3fSumEeyJjNOKZ7e9aA" name="a2" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUn3fiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUn3fyumEeyJjNOKZ7e9aA" name="combinedEntriesInPlace" visibility="private" method="_dWp31CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUn3gCumEeyJjNOKZ7e9aA" name="a1" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUn3gSumEeyJjNOKZ7e9aA" name="a2" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUn3giumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUoegCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUoegSumEeyJjNOKZ7e9aA" name="addToSchedule" visibility="protected" method="_dWp32SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUoegiumEeyJjNOKZ7e9aA" name="next" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUoegyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dUoehCumEeyJjNOKZ7e9aA" name="reportNotSchedulable" visibility="private" method="_dWp33CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUoehSumEeyJjNOKZ7e9aA" name="object" type="_dL_f4CumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_dNLysCumEeyJjNOKZ7e9aA" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_dWHsQyumEeyJjNOKZ7e9aA" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_dWHsRSumEeyJjNOKZ7e9aA" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWopvSumEeyJjNOKZ7e9aA" name="ScheduleLocation" specification="_dNLysSumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWpQsCumEeyJjNOKZ7e9aA" type="_dNLysCumEeyJjNOKZ7e9aA" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWpQsSumEeyJjNOKZ7e9aA" name="ScheduleLocation" specification="_dNMZwCumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWpQsiumEeyJjNOKZ7e9aA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_dWpQsyumEeyJjNOKZ7e9aA" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_dWpQtCumEeyJjNOKZ7e9aA" type="_dNLysCumEeyJjNOKZ7e9aA" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWpQtSumEeyJjNOKZ7e9aA" name="getChannel" specification="_dNMZxiumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWpQtiumEeyJjNOKZ7e9aA" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWpQtyumEeyJjNOKZ7e9aA" name="getTime" specification="_dNMZyCumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWpQuCumEeyJjNOKZ7e9aA" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_dNLysSumEeyJjNOKZ7e9aA" name="ScheduleLocation" visibility="package" method="_dWopvSumEeyJjNOKZ7e9aA">
                  <eAnnotations xmi:id="_dNLysiumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_dNLysyumEeyJjNOKZ7e9aA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_dNLytCumEeyJjNOKZ7e9aA" type="_dNLysCumEeyJjNOKZ7e9aA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_dNMZwCumEeyJjNOKZ7e9aA" name="ScheduleLocation" visibility="package" method="_dWpQsSumEeyJjNOKZ7e9aA">
                  <eAnnotations xmi:id="_dNMZwyumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_dNMZxCumEeyJjNOKZ7e9aA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_dNMZwSumEeyJjNOKZ7e9aA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_dNMZwiumEeyJjNOKZ7e9aA" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_dNMZxSumEeyJjNOKZ7e9aA" type="_dNLysCumEeyJjNOKZ7e9aA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_dNMZxiumEeyJjNOKZ7e9aA" name="getChannel" visibility="protected" method="_dWpQtSumEeyJjNOKZ7e9aA">
                  <ownedComment xmi:id="_rZbp4Td2EeykP74baAFnvg">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_dNMZxyumEeyJjNOKZ7e9aA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_dNMZyCumEeyJjNOKZ7e9aA" name="getTime" visibility="protected" method="_dWpQtyumEeyJjNOKZ7e9aA">
                  <ownedComment xmi:id="_rZbp4jd2EeykP74baAFnvg">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_dNMZySumEeyJjNOKZ7e9aA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNPdECumEeyJjNOKZ7e9aA" name="ScheduleTable">
              <generalization xmi:id="_dUpFkCumEeyJjNOKZ7e9aA" general="_dNUVkCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWITUCumEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWITUSumEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWp34CumEeyJjNOKZ7e9aA" name="ScheduleTable" specification="_dNQEICumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWp34SumEeyJjNOKZ7e9aA" type="_dNPdECumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWp34iumEeyJjNOKZ7e9aA" name="ScheduleTable" specification="_dNQEJCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWp34yumEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWp35CumEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWp35SumEeyJjNOKZ7e9aA" type="_dNPdECumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dNQEICumEeyJjNOKZ7e9aA" name="ScheduleTable" visibility="package" method="_dWp34CumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dNQEISumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dNQEIiumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dNQEIyumEeyJjNOKZ7e9aA" type="_dNPdECumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNQEJCumEeyJjNOKZ7e9aA" name="ScheduleTable" visibility="package" method="_dWp34iumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dNQEJyumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dNQEKCumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dNQEJSumEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNQEJiumEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNQEKSumEeyJjNOKZ7e9aA" type="_dNPdECumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNQEKiumEeyJjNOKZ7e9aA" name="ScheduleTime">
              <ownedAttribute xmi:id="_dWITUiumEeyJjNOKZ7e9aA" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWITUyumEeyJjNOKZ7e9aA" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWp35iumEeyJjNOKZ7e9aA" name="ScheduleTime" specification="_dNQrMCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWp35yumEeyJjNOKZ7e9aA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWp36CumEeyJjNOKZ7e9aA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWp36SumEeyJjNOKZ7e9aA" type="_dNQEKiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dNQrMCumEeyJjNOKZ7e9aA" name="ScheduleTime" visibility="package" method="_dWp35iumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dNQrMyumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dNQrNCumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dNQrMSumEeyJjNOKZ7e9aA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNQrMiumEeyJjNOKZ7e9aA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNQrNSumEeyJjNOKZ7e9aA" type="_dNQEKiumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNRSQCumEeyJjNOKZ7e9aA" name="SimulatorInput">
              <ownedComment xmi:id="_rZbp6jd2EeykP74baAFnvg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNRSQSumEeyJjNOKZ7e9aA" name="SortedPeriodQueue">
              <generalization xmi:id="_dNR5VCumEeyJjNOKZ7e9aA" general="_dM9JMiumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWITVCumEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWI6YCumEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWqe0CumEeyJjNOKZ7e9aA" name="SortedPeriodQueue" specification="_dNR5UCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWqe0SumEeyJjNOKZ7e9aA" type="_dNRSQSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWqe0iumEeyJjNOKZ7e9aA" name="SortedPeriodQueue" specification="_dUpFkiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWqe0yumEeyJjNOKZ7e9aA" name="schedulableObjects" type="_dUVjkiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWqe1CumEeyJjNOKZ7e9aA" type="_dNRSQSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dNR5UCumEeyJjNOKZ7e9aA" name="SortedPeriodQueue" visibility="package" method="_dWqe0CumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dNR5USumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dNR5UiumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dNR5UyumEeyJjNOKZ7e9aA" type="_dNRSQSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUpFkiumEeyJjNOKZ7e9aA" name="SortedPeriodQueue" visibility="package" method="_dWqe0iumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUpFlCumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUpsoCumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUpFkyumEeyJjNOKZ7e9aA" name="schedulableObjects" type="_dUVjkiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUpsoSumEeyJjNOKZ7e9aA" type="_dNRSQSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_dNSgYCumEeyJjNOKZ7e9aA" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_dUpsoyumEeyJjNOKZ7e9aA" general="_dM9wQyumEeyJjNOKZ7e9aA"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_dNSgYSumEeyJjNOKZ7e9aA" name="ScheduleChoices">
                <ownedLiteral xmi:id="_dNSgYyumEeyJjNOKZ7e9aA" name="PRIORITY"/>
                <ownedLiteral xmi:id="_dNSgZCumEeyJjNOKZ7e9aA" name="RM"/>
                <ownedLiteral xmi:id="_dNSgZSumEeyJjNOKZ7e9aA" name="DM"/>
                <ownedLiteral xmi:id="_dNSgZiumEeyJjNOKZ7e9aA" name="RTHART"/>
                <ownedLiteral xmi:id="_dNTHcCumEeyJjNOKZ7e9aA" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_dNTHcSumEeyJjNOKZ7e9aA" name="POSET_RM"/>
                <ownedLiteral xmi:id="_dNTHciumEeyJjNOKZ7e9aA" name="POSET_DM"/>
                <ownedLiteral xmi:id="_dNTHcyumEeyJjNOKZ7e9aA" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_dNTHdCumEeyJjNOKZ7e9aA" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_dNTHdSumEeyJjNOKZ7e9aA" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_dNTHdiumEeyJjNOKZ7e9aA" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_dNTHdyumEeyJjNOKZ7e9aA" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_dNTHeCumEeyJjNOKZ7e9aA" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_dNTHeSumEeyJjNOKZ7e9aA" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dNTHeiumEeyJjNOKZ7e9aA" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dNTHeyumEeyJjNOKZ7e9aA" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dNTugCumEeyJjNOKZ7e9aA" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dNTugSumEeyJjNOKZ7e9aA" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dNTugiumEeyJjNOKZ7e9aA" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNTugyumEeyJjNOKZ7e9aA" name="SystemFactory">
              <ownedComment xmi:id="_rZbp6zd2EeykP74baAFnvg">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0OZNdTXLEeyzKPzbxOg4Ww" name="create" specification="_0OCBEDXLEeyzKPzbxOg4Ww">
                <ownedParameter xmi:id="_0OZNdjXLEeyzKPzbxOg4Ww" name="workload" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_0OZNdzXLEeyzKPzbxOg4Ww" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_0OZNeDXLEeyzKPzbxOg4Ww" name="choice" type="_dUpspCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_0OZNeTXLEeyzKPzbxOg4Ww" type="_dNdfgCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_0OCBEDXLEeyzKPzbxOg4Ww" name="create" isStatic="true" method="_0OZNdTXLEeyzKPzbxOg4Ww">
                <ownedParameter xmi:id="_0OCBETXLEeyzKPzbxOg4Ww" name="workload" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_0OCBEjXLEeyzKPzbxOg4Ww" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_0OCBEzXLEeyzKPzbxOg4Ww" name="choice" type="_dUpspCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_0OCBFDXLEeyzKPzbxOg4Ww" type="_dNdfgCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNUVkCumEeyJjNOKZ7e9aA" name="Table">
              <generalization xmi:id="_dVh2ZSumEeyJjNOKZ7e9aA" general="_dT-XMCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWI6YSumEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWI6YiumEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWqe2iumEeyJjNOKZ7e9aA" name="Table" specification="_dNU8oCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWqe2yumEeyJjNOKZ7e9aA" type="_dNUVkCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWqe3CumEeyJjNOKZ7e9aA" name="Table" specification="_dNU8pCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWqe3SumEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWqe3iumEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWqe3yumEeyJjNOKZ7e9aA" type="_dNUVkCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWqe4CumEeyJjNOKZ7e9aA" name="getNumRows" specification="_dNU8qiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWqe4SumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWqe4iumEeyJjNOKZ7e9aA" name="getNumColumns" specification="_dNVjsSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWqe4yumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWqe5CumEeyJjNOKZ7e9aA" name="set" specification="_dVh2YCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWqe5SumEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWqe5iumEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWqe5yumEeyJjNOKZ7e9aA" name="element" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWqe6CumEeyJjNOKZ7e9aA" name="get" specification="_dNVjsyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWqe6SumEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWqe6iumEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWqe6yumEeyJjNOKZ7e9aA" type="_dVNGQiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dNU8oCumEeyJjNOKZ7e9aA" name="Table" method="_dWqe2iumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dNU8oSumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dNU8oiumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dNU8oyumEeyJjNOKZ7e9aA" type="_dNUVkCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNU8pCumEeyJjNOKZ7e9aA" name="Table" method="_dWqe3CumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dNU8pyumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dNU8qCumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dNU8pSumEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNU8piumEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNU8qSumEeyJjNOKZ7e9aA" type="_dNUVkCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNU8qiumEeyJjNOKZ7e9aA" name="getNumRows" method="_dWqe4CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNVjsCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNVjsSumEeyJjNOKZ7e9aA" name="getNumColumns" method="_dWqe4iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNVjsiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNVjsyumEeyJjNOKZ7e9aA" name="get" method="_dWqe6CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNVjtCumEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNVjtSumEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVh2ZCumEeyJjNOKZ7e9aA" type="_dVNGQiumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVh2YCumEeyJjNOKZ7e9aA" name="set" method="_dWqe5CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVh2YSumEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVh2YiumEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVh2YyumEeyJjNOKZ7e9aA" name="element" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_dNWKwCumEeyJjNOKZ7e9aA" name="Visualization">
              <ownedComment xmi:id="_rZbp7Dd2EeykP74baAFnvg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_dNWKwSumEeyJjNOKZ7e9aA" name="SystemChoices">
                <ownedLiteral xmi:id="_dNWKwyumEeyJjNOKZ7e9aA" name="SOURCE"/>
                <ownedLiteral xmi:id="_dNWx0CumEeyJjNOKZ7e9aA" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_dNWx0SumEeyJjNOKZ7e9aA" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_dNWx0iumEeyJjNOKZ7e9aA" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_dNWx0yumEeyJjNOKZ7e9aA" name="DEADLINE_REPORT"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_dNWx1CumEeyJjNOKZ7e9aA" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_dNWx1iumEeyJjNOKZ7e9aA" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_dNWx1yumEeyJjNOKZ7e9aA" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_dNWx2CumEeyJjNOKZ7e9aA" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_dNWx2SumEeyJjNOKZ7e9aA" name="toDisplay"/>
              <ownedOperation xmi:id="_dNWx2iumEeyJjNOKZ7e9aA" name="toFile"/>
              <ownedOperation xmi:id="_dNWx2yumEeyJjNOKZ7e9aA" name="toString">
                <ownedParameter xmi:id="_dNXY4CumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNXY4SumEeyJjNOKZ7e9aA" name="VisualizationFactory">
              <ownedComment xmi:id="_rZbp7Td2EeykP74baAFnvg">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0OYmajXLEeyzKPzbxOg4Ww" name="createProgramVisualization" specification="_0OBaADXLEeyzKPzbxOg4Ww">
                <ownedParameter xmi:id="_0OYmazXLEeyzKPzbxOg4Ww" name="warp" type="_dNdfgCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_0OYmbDXLEeyzKPzbxOg4Ww" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_0OYmbTXLEeyzKPzbxOg4Ww" name="choice" type="_dUqTtSumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_0OYmbjXLEeyzKPzbxOg4Ww" type="_dNWKwCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0OZNcDXLEeyzKPzbxOg4Ww" name="createWorkLoadVisualization" specification="_0OBaBTXLEeyzKPzbxOg4Ww">
                <ownedParameter xmi:id="_0OZNcTXLEeyzKPzbxOg4Ww" name="workload" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_0OZNcjXLEeyzKPzbxOg4Ww" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_0OZNczXLEeyzKPzbxOg4Ww" name="choice" type="_dUq6wSumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_0OZNdDXLEeyzKPzbxOg4Ww" type="_dNWKwCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_0OBaADXLEeyzKPzbxOg4Ww" name="createProgramVisualization" isStatic="true" method="_0OYmajXLEeyzKPzbxOg4Ww">
                <ownedParameter xmi:id="_0OBaATXLEeyzKPzbxOg4Ww" name="warp" type="_dNdfgCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_0OBaAjXLEeyzKPzbxOg4Ww" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_0OBaAzXLEeyzKPzbxOg4Ww" name="choice" type="_dUqTtSumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_0OBaBDXLEeyzKPzbxOg4Ww" type="_dNWKwCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_0OBaBTXLEeyzKPzbxOg4Ww" name="createWorkLoadVisualization" isStatic="true" method="_0OZNcDXLEeyzKPzbxOg4Ww">
                <ownedParameter xmi:id="_0OBaBjXLEeyzKPzbxOg4Ww" name="workload" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_0OBaBzXLEeyzKPzbxOg4Ww" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_0OBaCDXLEeyzKPzbxOg4Ww" name="choice" type="_dUq6wSumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_0OBaCTXLEeyzKPzbxOg4Ww" type="_dNWKwCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNX_8CumEeyJjNOKZ7e9aA" name="VisualizationImplementation">
              <ownedComment xmi:id="_rZcQ8Dd2EeykP74baAFnvg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dWI6YyumEeyJjNOKZ7e9aA" name="visualization" visibility="private" type="_dMRzwSumEeyJjNOKZ7e9aA" association="_dXNRZCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWI6ZSumEeyJjNOKZ7e9aA" name="fileContent" visibility="private" type="_dMRzwSumEeyJjNOKZ7e9aA" association="_dXNRZyumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWJhcSumEeyJjNOKZ7e9aA" name="displayContent" visibility="private" type="_dMRzwSumEeyJjNOKZ7e9aA" association="_dXN4cSumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWJhcyumEeyJjNOKZ7e9aA" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWJhdSumEeyJjNOKZ7e9aA" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWJhdyumEeyJjNOKZ7e9aA" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWKIgSumEeyJjNOKZ7e9aA" name="fm" visibility="private" type="_dMWsQCumEeyJjNOKZ7e9aA" association="_dXN4dCumEeyJjNOKZ7e9aA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWKIgiumEeyJjNOKZ7e9aA" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWKIhCumEeyJjNOKZ7e9aA" name="warp" visibility="private" type="_dNdfgCumEeyJjNOKZ7e9aA" association="_dXN4dyumEeyJjNOKZ7e9aA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWKIhSumEeyJjNOKZ7e9aA" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWKIhyumEeyJjNOKZ7e9aA" name="workLoad" visibility="private" type="_dN6LcCumEeyJjNOKZ7e9aA" association="_dXN4eiumEeyJjNOKZ7e9aA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWKIiCumEeyJjNOKZ7e9aA" value="null"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_dUrh0CumEeyJjNOKZ7e9aA" client="_dNX_8CumEeyJjNOKZ7e9aA" supplier="_dNWKwCumEeyJjNOKZ7e9aA" contract="_dNWKwCumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWqe9iumEeyJjNOKZ7e9aA" name="VisualizationImplementation" specification="_dVidcyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWqe9yumEeyJjNOKZ7e9aA" name="warp" type="_dNdfgCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWrF4CumEeyJjNOKZ7e9aA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWrF4SumEeyJjNOKZ7e9aA" name="choice" type="_dVidcSumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWrF4iumEeyJjNOKZ7e9aA" type="_dNX_8CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
		this.warp = warp;&#xD;
		inputFileName = warp.toWorkload().getInputFileName();&#xD;
		this.fileNameTemplate  = createFileNameTemplate(outputDirectory);&#xD;
		createVisualization(choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrF4yumEeyJjNOKZ7e9aA" name="VisualizationImplementation" specification="_dVjEiCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWrF5CumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWrF5SumEeyJjNOKZ7e9aA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWrF5iumEeyJjNOKZ7e9aA" name="choice" type="_dVjEhiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWrF5yumEeyJjNOKZ7e9aA" type="_dNX_8CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
		this.workLoad = workLoad;&#xD;
		inputFileName = workLoad.getInputFileName();&#xD;
		this.fileNameTemplate  = createFileNameTemplate(outputDirectory);&#xD;
		createVisualization(choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrF6CumEeyJjNOKZ7e9aA" name="toDisplay" specification="_dNYnACumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>System.out.println(displayContent.toString());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrF6SumEeyJjNOKZ7e9aA" name="toFile" specification="_dNYnBCumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>fm.writeFile(fileName,fileContent.toString());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrF6iumEeyJjNOKZ7e9aA" name="toString" specification="_dNYnCCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWrF6yumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrF7CumEeyJjNOKZ7e9aA" name="createVisualization" specification="_dVjrkCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWrF7SumEeyJjNOKZ7e9aA" name="choice" type="_dVidcSumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
		case SOURCE:&#xD;
			createVisualization(new ProgramVisualization(warp));&#xD;
			break;&#xD;
&#xD;
		case RELIABILITIES:&#xD;
			// TODO Implement Reliability Analysis Visualization&#xD;
			createVisualization(new ReliabilityVisualization(warp));&#xD;
			break;&#xD;
&#xD;
		case SIMULATOR_INPUT:&#xD;
			// TODO Implement Simulator Input Visualization&#xD;
			createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
			break;&#xD;
		&#xD;
		case LATENCY_REPORT:&#xD;
			createVisualization(new ReportVisualization(fm, warp,&#xD;
					warp.toProgram().latencyReport(), &quot;Latency&quot;));	&#xD;
			break;&#xD;
		&#xD;
		case DEADLINE_REPORT:&#xD;
			createVisualization(new ReportVisualization(fm, warp,&#xD;
					warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));	&#xD;
			break;&#xD;
			&#xD;
		default:	&#xD;
			createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
			break;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrF7iumEeyJjNOKZ7e9aA" name="createVisualization" specification="_dVjrkiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWrF7yumEeyJjNOKZ7e9aA" name="choice" type="_dVjEhiumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
		case COMUNICATION_GRAPH:&#xD;
			// createWarpVisualization();&#xD;
			createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
			break;&#xD;
&#xD;
		case GRAPHVIZ:&#xD;
			createVisualization(new GraphViz(fm, workLoad.toString()));	&#xD;
			break;&#xD;
			&#xD;
		case INPUT_GRAPH:&#xD;
			createVisualization(workLoad);	&#xD;
			break;&#xD;
			&#xD;
		default:	&#xD;
			createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
			break;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrF8CumEeyJjNOKZ7e9aA" name="createVisualization" specification="_dVjrlCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWrF8SumEeyJjNOKZ7e9aA" name="obj" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
		fileContent = obj.fileVisualization();&#xD;
		/* display is file content printed to console */&#xD;
		displayContent = obj.displayVisualization(); &#xD;
		fileName = obj.createFile (fileNameTemplate); // in output directory&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrF8iumEeyJjNOKZ7e9aA" name="createFileNameTemplate" specification="_dNZOFCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWrF8yumEeyJjNOKZ7e9aA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWrF9CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
		var workingDirectory = fm.getBaseDirectory();&#xD;
		var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
		// Now create the fileNameTemplate using full output path and input filename &#xD;
		if (inputFileName.contains(&quot;/&quot;)) {&#xD;
			var index = inputFileName.lastIndexOf(&quot;/&quot;)+1;&#xD;
			fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
		} else {&#xD;
			fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
		}&#xD;
		return fileNameTemplate;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dNYnACumEeyJjNOKZ7e9aA" name="toDisplay" method="_dWrF6CumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNYnBCumEeyJjNOKZ7e9aA" name="toFile" method="_dWrF6SumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNYnCCumEeyJjNOKZ7e9aA" name="toString" method="_dWrF6iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNZOECumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNZOFCumEeyJjNOKZ7e9aA" name="createFileNameTemplate" visibility="private" method="_dWrF8iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNZOFSumEeyJjNOKZ7e9aA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNZOFiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dVidcyumEeyJjNOKZ7e9aA" name="VisualizationImplementation" method="_dWqe9iumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dVjEgyumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dVjEhCumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dVjEgCumEeyJjNOKZ7e9aA" name="warp" type="_dNdfgCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVjEgSumEeyJjNOKZ7e9aA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVjEgiumEeyJjNOKZ7e9aA" name="choice" type="_dVidcSumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVjEhSumEeyJjNOKZ7e9aA" type="_dNX_8CumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVjEiCumEeyJjNOKZ7e9aA" name="VisualizationImplementation" method="_dWrF4yumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dVjEjCumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dVjEjSumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dVjEiSumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVjEiiumEeyJjNOKZ7e9aA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVjEiyumEeyJjNOKZ7e9aA" name="choice" type="_dVjEhiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVjEjiumEeyJjNOKZ7e9aA" type="_dNX_8CumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVjrkCumEeyJjNOKZ7e9aA" name="createVisualization" visibility="private" method="_dWrF7CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVjrkSumEeyJjNOKZ7e9aA" name="choice" type="_dVidcSumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVjrkiumEeyJjNOKZ7e9aA" name="createVisualization" visibility="private" method="_dWrF7iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVjrkyumEeyJjNOKZ7e9aA" name="choice" type="_dVjEhiumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVjrlCumEeyJjNOKZ7e9aA" name="createVisualization" visibility="private" method="_dWrF8CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVjrlSumEeyJjNOKZ7e9aA" name="obj" type="_dVNGQiumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNacMCumEeyJjNOKZ7e9aA" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_rZcQ8Td2EeykP74baAFnvg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dWKvkCumEeyJjNOKZ7e9aA" name="fm" visibility="private" type="_dMWsQCumEeyJjNOKZ7e9aA" association="_dXOfgSumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWKvkiumEeyJjNOKZ7e9aA" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWKvlCumEeyJjNOKZ7e9aA" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWLWoSumEeyJjNOKZ7e9aA" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWLWoiumEeyJjNOKZ7e9aA" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrF9SumEeyJjNOKZ7e9aA" name="VisualizationObject" specification="_dUsI4CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWrF9iumEeyJjNOKZ7e9aA" name="fm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWrF9yumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWrF-CumEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWrF-SumEeyJjNOKZ7e9aA" type="_dNacMCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,String.valueOf(workLoad.getMinPacketReceptionRate()),String.valueOf(workLoad.getE2e())); &#xD;
		this.suffix = suffix; &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrF-iumEeyJjNOKZ7e9aA" name="VisualizationObject" specification="_dUsv8iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWrF-yumEeyJjNOKZ7e9aA" name="fm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWrF_CumEeyJjNOKZ7e9aA" name="warp" type="_dNSgYCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWrF_SumEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWrF_iumEeyJjNOKZ7e9aA" type="_dNacMCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		if (warp.getNumFaults() > 0) {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getNumFaults()); &#xD;
		} else {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getMinPacketReceptionRate(),&#xD;
					warp.getE2e()); &#xD;
		}&#xD;
		this.suffix = suffix;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrF_yumEeyJjNOKZ7e9aA" name="VisualizationObject" specification="_dUsv-SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWrGACumEeyJjNOKZ7e9aA" name="fm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWrGASumEeyJjNOKZ7e9aA" name="warp" type="_dNSgYCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWrGAiumEeyJjNOKZ7e9aA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWrGAyumEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWrGBCumEeyJjNOKZ7e9aA" type="_dNacMCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		if (warp.getNumFaults() > 0) {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getNumFaults()) + nameExtension; &#xD;
		} else {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getMinPacketReceptionRate(),&#xD;
					warp.getE2e()) + nameExtension; &#xD;
		}&#xD;
		&#xD;
		this.suffix = suffix;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrGBSumEeyJjNOKZ7e9aA" name="VisualizationObject" specification="_dUswASumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWrGBiumEeyJjNOKZ7e9aA" name="fm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWrGByumEeyJjNOKZ7e9aA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWrGCCumEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWrGCSumEeyJjNOKZ7e9aA" type="_dNacMCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		this.nameExtension = nameExtension; &#xD;
		this.suffix = suffix;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrs8CumEeyJjNOKZ7e9aA" name="nameExtension" specification="_dVkSoCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWrs8SumEeyJjNOKZ7e9aA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWrs8iumEeyJjNOKZ7e9aA" name="m" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWrs8yumEeyJjNOKZ7e9aA" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWrs9CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sM-%sE2E&quot;,&#xD;
				schName,&#xD;
				String.valueOf(m),&#xD;
				String.valueOf(e2e)); &#xD;
		return extension;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrs9SumEeyJjNOKZ7e9aA" name="nameExtension" specification="_dNbDQCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWrs9iumEeyJjNOKZ7e9aA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWrs9yumEeyJjNOKZ7e9aA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWrs-CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;,&#xD;
				schName,&#xD;
				String.valueOf(numFaults)); &#xD;
		return extension;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrs-SumEeyJjNOKZ7e9aA" name="getFileManager" specification="_dNbqUyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWrs-iumEeyJjNOKZ7e9aA" type="_dMWsQCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrs-yumEeyJjNOKZ7e9aA" name="visualization" specification="_dNbqVCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWrs_CumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description content = new Description();&#xD;
		content.add(NOT_IMPLEMENTED);&#xD;
		return content;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrs_SumEeyJjNOKZ7e9aA" name="createFile" specification="_dNbqVSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWrs_iumEeyJjNOKZ7e9aA" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWrs_yumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix );&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrtACumEeyJjNOKZ7e9aA" name="fileVisualization" specification="_dNcRYSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWrtASumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 	fileContent.addAll(visualization());&#xD;
 	fileContent.addAll(createFooter());&#xD;
 	return fileContent;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrtAiumEeyJjNOKZ7e9aA" name="displayVisualization" specification="_dNcRYiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWrtAyumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrtBCumEeyJjNOKZ7e9aA" name="createHeader" specification="_dNcRYyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWrtBSumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrtBiumEeyJjNOKZ7e9aA" name="createFooter" specification="_dNcRZCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWrtByumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dNbDQCumEeyJjNOKZ7e9aA" name="nameExtension" visibility="private" method="_dWrs9SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNbqUCumEeyJjNOKZ7e9aA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNbqUSumEeyJjNOKZ7e9aA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNbqUiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNbqUyumEeyJjNOKZ7e9aA" name="getFileManager" method="_dWrs-SumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZcQ8jd2EeykP74baAFnvg">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_dUtXBCumEeyJjNOKZ7e9aA" type="_dMWsQCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNbqVCumEeyJjNOKZ7e9aA" name="visualization" method="_dWrs-yumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUtXBSumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNbqVSumEeyJjNOKZ7e9aA" name="createFile" method="_dWrs_SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNbqViumEeyJjNOKZ7e9aA" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNcRYCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNcRYSumEeyJjNOKZ7e9aA" name="fileVisualization" method="_dWrtACumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUtXBiumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNcRYiumEeyJjNOKZ7e9aA" name="displayVisualization" method="_dWrtAiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUtXByumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNcRYyumEeyJjNOKZ7e9aA" name="createHeader" method="_dWrtBCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUtXCCumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNcRZCumEeyJjNOKZ7e9aA" name="createFooter" method="_dWrtBiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUtXCSumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUsI4CumEeyJjNOKZ7e9aA" name="VisualizationObject" visibility="package" method="_dWrF9SumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUsI5CumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUsv8CumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUsI4SumEeyJjNOKZ7e9aA" name="fm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUsI4iumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUsI4yumEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUsv8SumEeyJjNOKZ7e9aA" type="_dNacMCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUsv8iumEeyJjNOKZ7e9aA" name="VisualizationObject" visibility="package" method="_dWrF-iumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUsv9iumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUsv9yumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUsv8yumEeyJjNOKZ7e9aA" name="fm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUsv9CumEeyJjNOKZ7e9aA" name="warp" type="_dNSgYCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUsv9SumEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUsv-CumEeyJjNOKZ7e9aA" type="_dNacMCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUsv-SumEeyJjNOKZ7e9aA" name="VisualizationObject" visibility="package" method="_dWrF_yumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUsv_iumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUsv_yumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUsv-iumEeyJjNOKZ7e9aA" name="fm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUsv-yumEeyJjNOKZ7e9aA" name="warp" type="_dNSgYCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUsv_CumEeyJjNOKZ7e9aA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUsv_SumEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUswACumEeyJjNOKZ7e9aA" type="_dNacMCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dUswASumEeyJjNOKZ7e9aA" name="VisualizationObject" visibility="package" method="_dWrGBSumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUtXASumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUtXAiumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUswAiumEeyJjNOKZ7e9aA" name="fm" type="_dMWsQCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUswAyumEeyJjNOKZ7e9aA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUtXACumEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dUtXAyumEeyJjNOKZ7e9aA" type="_dNacMCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVkSoCumEeyJjNOKZ7e9aA" name="nameExtension" visibility="private" method="_dWrs8CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVkSoSumEeyJjNOKZ7e9aA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVkSoiumEeyJjNOKZ7e9aA" name="m" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVkSoyumEeyJjNOKZ7e9aA" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVkSpCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_dNdfgCumEeyJjNOKZ7e9aA" name="Warp">
              <ownedComment xmi:id="_rZcQ8zd2EeykP74baAFnvg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dUtXCiumEeyJjNOKZ7e9aA" general="_dNSgYCumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNdfgSumEeyJjNOKZ7e9aA" name="toWorkload">
                <ownedParameter xmi:id="_dUtXCyumEeyJjNOKZ7e9aA" type="_dN6LcCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNdfgiumEeyJjNOKZ7e9aA" name="toProgram">
                <ownedParameter xmi:id="_dUtXDCumEeyJjNOKZ7e9aA" type="_dMxjASumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNdfgyumEeyJjNOKZ7e9aA" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_dUtXDSumEeyJjNOKZ7e9aA" type="_dM9wQCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNeGkCumEeyJjNOKZ7e9aA" name="toSimulator">
                <ownedParameter xmi:id="_dUt-ECumEeyJjNOKZ7e9aA" type="_dNRSQCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNeGkSumEeyJjNOKZ7e9aA" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_dNeGkiumEeyJjNOKZ7e9aA" name="reliabilitiesMet">
                <ownedParameter xmi:id="_dNeGkyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNeGlCumEeyJjNOKZ7e9aA" name="deadlinesMet">
                <ownedParameter xmi:id="_dNeGlSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNetoCumEeyJjNOKZ7e9aA" name="WarpDSL">
              <ownedComment xmi:id="_rZcQ9Dd2EeykP74baAFnvg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dWLWoyumEeyJjNOKZ7e9aA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWLWpCumEeyJjNOKZ7e9aA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWLWpSumEeyJjNOKZ7e9aA" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWLWpiumEeyJjNOKZ7e9aA" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWLWpyumEeyJjNOKZ7e9aA" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWL9sCumEeyJjNOKZ7e9aA" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWsUBiumEeyJjNOKZ7e9aA" name="getInstructionParameters" specification="_dNgi0CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWsUByumEeyJjNOKZ7e9aA" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWsUCCumEeyJjNOKZ7e9aA" type="_dT-XMCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dNgi0CumEeyJjNOKZ7e9aA" name="getInstructionParameters" method="_dWsUBiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNgi0SumEeyJjNOKZ7e9aA" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVk5sCumEeyJjNOKZ7e9aA" type="_dT-XMCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_dNetoSumEeyJjNOKZ7e9aA" name="InstructionParameters">
                <ownedAttribute xmi:id="_dWL9sSumEeyJjNOKZ7e9aA" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWL9siumEeyJjNOKZ7e9aA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_dWL9syumEeyJjNOKZ7e9aA" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWL9tCumEeyJjNOKZ7e9aA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_dWL9tSumEeyJjNOKZ7e9aA" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWL9tiumEeyJjNOKZ7e9aA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_dWL9tyumEeyJjNOKZ7e9aA" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWL9uCumEeyJjNOKZ7e9aA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_dWL9uSumEeyJjNOKZ7e9aA" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWL9uiumEeyJjNOKZ7e9aA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_dWL9uyumEeyJjNOKZ7e9aA" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWL9vCumEeyJjNOKZ7e9aA" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_dWMkwSumEeyJjNOKZ7e9aA" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWMkwiumEeyJjNOKZ7e9aA" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrtCCumEeyJjNOKZ7e9aA" name="getCoordinator" specification="_dNfUsCumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWrtCSumEeyJjNOKZ7e9aA" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrtCiumEeyJjNOKZ7e9aA" name="setCoordinator" specification="_dNfUsiumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWrtCyumEeyJjNOKZ7e9aA" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrtDCumEeyJjNOKZ7e9aA" name="setName" specification="_dNfUtCumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWrtDSumEeyJjNOKZ7e9aA" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrtDiumEeyJjNOKZ7e9aA" name="setFlow" specification="_dNfUtiumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWrtDyumEeyJjNOKZ7e9aA" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrtECumEeyJjNOKZ7e9aA" name="setSrc" specification="_dNf7wCumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWrtESumEeyJjNOKZ7e9aA" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWsUACumEeyJjNOKZ7e9aA" name="setSnk" specification="_dNf7wiumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWsUASumEeyJjNOKZ7e9aA" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWsUAiumEeyJjNOKZ7e9aA" name="setChannel" specification="_dNf7xCumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWsUAyumEeyJjNOKZ7e9aA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWsUBCumEeyJjNOKZ7e9aA" name="unused" specification="_dNf7xiumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWsUBSumEeyJjNOKZ7e9aA" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_dNfUsCumEeyJjNOKZ7e9aA" name="getCoordinator" method="_dWrtCCumEeyJjNOKZ7e9aA">
                  <ownedComment xmi:id="_rZcQ9Td2EeykP74baAFnvg">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_dNfUsSumEeyJjNOKZ7e9aA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_dNfUsiumEeyJjNOKZ7e9aA" name="setCoordinator" method="_dWrtCiumEeyJjNOKZ7e9aA">
                  <ownedComment xmi:id="_rZcQ9jd2EeykP74baAFnvg">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_dNfUsyumEeyJjNOKZ7e9aA" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_dNfUtCumEeyJjNOKZ7e9aA" name="setName" visibility="private" method="_dWrtDCumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dNfUtSumEeyJjNOKZ7e9aA" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_dNfUtiumEeyJjNOKZ7e9aA" name="setFlow" visibility="private" method="_dWrtDiumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dNfUtyumEeyJjNOKZ7e9aA" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_dNf7wCumEeyJjNOKZ7e9aA" name="setSrc" visibility="private" method="_dWrtECumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dNf7wSumEeyJjNOKZ7e9aA" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_dNf7wiumEeyJjNOKZ7e9aA" name="setSnk" visibility="private" method="_dWsUACumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dNf7wyumEeyJjNOKZ7e9aA" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_dNf7xCumEeyJjNOKZ7e9aA" name="setChannel" visibility="private" method="_dWsUAiumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dNf7xSumEeyJjNOKZ7e9aA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_dNf7xiumEeyJjNOKZ7e9aA" name="unused" method="_dWsUBCumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dNf7xyumEeyJjNOKZ7e9aA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_dNgi0yumEeyJjNOKZ7e9aA" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_dVlgwSumEeyJjNOKZ7e9aA" general="_dVk5sSumEeyJjNOKZ7e9aA"/>
                <ownedAttribute xmi:id="_dWMkwyumEeyJjNOKZ7e9aA" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_dWMkxSumEeyJjNOKZ7e9aA" name="instructionParametersArrayList" visibility="package" type="_dT-XMCumEeyJjNOKZ7e9aA" association="_dXOfhCumEeyJjNOKZ7e9aA"/>
                <ownedAttribute xmi:id="_dWNL0iumEeyJjNOKZ7e9aA" name="instructionParameters" visibility="package" type="_dUmCQCumEeyJjNOKZ7e9aA" association="_dXOfhyumEeyJjNOKZ7e9aA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWsUCSumEeyJjNOKZ7e9aA" name="ListenerDsl" specification="_dNhJ4CumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWsUCiumEeyJjNOKZ7e9aA" type="_dNgi0yumEeyJjNOKZ7e9aA" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWsUCyumEeyJjNOKZ7e9aA" name="getInstructionParameters" specification="_dNhJ5CumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWsUDCumEeyJjNOKZ7e9aA" type="_dT-XMCumEeyJjNOKZ7e9aA" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWsUDSumEeyJjNOKZ7e9aA" name="enterAction" specification="_dUulISumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWsUDiumEeyJjNOKZ7e9aA" name="ctx" type="_dUt-ESumEeyJjNOKZ7e9aA"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWsUDyumEeyJjNOKZ7e9aA" name="exitAction" specification="_dUulJiumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWsUECumEeyJjNOKZ7e9aA" name="ctx" type="_dUt-ESumEeyJjNOKZ7e9aA"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWsUESumEeyJjNOKZ7e9aA" name="exitFlowName" specification="_dUvMMyumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWsUEiumEeyJjNOKZ7e9aA" name="ctx" type="_dUvMMSumEeyJjNOKZ7e9aA"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWsUEyumEeyJjNOKZ7e9aA" name="exitCmd" specification="_dUvzQSumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWsUFCumEeyJjNOKZ7e9aA" name="ctx" type="_dUvMOCumEeyJjNOKZ7e9aA"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWsUFSumEeyJjNOKZ7e9aA" name="exitSrcNode" specification="_dUvzSCumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWsUFiumEeyJjNOKZ7e9aA" name="ctx" type="_dUvzRiumEeyJjNOKZ7e9aA"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWsUFyumEeyJjNOKZ7e9aA" name="exitSnkNode" specification="_dUwaVCumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWsUGCumEeyJjNOKZ7e9aA" name="ctx" type="_dUwaUiumEeyJjNOKZ7e9aA"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWsUGSumEeyJjNOKZ7e9aA" name="exitChannel" specification="_dUxBYSumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dWsUGiumEeyJjNOKZ7e9aA" name="ctx" type="_dUwaWSumEeyJjNOKZ7e9aA"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_dNhJ4CumEeyJjNOKZ7e9aA" name="ListenerDsl" visibility="package" method="_dWsUCSumEeyJjNOKZ7e9aA">
                  <eAnnotations xmi:id="_dNhJ4SumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_dNhJ4iumEeyJjNOKZ7e9aA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_dNhJ4yumEeyJjNOKZ7e9aA" type="_dNgi0yumEeyJjNOKZ7e9aA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_dNhJ5CumEeyJjNOKZ7e9aA" name="getInstructionParameters" method="_dWsUCyumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dVlgwCumEeyJjNOKZ7e9aA" type="_dT-XMCumEeyJjNOKZ7e9aA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_dUulISumEeyJjNOKZ7e9aA" name="enterAction" method="_dWsUDSumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dUulIiumEeyJjNOKZ7e9aA" name="ctx" type="_dUt-ESumEeyJjNOKZ7e9aA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_dUulJiumEeyJjNOKZ7e9aA" name="exitAction" method="_dWsUDyumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dUulJyumEeyJjNOKZ7e9aA" name="ctx" type="_dUt-ESumEeyJjNOKZ7e9aA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_dUvMMyumEeyJjNOKZ7e9aA" name="exitFlowName" method="_dWsUESumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dUvMNCumEeyJjNOKZ7e9aA" name="ctx" type="_dUvMMSumEeyJjNOKZ7e9aA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_dUvzQSumEeyJjNOKZ7e9aA" name="exitCmd" method="_dWsUEyumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dUvzQiumEeyJjNOKZ7e9aA" name="ctx" type="_dUvMOCumEeyJjNOKZ7e9aA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_dUvzSCumEeyJjNOKZ7e9aA" name="exitSrcNode" method="_dWsUFSumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dUvzSSumEeyJjNOKZ7e9aA" name="ctx" type="_dUvzRiumEeyJjNOKZ7e9aA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_dUwaVCumEeyJjNOKZ7e9aA" name="exitSnkNode" method="_dWsUFyumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dUwaVSumEeyJjNOKZ7e9aA" name="ctx" type="_dUwaUiumEeyJjNOKZ7e9aA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_dUxBYSumEeyJjNOKZ7e9aA" name="exitChannel" method="_dWsUGSumEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_dUxBYiumEeyJjNOKZ7e9aA" name="ctx" type="_dUwaWSumEeyJjNOKZ7e9aA"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNi_ECumEeyJjNOKZ7e9aA" name="WarpPoset">
              <ownedComment xmi:id="_rZcQ9zd2EeykP74baAFnvg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_dUxodSumEeyJjNOKZ7e9aA" general="_dMq1UCumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWs7ECumEeyJjNOKZ7e9aA" name="WarpPoset" specification="_dUxocCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWs7ESumEeyJjNOKZ7e9aA" name="workload" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWs7EiumEeyJjNOKZ7e9aA" type="_dNi_ECumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWs7EyumEeyJjNOKZ7e9aA" name="findCoordinator" specification="_dVmH0CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWs7FCumEeyJjNOKZ7e9aA" name="nodesInFlow" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWs7FSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dUxocCumEeyJjNOKZ7e9aA" name="WarpPoset" visibility="package" method="_dWs7ECumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dUxociumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dUxocyumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dUxocSumEeyJjNOKZ7e9aA" name="workload" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dUxodCumEeyJjNOKZ7e9aA" type="_dNi_ECumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVmH0CumEeyJjNOKZ7e9aA" name="findCoordinator" visibility="protected" method="_dWs7EyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVmH0SumEeyJjNOKZ7e9aA" name="nodesInFlow" type="_dT-XMCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVmH0iumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNjmICumEeyJjNOKZ7e9aA" name="WarpSystem">
              <ownedComment xmi:id="_rZcQ-Dd2EeykP74baAFnvg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dWNy4CumEeyJjNOKZ7e9aA" name="program" visibility="private" type="_dMxjASumEeyJjNOKZ7e9aA" association="_dXPGkSumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWNy4iumEeyJjNOKZ7e9aA" name="workLoad" visibility="private" type="_dN6LcCumEeyJjNOKZ7e9aA" association="_dXPGlCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWNy5CumEeyJjNOKZ7e9aA" name="ra" visibility="private" type="_dM9wQCumEeyJjNOKZ7e9aA" association="_dXPGlyumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWNy5iumEeyJjNOKZ7e9aA" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWOZ9CumEeyJjNOKZ7e9aA" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWOZ9SumEeyJjNOKZ7e9aA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWPBACumEeyJjNOKZ7e9aA" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWPBASumEeyJjNOKZ7e9aA" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_dUyPgCumEeyJjNOKZ7e9aA" client="_dNjmICumEeyJjNOKZ7e9aA" supplier="_dNdfgCumEeyJjNOKZ7e9aA" contract="_dNdfgCumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWs7GCumEeyJjNOKZ7e9aA" name="WarpSystem" specification="_dVmu4CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWs7GSumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWs7GiumEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWs7GyumEeyJjNOKZ7e9aA" name="choice" type="_dVZTgiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWs7HCumEeyJjNOKZ7e9aA" type="_dNjmICumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
		this.numChannels = numChannels;&#xD;
		createProgram(workLoad, numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWs7HSumEeyJjNOKZ7e9aA" name="toWorkload" specification="_dNkNMCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWs7HiumEeyJjNOKZ7e9aA" type="_dN6LcCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWs7HyumEeyJjNOKZ7e9aA" name="toProgram" specification="_dNkNNCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWs7ICumEeyJjNOKZ7e9aA" type="_dMxjASumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWs7ISumEeyJjNOKZ7e9aA" name="toReliabilityAnalysis" specification="_dNk0QCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWs7IiumEeyJjNOKZ7e9aA" type="_dM9wQCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
		return ra;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWs7IyumEeyJjNOKZ7e9aA" name="toSimulator" specification="_dNk0RCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWs7JCumEeyJjNOKZ7e9aA" type="_dNRSQCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWs7JSumEeyJjNOKZ7e9aA" name="reliabilitiesMet" specification="_dNlbUCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWs7JiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
			ra = new ReliabilityAnalysis(program);&#xD;
		} &#xD;
		return ra.verifyReliabilities();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWs7JyumEeyJjNOKZ7e9aA" name="deadlinesMet" specification="_dNlbVSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWs7KCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
		if (program.deadlineMisses().size() > 0) {&#xD;
			result = false;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWs7KSumEeyJjNOKZ7e9aA" name="createProgram" specification="_dVmu5yumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWs7KiumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWs7KyumEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWs7LCumEeyJjNOKZ7e9aA" name="choice" type="_dVZTgiumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWtiICumEeyJjNOKZ7e9aA" name="getNumFaults" specification="_dNmCYCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWtiISumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWtiIiumEeyJjNOKZ7e9aA" name="getMinPacketReceptionRate" specification="_dNmCZSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWtiIyumEeyJjNOKZ7e9aA" type="_dVbIsCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWtiJCumEeyJjNOKZ7e9aA" name="getE2e" specification="_dNmCaSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWtiJSumEeyJjNOKZ7e9aA" type="_dVbIsCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWtiJiumEeyJjNOKZ7e9aA" name="getName" specification="_dNmpciumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWtiJyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWtiKCumEeyJjNOKZ7e9aA" name="getSchedulerName" specification="_dNmpdyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWtiKSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWtiKiumEeyJjNOKZ7e9aA" name="getNumTransmissions" specification="_dNmpfCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWtiKyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWtiLCumEeyJjNOKZ7e9aA" name="getOptimizationFlag" specification="_dNnQgyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWtiLSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dNkNMCumEeyJjNOKZ7e9aA" name="toWorkload" method="_dWs7HSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUyPgSumEeyJjNOKZ7e9aA" type="_dN6LcCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNkNNCumEeyJjNOKZ7e9aA" name="toProgram" method="_dWs7HyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUyPgiumEeyJjNOKZ7e9aA" type="_dMxjASumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNk0QCumEeyJjNOKZ7e9aA" name="toReliabilityAnalysis" method="_dWs7ISumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUyPgyumEeyJjNOKZ7e9aA" type="_dM9wQCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNk0RCumEeyJjNOKZ7e9aA" name="toSimulator" method="_dWs7IyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dUyPhCumEeyJjNOKZ7e9aA" type="_dNRSQCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNlbUCumEeyJjNOKZ7e9aA" name="reliabilitiesMet" method="_dWs7JSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNlbUSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNlbVSumEeyJjNOKZ7e9aA" name="deadlinesMet" method="_dWs7JyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNlbViumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNmCYCumEeyJjNOKZ7e9aA" name="getNumFaults" method="_dWtiICumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNmCYSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNmCZSumEeyJjNOKZ7e9aA" name="getMinPacketReceptionRate" method="_dWtiIiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVnV8CumEeyJjNOKZ7e9aA" type="_dVbIsCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNmCaSumEeyJjNOKZ7e9aA" name="getE2e" method="_dWtiJCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVnV8SumEeyJjNOKZ7e9aA" type="_dVbIsCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNmpciumEeyJjNOKZ7e9aA" name="getName" method="_dWtiJiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNmpcyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNmpdyumEeyJjNOKZ7e9aA" name="getSchedulerName" method="_dWtiKCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNmpeCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNmpfCumEeyJjNOKZ7e9aA" name="getNumTransmissions" method="_dWtiKiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNmpfSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNnQgyumEeyJjNOKZ7e9aA" name="getOptimizationFlag" method="_dWtiLCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNnQhCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNnQiCumEeyJjNOKZ7e9aA" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_dVmu4CumEeyJjNOKZ7e9aA" name="WarpSystem" method="_dWs7GCumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dVmu5CumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dVmu5SumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dVmu4SumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVmu4iumEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVmu4yumEeyJjNOKZ7e9aA" name="choice" type="_dVZTgiumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVmu5iumEeyJjNOKZ7e9aA" type="_dNjmICumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVmu5yumEeyJjNOKZ7e9aA" name="createProgram" visibility="private" method="_dWs7KSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dVmu6CumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVmu6SumEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVmu6iumEeyJjNOKZ7e9aA" name="choice" type="_dVZTgiumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNoeoCumEeyJjNOKZ7e9aA" name="WarpTester">
              <ownedComment xmi:id="_rZcQ-Td2EeykP74baAFnvg">
                <body>Represents a WarpTester which tests WARP using different system and scheduler choices and visualizes&#xD;
the work load along with outputting different specified files to show if WARP is working correctly according to&#xD;
constraints&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dWPBAyumEeyJjNOKZ7e9aA" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWPBBCumEeyJjNOKZ7e9aA" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWPoECumEeyJjNOKZ7e9aA" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_dVbIsCumEeyJjNOKZ7e9aA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWPoESumEeyJjNOKZ7e9aA" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWPoEiumEeyJjNOKZ7e9aA" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_dVbIsCumEeyJjNOKZ7e9aA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWPoEyumEeyJjNOKZ7e9aA" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWPoFCumEeyJjNOKZ7e9aA" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWPoFSumEeyJjNOKZ7e9aA" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWPoFiumEeyJjNOKZ7e9aA" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_dUpspCumEeyJjNOKZ7e9aA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWPoFyumEeyJjNOKZ7e9aA" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWPoGCumEeyJjNOKZ7e9aA" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWPoGSumEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWPoGiumEeyJjNOKZ7e9aA" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWPoHCumEeyJjNOKZ7e9aA" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWQPISumEeyJjNOKZ7e9aA" name="minLQ" visibility="private" isStatic="true" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWQPIyumEeyJjNOKZ7e9aA" name="e2e" visibility="private" isStatic="true" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWQPJSumEeyJjNOKZ7e9aA" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWQPJyumEeyJjNOKZ7e9aA" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWQPKSumEeyJjNOKZ7e9aA" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWQ2MSumEeyJjNOKZ7e9aA" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWQ2MyumEeyJjNOKZ7e9aA" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWQ2NSumEeyJjNOKZ7e9aA" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWQ2NyumEeyJjNOKZ7e9aA" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWQ2OSumEeyJjNOKZ7e9aA" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWRdQCumEeyJjNOKZ7e9aA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWRdQiumEeyJjNOKZ7e9aA" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWRdRCumEeyJjNOKZ7e9aA" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWRdRiumEeyJjNOKZ7e9aA" name="schedulerSelected" visibility="private" isStatic="true" type="_dUpspCumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWtiLiumEeyJjNOKZ7e9aA" name="main" specification="_dNpFsCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWtiLyumEeyJjNOKZ7e9aA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWtiMCumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
		setWarpParameters(args);&#xD;
		&#xD;
		// and print out the values if in verbose mode&#xD;
		if (verboseMode) {&#xD;
			printWarpParameters();&#xD;
		}&#xD;
		&#xD;
		// Create and visualize the workload&#xD;
		// inputFile string, which may be null, &#xD;
		WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile); &#xD;
		if (allRequested) {&#xD;
			for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
				visualize(workLoad, choice); // visualize all Program choices&#xD;
			}&#xD;
			// Create and visualize the Warp System&#xD;
			if (schedulerRequested) {&#xD;
				Warp warp = SystemFactory.create(workLoad,nChannels,schedulerSelected);&#xD;
				verifyPerformanceRequirements(warp);&#xD;
				for (SystemChoices choice : SystemChoices.values()) {&#xD;
					visualize(warp, choice); // visualize all System choices&#xD;
				}&#xD;
			} else { // create a system for all scheduler choices&#xD;
				for (ScheduleChoices sch: ScheduleChoices.values()) {&#xD;
					schedulerSelected = sch;&#xD;
					Warp warp = SystemFactory.create(workLoad,nChannels,schedulerSelected);&#xD;
					verifyPerformanceRequirements(warp);&#xD;
					for (SystemChoices choice : SystemChoices.values()) {&#xD;
						visualize(warp, choice);  // visualize all System choices&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		} else { // visualize warp workload, source program and other requested items&#xD;
			visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
			if (wfRequested) {&#xD;
				visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
			}&#xD;
			if (gvRequested) {&#xD;
				visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
			}&#xD;
			Warp warp = SystemFactory.create(workLoad,nChannels,schedulerSelected);&#xD;
			verifyPerformanceRequirements(warp);&#xD;
			visualize(warp, SystemChoices.SOURCE);&#xD;
			if (latencyRequested) {&#xD;
				visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
			}&#xD;
			if (raRequested) {&#xD;
				visualize(warp, SystemChoices.RELIABILITIES);&#xD;
			}			&#xD;
		}&#xD;
			&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWtiNyumEeyJjNOKZ7e9aA" name="verifyPerformanceRequirements" specification="_dU0rwiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWtiOCumEeyJjNOKZ7e9aA" name="warp" type="_dNdfgCumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
		verifyReliabilities(warp);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWtiOSumEeyJjNOKZ7e9aA" name="verifyReliabilities" specification="_dU0rxCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWtiOiumEeyJjNOKZ7e9aA" name="warp" type="_dNdfgCumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART ) {&#xD;
			/* RealTime HART doesn't adhere to reliability targets */	&#xD;
			if (!warp.reliabilitiesMet()) {&#xD;
				System.err.printf(&quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
						+ &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
						String.valueOf(e2e), schedulerSelected.toString());&#xD;
			} else if (verboseMode) {&#xD;
				System.out.printf(&quot;\n\tAll flows meet the end-to-end reliability &quot;&#xD;
						+ &quot;of %s under %s scheduling.\n&quot;,&#xD;
						String.valueOf(e2e), schedulerSelected.toString());&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuJMCumEeyJjNOKZ7e9aA" name="verifyDeadlines" specification="_dU0rxiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWuJMSumEeyJjNOKZ7e9aA" name="warp" type="_dNdfgCumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
			System.err.printf(&#xD;
					&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;, &#xD;
					schedulerSelected.toString());&#xD;
			visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
		} else if (verboseMode) {&#xD;
			System.out.printf(&#xD;
					&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;, &#xD;
					schedulerSelected.toString());&#xD;
		} &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuJMiumEeyJjNOKZ7e9aA" name="setWarpParameters" specification="_dNpswSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWuJMyumEeyJjNOKZ7e9aA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWuJNCumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this function--need to set up globals?&#xD;
		&#xD;
		// create holder objects for storing results ...&#xD;
	    // BooleanHolder debug = new BooleanHolder();&#xD;
		StringHolder schedulerSelected = new StringHolder();&#xD;
		IntHolder channels = new IntHolder();&#xD;
		IntHolder faults = new IntHolder();&#xD;
		DoubleHolder m = new DoubleHolder();&#xD;
		DoubleHolder end2end = new DoubleHolder();&#xD;
		BooleanHolder gv = new BooleanHolder();&#xD;
		BooleanHolder wf = new BooleanHolder();&#xD;
		BooleanHolder ra = new BooleanHolder();&#xD;
		BooleanHolder s = new BooleanHolder();&#xD;
		BooleanHolder all = new BooleanHolder();&#xD;
		BooleanHolder latency = new BooleanHolder();&#xD;
		BooleanHolder verbose = new BooleanHolder();&#xD;
		StringHolder input = new StringHolder();&#xD;
		StringHolder output = new StringHolder();&#xD;
 &#xD;
		// create the parser and specify the allowed options ...&#xD;
		ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
	    parser.addOption (&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;, schedulerSelected);&#xD;
	    parser.addOption (&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
	    parser.addOption (&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
	    parser.addOption (&quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;, end2end);&#xD;
	    parser.addOption (&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;, faults);&#xD;
	    parser.addOption (&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
	    parser.addOption (&quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;, wf);&#xD;
	    parser.addOption (&quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;, ra);&#xD;
	    parser.addOption (&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
	    parser.addOption (&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
	    parser.addOption (&quot;-l, --latency  %v #prints end-to-end latency for each flow instance&quot;, latency);&#xD;
	    parser.addOption (&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
	    parser.addOption (&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;, output);&#xD;
	    parser.addOption (&quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;, verbose);&#xD;
	    &#xD;
		&#xD;
 &#xD;
		// match the arguments ...&#xD;
		parser.matchAllArgs (args);&#xD;
		&#xD;
		// Set WARP system configuration options&#xD;
		if (channels.value > 0) {&#xD;
			nChannels = channels.value; // set option specified&#xD;
		} else {&#xD;
			nChannels = NUM_CHANNELS; // set to default&#xD;
		}&#xD;
		if (faults.value > 0) { // global variable for # of Faults tolerated per edge &#xD;
			numFaults = faults.value; // set option specified&#xD;
		} else {&#xD;
			numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
		}&#xD;
		if (m.value > 0.0) { // global variable for minimum Link Quality in system &#xD;
			minLQ = m.value; // set option specified&#xD;
		} else {&#xD;
			minLQ = MIN_LQ; // set to default&#xD;
		}&#xD;
		if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
			e2e = end2end.value; // set option specified&#xD;
		} else {&#xD;
			e2e = E2E; // set to default&#xD;
		}		&#xD;
		if (output.value != null) { // default output subdirectory (from working directory)&#xD;
			outputSubDirectory = output.value; // set option specified&#xD;
		} else {&#xD;
			outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
		}&#xD;
&#xD;
		gvRequested = gv.value; // GraphVis file requested flag&#xD;
		wfRequested = wf.value; // WARP file requested flag&#xD;
		raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
		simRequested = s.value; // Simulation file requested flag&#xD;
		allRequested = all.value; // all out files requested flag&#xD;
		latencyRequested = latency.value; // latency report requested flag&#xD;
		verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
		inputFile = input.value; // input file specified&#xD;
		if (schedulerSelected.value != null) {  // can't switch on a null value so check then switch&#xD;
			schedulerRequested = true;&#xD;
			switch (schedulerSelected.value) {&#xD;
		        case &quot;priority&quot;:&#xD;
		        	WarpTester.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
		            break;&#xD;
		                &#xD;
		        case &quot;rm&quot;:&#xD;
		        	WarpTester.schedulerSelected = ScheduleChoices.RM;&#xD;
		            break;&#xD;
		                 &#xD;
		        case &quot;dm&quot;:&#xD;
		        	WarpTester.schedulerSelected = ScheduleChoices.DM;&#xD;
		            break;&#xD;
		            &#xD;
		        case &quot;rtHart&quot;:&#xD;
		        	WarpTester.schedulerSelected = ScheduleChoices.RTHART;&#xD;
		            break;&#xD;
		                    &#xD;
		        case &quot;poset&quot;:&#xD;
		        	WarpTester.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
		            break;&#xD;
		            &#xD;
		        default:&#xD;
		        	WarpTester.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
		            break;&#xD;
			}&#xD;
		} else { // null value when no scheduler specified; so use default&#xD;
			WarpTester.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuJNSumEeyJjNOKZ7e9aA" name="printWarpParameters" specification="_dNpsxCumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>// Print out each of the system configuration values&#xD;
		System.out.println (&quot;WARP system configuration values:&quot;);&#xD;
		System.out.println (&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
		System.out.println (&quot;\tnChanels=&quot; + nChannels);&#xD;
		System.out.println (&quot;\tnumFaults=&quot; + numFaults);&#xD;
		System.out.println (&quot;\tminLQ=&quot; + minLQ);&#xD;
		System.out.println (&quot;\tE2E=&quot; + e2e);&#xD;
		System.out.println (&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
		System.out.println (&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
		System.out.println (&quot;\traRequest flag=&quot; + raRequested);&#xD;
		System.out.println (&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
		System.out.println (&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
		System.out.println (&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
		if (inputFile != null) {&#xD;
			System.out.println (&quot;\tinput file=&quot; + inputFile);&#xD;
		} else {&#xD;
			System.out.println (&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
		}&#xD;
		System.out.println (&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
		System.out.println (&quot;\tverbose flag=&quot; + verboseMode);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ObpsDXLEeyzKPzbxOg4Ww" name="visualize" specification="_0NencDXLEeyzKPzbxOg4Ww">
                <ownedParameter xmi:id="_0ObpsTXLEeyzKPzbxOg4Ww" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_0ObpsjXLEeyzKPzbxOg4Ww" name="choice" type="_dUq6wSumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createWorkLoadVisualization(workLoad, &#xD;
				outputSubDirectory, choice);&#xD;
		if (viz != null) {&#xD;
			if (verboseMode) {&#xD;
				viz.toDisplay();&#xD;
			}&#xD;
			viz.toFile();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ObpszXLEeyzKPzbxOg4Ww" name="visualize" specification="_0NenczXLEeyzKPzbxOg4Ww">
                <ownedParameter xmi:id="_0ObptDXLEeyzKPzbxOg4Ww" name="warp" type="_dNdfgCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_0ObptTXLEeyzKPzbxOg4Ww" name="choice" type="_dUqTtSumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, &#xD;
				outputSubDirectory, choice);&#xD;
		if (viz != null) {&#xD;
			viz.toFile();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dNpFsCumEeyJjNOKZ7e9aA" name="main" isStatic="true" method="_dWtiLiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_rZcQ-jd2EeykP74baAFnvg">
                  <body>Visualizes workload according to type of file requested, system choices and scheduler choices&#xD;
	 * along with outputting other requested files to show data about the WARP program&#xD;
	 * @param args Command line options</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNpFsSumEeyJjNOKZ7e9aA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dNpFsiumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNpswSumEeyJjNOKZ7e9aA" name="setWarpParameters" visibility="private" isStatic="true" method="_dWuJMiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNpswiumEeyJjNOKZ7e9aA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dNpswyumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNpsxCumEeyJjNOKZ7e9aA" name="printWarpParameters" visibility="private" isStatic="true" method="_dWuJNSumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dU0rwiumEeyJjNOKZ7e9aA" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_dWtiNyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dU0rwyumEeyJjNOKZ7e9aA" name="warp" type="_dNdfgCumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dU0rxCumEeyJjNOKZ7e9aA" name="verifyReliabilities" visibility="private" isStatic="true" method="_dWtiOSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dU0rxSumEeyJjNOKZ7e9aA" name="warp" type="_dNdfgCumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dU0rxiumEeyJjNOKZ7e9aA" name="verifyDeadlines" visibility="private" isStatic="true" method="_dWuJMCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dU0rxyumEeyJjNOKZ7e9aA" name="warp" type="_dNdfgCumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_0NencDXLEeyzKPzbxOg4Ww" name="visualize" visibility="private" isStatic="true" method="_0ObpsDXLEeyzKPzbxOg4Ww">
                <ownedParameter xmi:id="_0NencTXLEeyzKPzbxOg4Ww" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_0NencjXLEeyzKPzbxOg4Ww" name="choice" type="_dUq6wSumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_0NenczXLEeyzKPzbxOg4Ww" name="visualize" visibility="private" isStatic="true" method="_0ObpszXLEeyzKPzbxOg4Ww">
                <ownedParameter xmi:id="_0NendDXLEeyzKPzbxOg4Ww" name="warp" type="_dNdfgCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_0NendTXLEeyzKPzbxOg4Ww" name="choice" type="_dUqTtSumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNrh8CumEeyJjNOKZ7e9aA" name="WorkLoadDescription">
              <ownedComment xmi:id="_rZc4ADd2EeykP74baAFnvg">
                <body>Provides information on graphs that are given through .txt files&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_dU154SumEeyJjNOKZ7e9aA" general="_dNacMCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWSEUCumEeyJjNOKZ7e9aA" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWSEUSumEeyJjNOKZ7e9aA" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWSEUiumEeyJjNOKZ7e9aA" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWSEUyumEeyJjNOKZ7e9aA" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWSEVCumEeyJjNOKZ7e9aA" name="description" visibility="private" type="_dMRzwSumEeyJjNOKZ7e9aA" association="_dXPtoSumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWSEViumEeyJjNOKZ7e9aA" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWSEWCumEeyJjNOKZ7e9aA" name="fm" visibility="private" type="_dMWsQCumEeyJjNOKZ7e9aA" association="_dXPtpCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWSrYCumEeyJjNOKZ7e9aA" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuJNiumEeyJjNOKZ7e9aA" name="WorkLoadDescription" specification="_dNrh8SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWuJNyumEeyJjNOKZ7e9aA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWuJOCumEeyJjNOKZ7e9aA" type="_dNrh8CumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
   		this.fm = this.getFileManager();&#xD;
   		initialize(inputFileName);&#xD;
   	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuJOSumEeyJjNOKZ7e9aA" name="visualization" specification="_dNsJACumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWuJOiumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return description;&#xD;
   	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuJOyumEeyJjNOKZ7e9aA" name="fileVisualization" specification="_dNsJBCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWuJPCumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return description;&#xD;
   	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuJPSumEeyJjNOKZ7e9aA" name="toString" specification="_dNswECumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWuJPiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
   	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuJPyumEeyJjNOKZ7e9aA" name="initialize" specification="_dNswFSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWuJQCumEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
   		InputGraphFile gf = new InputGraphFile(fm);&#xD;
   		inputGraphString = gf.readGraphFile(inputFile);&#xD;
   		this.inputFileName = gf.getGraphFileName();&#xD;
   		description = new Description(inputGraphString);&#xD;
   	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuJQSumEeyJjNOKZ7e9aA" name="main" specification="_dNswFyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWuJQiumEeyJjNOKZ7e9aA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWuJQyumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>//Declarations at the beginning of block &#xD;
   		int REMOVE_CURLY = 3; //constant to remove curly bracket&#xD;
   		int FLOW_NUM = 1; //used to increment printed flow numbers&#xD;
   		String Temp; //temporary string to hold graph title &#xD;
   		String graphToString; //used to manipulate file contents&#xD;
   		String[] fileLines; //temporary array to hold contents&#xD;
   		ArrayList&lt;String> sortingList = new ArrayList&lt;>(); //ArrayList used to sort&#xD;
   		&#xD;
   		WorkLoadDescription inputGraph = new WorkLoadDescription(&quot;StressTest4.txt&quot;); &#xD;
   		&#xD;
   		graphToString = inputGraph.toString(); &#xD;
   		&#xD;
   		fileLines = graphToString.split(&quot;\n&quot;); //each line becomes its own element in array&#xD;
   				&#xD;
   		//add graph contents to ArrayList&#xD;
   		for(int i = 0; i &lt; fileLines.length; i ++) {&#xD;
   			&#xD;
   			sortingList.add(fileLines[i]);&#xD;
   			&#xD;
   		}&#xD;
   		&#xD;
   		Temp = sortingList.remove(0); //remove brackets and title to focus on sorting&#xD;
   		&#xD;
   		sortingList.remove(sortingList.size() - 1 );&#xD;
   		&#xD;
   		Collections.sort(sortingList); //sort&#xD;
   		//Collections.sort(sortingList, String.CASE_INSENSITIVE_ORDER);&#xD;
   		&#xD;
   		//print graph title followed by sorted contents&#xD;
   		System.out.println(Temp.substring(0, Temp.length() - REMOVE_CURLY));&#xD;
   		&#xD;
   		for(int k = 0; k &lt; sortingList.size(); k ++) {&#xD;
   			&#xD;
   			System.out.println(&quot;Flow &quot; + (k + FLOW_NUM) + &quot;: &quot; + sortingList.get(k));&#xD;
   		&#xD;
   		}&#xD;
   	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dNrh8SumEeyJjNOKZ7e9aA" name="WorkLoadDescription" visibility="package" method="_dWuJNiumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dNrh8yumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dNrh9CumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dNrh8iumEeyJjNOKZ7e9aA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNrh9SumEeyJjNOKZ7e9aA" type="_dNrh8CumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNsJACumEeyJjNOKZ7e9aA" name="visualization" method="_dWuJOSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dU1S0CumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNsJBCumEeyJjNOKZ7e9aA" name="fileVisualization" method="_dWuJOyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dU154CumEeyJjNOKZ7e9aA" type="_dMRzwSumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNswECumEeyJjNOKZ7e9aA" name="toString" method="_dWuJPSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNswESumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNswFSumEeyJjNOKZ7e9aA" name="initialize" visibility="private" method="_dWuJPyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNswFiumEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNswFyumEeyJjNOKZ7e9aA" name="main" isStatic="true" method="_dWuJQSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNswGCumEeyJjNOKZ7e9aA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dNswGSumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNtXICumEeyJjNOKZ7e9aA" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_rZbC1Td2EeykP74baAFnvg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dVokECumEeyJjNOKZ7e9aA" general="_dUNnxyumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWSrYSumEeyJjNOKZ7e9aA" name="workLoad" visibility="package" type="_dN6LcCumEeyJjNOKZ7e9aA" association="_dXPtpyumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWSrYyumEeyJjNOKZ7e9aA" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuJRCumEeyJjNOKZ7e9aA" name="WorkLoadListener" specification="_dU154iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWuJRSumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWuJRiumEeyJjNOKZ7e9aA" type="_dNtXICumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuJRyumEeyJjNOKZ7e9aA" name="buildNodesAndFlows" specification="_dU155yumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWuJSCumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuJSSumEeyJjNOKZ7e9aA" name="testPrintStdOut" specification="_dNt-MCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWuJSiumEeyJjNOKZ7e9aA" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuwQCumEeyJjNOKZ7e9aA" name="enterWarpName" specification="_dU2g8SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWuwQSumEeyJjNOKZ7e9aA" name="ctx" type="_dUO15SumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuwQiumEeyJjNOKZ7e9aA" name="enterFlowName" specification="_dU2g9iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWuwQyumEeyJjNOKZ7e9aA" name="ctx" type="_dUPc-SumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuwRCumEeyJjNOKZ7e9aA" name="exitPriority" specification="_dU3IAiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWuwRSumEeyJjNOKZ7e9aA" name="ctx" type="_dU3IACumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuwRiumEeyJjNOKZ7e9aA" name="exitPeriod" specification="_dU3vECumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWuwRyumEeyJjNOKZ7e9aA" name="ctx" type="_dU3IByumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuwSCumEeyJjNOKZ7e9aA" name="exitDeadline" specification="_dU3vFyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWuwSSumEeyJjNOKZ7e9aA" name="ctx" type="_dU3vFSumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuwSiumEeyJjNOKZ7e9aA" name="exitPhase" specification="_dU4WJCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWuwSyumEeyJjNOKZ7e9aA" name="ctx" type="_dU4WIiumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuwTCumEeyJjNOKZ7e9aA" name="exitSrcNode" specification="_dU49MCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWuwTSumEeyJjNOKZ7e9aA" name="ctx" type="_dUQEBiumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuwTiumEeyJjNOKZ7e9aA" name="exitSnkNode" specification="_dU49NSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWuwTyumEeyJjNOKZ7e9aA" name="ctx" type="_dUQrEiumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuwUCumEeyJjNOKZ7e9aA" name="exitFlow" specification="_dU49OiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWuwUSumEeyJjNOKZ7e9aA" name="ctx" type="_dURSICumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dNt-MCumEeyJjNOKZ7e9aA" name="testPrintStdOut" method="_dWuJSSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dNt-MSumEeyJjNOKZ7e9aA" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dU154iumEeyJjNOKZ7e9aA" name="WorkLoadListener" visibility="private" method="_dWuJRCumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dU155CumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dU155SumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dU154yumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dU155iumEeyJjNOKZ7e9aA" type="_dNtXICumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dU155yumEeyJjNOKZ7e9aA" name="buildNodesAndFlows" isStatic="true" method="_dWuJRyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dU2g8CumEeyJjNOKZ7e9aA" name="workLoad" type="_dN6LcCumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dU2g8SumEeyJjNOKZ7e9aA" name="enterWarpName" method="_dWuwQCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dU2g8iumEeyJjNOKZ7e9aA" name="ctx" type="_dUO15SumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dU2g9iumEeyJjNOKZ7e9aA" name="enterFlowName" method="_dWuwQiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dU2g9yumEeyJjNOKZ7e9aA" name="ctx" type="_dUPc-SumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dU3IAiumEeyJjNOKZ7e9aA" name="exitPriority" method="_dWuwRCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dU3IAyumEeyJjNOKZ7e9aA" name="ctx" type="_dU3IACumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dU3vECumEeyJjNOKZ7e9aA" name="exitPeriod" method="_dWuwRiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dU3vESumEeyJjNOKZ7e9aA" name="ctx" type="_dU3IByumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dU3vFyumEeyJjNOKZ7e9aA" name="exitDeadline" method="_dWuwSCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dU3vGCumEeyJjNOKZ7e9aA" name="ctx" type="_dU3vFSumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dU4WJCumEeyJjNOKZ7e9aA" name="exitPhase" method="_dWuwSiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dU4WJSumEeyJjNOKZ7e9aA" name="ctx" type="_dU4WIiumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dU49MCumEeyJjNOKZ7e9aA" name="exitSrcNode" method="_dWuwTCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dU49MSumEeyJjNOKZ7e9aA" name="ctx" type="_dUQEBiumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dU49NSumEeyJjNOKZ7e9aA" name="exitSnkNode" method="_dWuwTiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dU49NiumEeyJjNOKZ7e9aA" name="ctx" type="_dUQrEiumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dU49OiumEeyJjNOKZ7e9aA" name="exitFlow" method="_dWuwUCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dU49OyumEeyJjNOKZ7e9aA" name="ctx" type="_dURSICumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNvMUCumEeyJjNOKZ7e9aA" name="WorkLoadTest" visibility="package">
              <ownedAttribute xmi:id="_dWSrZSumEeyJjNOKZ7e9aA" name="stressTest4WorkLoad" visibility="package" type="_dN6LcCumEeyJjNOKZ7e9aA" association="_dXPtqiumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWTScSumEeyJjNOKZ7e9aA" name="seeSprayWorkLoad" visibility="package" type="_dN6LcCumEeyJjNOKZ7e9aA" association="_dXQUsSumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWTScyumEeyJjNOKZ7e9aA" name="test1WorkLoad" visibility="package" type="_dN6LcCumEeyJjNOKZ7e9aA" association="_dXQUtCumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWTSdSumEeyJjNOKZ7e9aA" name="addFlowTest" visibility="package" type="_dN6LcCumEeyJjNOKZ7e9aA" association="_dXQUtyumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWTSdyumEeyJjNOKZ7e9aA" name="addFlowCompare" visibility="package" type="_dN6LcCumEeyJjNOKZ7e9aA" association="_dXQ7wSumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWT5gSumEeyJjNOKZ7e9aA" name="addFlowCompareTwo" visibility="package" type="_dN6LcCumEeyJjNOKZ7e9aA" association="_dXQ7xCumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuwUiumEeyJjNOKZ7e9aA" name="setUp" specification="_dNvzYCumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Double 	WORKLOAD_M = 3.0;&#xD;
		Double WORKLOAD_E2E = 2.0;&#xD;
		//Create work load for stressTest4.txt&#xD;
		stressTest4WorkLoad = new WorkLoad(WORKLOAD_M, WORKLOAD_E2E, &quot;stressTest4.txt&quot;);&#xD;
		//Create work load for SeeSpray.txt&#xD;
		seeSprayWorkLoad = new WorkLoad(WORKLOAD_M, WORKLOAD_E2E, &quot;SeeSpray.txt&quot;);&#xD;
		//Create work load for Test1.txt&#xD;
		test1WorkLoad = new WorkLoad(WORKLOAD_M, WORKLOAD_E2E, &quot;Test1.txt&quot;);&#xD;
		//Create workLoad for addFlowTest.txt&#xD;
		addFlowTest = new WorkLoad(WORKLOAD_M, WORKLOAD_E2E, &quot;addFlowTest.txt&quot;);&#xD;
		//Create workLoad for addFlowTest_compare.txt&#xD;
		addFlowCompare = new WorkLoad(WORKLOAD_M, WORKLOAD_E2E, &quot;addFlowTest_compare.txt&quot;);&#xD;
		addFlowCompareTwo = new WorkLoad(WORKLOAD_M, WORKLOAD_E2E, &quot;addFlowTest2_compare.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuwUyumEeyJjNOKZ7e9aA" name="testAddFlow" specification="_dNwaciumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>ArrayList&lt;String> EXPECTED_OUTPUT = new ArrayList&lt;String>();&#xD;
		ArrayList&lt;String> addFlowOutput = new ArrayList&lt;String>();&#xD;
		//how do we add flows--is it just the flow name like 'F11'&#xD;
		addFlowTest.addFlow(&quot;F11&quot;);&#xD;
		//creating output&#xD;
		addFlowOutput = addFlowTest.getFlowNamesInOriginalOrder();&#xD;
		&#xD;
		EXPECTED_OUTPUT = addFlowCompare.getFlowNamesInOriginalOrder();&#xD;
		&#xD;
		assertEquals(EXPECTED_OUTPUT, addFlowOutput, &quot;New flow 'F11' added to workload&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuwVCumEeyJjNOKZ7e9aA" name="testAddFlowMultiple" specification="_dNwadiumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>ArrayList&lt;String> EXPECTED_OUTPUT = new ArrayList&lt;String>();&#xD;
		ArrayList&lt;String> addFlowOutput = new ArrayList&lt;String>();&#xD;
		&#xD;
		//how do we add flows--is it just the flow name like 'F11'&#xD;
		addFlowTest.addFlow(&quot;F11&quot;);&#xD;
		addFlowTest.addFlow(&quot;F21&quot;);&#xD;
		addFlowTest.addFlow(&quot;F18&quot;);&#xD;
		addFlowTest.addFlow(&quot;F13&quot;);&#xD;
		//creating output&#xD;
		addFlowOutput = addFlowTest.getFlowNamesInOriginalOrder();&#xD;
		&#xD;
		EXPECTED_OUTPUT = addFlowCompareTwo.getFlowNamesInOriginalOrder();&#xD;
		&#xD;
		assertEquals(EXPECTED_OUTPUT, addFlowOutput, &quot;Multiple flows added to workload&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuwVSumEeyJjNOKZ7e9aA" name="testAddNodeToFlowOnce" specification="_dNxBgiumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_NODE_STRING = &quot;[B, C, D, A]&quot;;&#xD;
		String[] actualNodes;&#xD;
		String actualNodeString;&#xD;
		&#xD;
		//Add node named 'A' to flow named 'F1'&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F1&quot;,&quot;A&quot;);&#xD;
		//Get the nodes in flow 'F1' which should now also contain A&#xD;
		actualNodes = stressTest4WorkLoad.getNodesInFlow(&quot;F1&quot;);&#xD;
		//Convert the array containing the nodes to string&#xD;
		actualNodeString = Arrays.toString(actualNodes);&#xD;
		&#xD;
		//Compare expected with result&#xD;
		assertEquals(EXPECTED_NODE_STRING, actualNodeString,&#xD;
				&quot;Flow F1 in stressTest4.txt after adding a single node 'A'&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuwViumEeyJjNOKZ7e9aA" name="testAddNodeToFlowMultiple" specification="_dNxBhiumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_NODE_STRING = &quot;[B, C, D, A, E, J]&quot;;&#xD;
		String[] actualNodeArray;&#xD;
		String actualNodeString;&#xD;
		&#xD;
		//Add nodes 'A', 'E', and 'J' to flow 'F6' in stressTest4.txt&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F6&quot;,&quot;A&quot;);&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F6&quot;,&quot;E&quot;);&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F6&quot;,&quot;J&quot;);&#xD;
		//Get the nodes in flow 'F6' which should now also contain 'A', 'E', and 'J'&#xD;
		actualNodeArray = stressTest4WorkLoad.getNodesInFlow(&quot;F6&quot;);&#xD;
		//Convert the array containing the nodes to a string&#xD;
		actualNodeString = Arrays.toString(actualNodeArray);&#xD;
		&#xD;
		//Compare expected with results&#xD;
		assertEquals(EXPECTED_NODE_STRING, actualNodeString,&#xD;
				&quot;Flow F6 in stressTest4.txt after adding nodes 'A', 'E' and 'J'&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuwVyumEeyJjNOKZ7e9aA" name="testAddNodeToFlowAlphanumeric" specification="_dNxokCumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_NODE_STRING = &quot;[C1, B1, A]&quot;;&#xD;
		String[] actualNodeArray;&#xD;
		String actualNodeString;&#xD;
		&#xD;
		//Add a node 'A' to flow 'F1A' in Test1.txt&#xD;
		test1WorkLoad.addNodeToFlow(&quot;F1A&quot;,&quot;A&quot;);&#xD;
		//Get the nodes in flow 'F1A' that should now contain 'A'&#xD;
		actualNodeArray = test1WorkLoad.getNodesInFlow(&quot;F1A&quot;);&#xD;
		//Convert the array containing the nodes to a string&#xD;
		actualNodeString = Arrays.toString(actualNodeArray);&#xD;
		&#xD;
		//Compare expected with results&#xD;
		assertEquals(EXPECTED_NODE_STRING, actualNodeString,&#xD;
				&quot;Flow F1A in Test1.txt after adding a node 'A'&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuwWCumEeyJjNOKZ7e9aA" name="testGetFlowPriorityStringString" specification="_dNxolCumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_NODE_PRIORITY = 0;&#xD;
		Integer actualNodePriority = stressTest4WorkLoad.getFlowPriority(&quot;F1&quot;,&quot;D&quot;);&#xD;
		&#xD;
		//next test will check that this method returns the correct priority when a new node is added&#xD;
		assertEquals(EXPECTED_NODE_PRIORITY, actualNodePriority, &#xD;
				&quot;Priority of node 'D,' belonging to flow 'F1' returned&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXUCumEeyJjNOKZ7e9aA" name="testGetFlowPriorityAddedNode" specification="_dNxomCumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_NODE_PRIORITY = 3;&#xD;
		Integer actualNodePriority;&#xD;
		&#xD;
		//add node to flow&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F1&quot;, &quot;Y&quot;);&#xD;
		//because they're 3 nodes in the flow this new flows priority should be 3&#xD;
		//new nodes priority will be index in flow, and indexing starts at 0 &#xD;
		actualNodePriority = stressTest4WorkLoad.getFlowPriority(&quot;F1&quot;,&quot;Y&quot;);&#xD;
		//check if expected and actual is equal&#xD;
		assertEquals(EXPECTED_NODE_PRIORITY, actualNodePriority, &quot;Priority of newly added node 'Y' in flow 'F1'&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXUSumEeyJjNOKZ7e9aA" name="testGetFlowPriorityString" specification="_dNxonCumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_PRIORITY = 1; &#xD;
		//test it &#xD;
		Integer actualPriority = stressTest4WorkLoad.getFlowPriority(&quot;F1&quot;);&#xD;
		&#xD;
		assertEquals(EXPECTED_PRIORITY, actualPriority, &quot;Initial priotiry of F1 returned&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXUiumEeyJjNOKZ7e9aA" name="testGetFlowPriorityStringAddedFlow" specification="_dNyPoyumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_PRIORITY = 10; &#xD;
		Integer actualPriority;&#xD;
&#xD;
		//add flow to flowPriorityTest WorkLoad&#xD;
		stressTest4WorkLoad.addFlow(&quot;F13&quot;);&#xD;
		/* When new flow added, priority set to index, this is the 10th flow added,&#xD;
		 * however indexing starts at 0, so new flow has priority 10&#xD;
		 */&#xD;
		&#xD;
		//test it &#xD;
		actualPriority = stressTest4WorkLoad.getFlowPriority(&quot;F13&quot;);&#xD;
		assertEquals(EXPECTED_PRIORITY, actualPriority, &quot;Priotiry of newly added flow 'F13' returned&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXUyumEeyJjNOKZ7e9aA" name="testSetFlowPriority" specification="_dNyPpyumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED = 30;&#xD;
		&#xD;
		//set flow F5's priority to 30, different than its initial priority of 5&#xD;
		stressTest4WorkLoad.setFlowPriority(&quot;F5&quot;, 30);&#xD;
		&#xD;
		//compare expected priority with actual &#xD;
		assertTrue(EXPECTED == stressTest4WorkLoad.getFlowPriority(&quot;F5&quot;), &#xD;
				&quot;Priority of flow 'F5' changed, then checked&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXVCumEeyJjNOKZ7e9aA" name="testSetFlowDeadlineOnce" specification="_dNyPqyumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_DEADLINE = 100;&#xD;
		Integer actualDeadline;&#xD;
		&#xD;
		//Set the deadline of flow 'F5' in stressTest4.txt to 100&#xD;
		stressTest4WorkLoad.setFlowDeadline(&quot;F5&quot;, 100);&#xD;
		//Get the actual deadline of the flow 'F5'&#xD;
		actualDeadline = stressTest4WorkLoad.getFlowDeadline(&quot;F5&quot;);&#xD;
		&#xD;
		//Compare expected with actual deadline&#xD;
		assertTrue(EXPECTED_DEADLINE == actualDeadline,&#xD;
				&quot;Deadline of flow F5 in stressTest4.txt after setting it to 100&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXVSumEeyJjNOKZ7e9aA" name="testSetFlowDeadlineOverwrite" specification="_dNy2siumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_DEADLINE = 75;&#xD;
		Integer actualDeadline;&#xD;
		&#xD;
		//Set the deadline of flow 'F1' in stressTest4.txt to 100&#xD;
		stressTest4WorkLoad.setFlowDeadline(&quot;F1&quot;, 100);&#xD;
		//Set the deadline of flow 'F1' in stressTest4.txt to 75&#xD;
		stressTest4WorkLoad.setFlowDeadline(&quot;F1&quot;, 75);&#xD;
		//Get the actual deadline of the flow 'F5'&#xD;
		actualDeadline = stressTest4WorkLoad.getFlowDeadline(&quot;F1&quot;);&#xD;
		&#xD;
		//Compare expected with actual deadline&#xD;
		assertTrue(EXPECTED_DEADLINE == actualDeadline,&#xD;
				&quot;Deadline of flow F1 in stressTest4.txt after setting it to 100 then 75&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXViumEeyJjNOKZ7e9aA" name="testSetFlowDeadlineAlphanumeric" specification="_dNy2tiumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_DEADLINE = 100;&#xD;
		Integer actualDeadline;&#xD;
		&#xD;
		//Set the deadline of flow 'F1A' in Test1.txt to 100&#xD;
		test1WorkLoad.setFlowDeadline(&quot;F1A&quot;, 100);&#xD;
		//Get the actual deadline of the flow 'F1A'&#xD;
		actualDeadline = test1WorkLoad.getFlowDeadline(&quot;F1A&quot;);&#xD;
		&#xD;
		//Compare expected with actual deadline&#xD;
		assertTrue(EXPECTED_DEADLINE == actualDeadline,&#xD;
				&quot;Deadline of flow F1A in Test1.txt after setting it to 100&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXVyumEeyJjNOKZ7e9aA" name="testGetFlowDeadlineOnce" specification="_dNy2uiumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_DEADLINE = 75;&#xD;
		//Get the deadline for flow 'F5' in stressTest4.txt&#xD;
		Integer actualDeadline = stressTest4WorkLoad.getFlowDeadline(&quot;F5&quot;);&#xD;
		&#xD;
		//Compare expected deadline with actual deadline&#xD;
		assertEquals(EXPECTED_DEADLINE, actualDeadline,&#xD;
				&quot;Getting flow F5's deadline from stressTest4.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXWCumEeyJjNOKZ7e9aA" name="testGetFlowDeadlineOnceAlphanumeric" specification="_dNy2viumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_DEADLINE = 25;&#xD;
		//Get the deadline for flow 'F1A' in Test1.txt&#xD;
		Integer actualDeadline = test1WorkLoad.getFlowDeadline(&quot;F1A&quot;);&#xD;
		&#xD;
		//Compare expected deadline with actual deadline&#xD;
		assertEquals(EXPECTED_DEADLINE, actualDeadline,&#xD;
				&quot;Getting flow F1A's deadline from Test1.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXWSumEeyJjNOKZ7e9aA" name="testGetFlowDeadlineMultiple" specification="_dNzdwyumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>//Expected deadline for flow 'F1' is 20&#xD;
		Integer EXPECTED_DEADLINE = 20;&#xD;
		//Expected deadline or flow 'F2' is 50&#xD;
		Integer EXPECTED_DEADLINE2 = 50;&#xD;
		//Get deadline for flow 'F1' in stressTest4.txt&#xD;
		Integer actualDeadline = stressTest4WorkLoad.getFlowDeadline(&quot;F1&quot;);&#xD;
		//Get deadline for flow 'F2' in stressTest4.txt&#xD;
		Integer actualDeadline2 = stressTest4WorkLoad.getFlowDeadline(&quot;F2&quot;);&#xD;
		//Hold the actual results in one array and hold the expected in another&#xD;
		Integer [] actualDeadlines = {actualDeadline, actualDeadline2};&#xD;
		Integer [] expectedDeadlines = {EXPECTED_DEADLINE, EXPECTED_DEADLINE2};&#xD;
		&#xD;
		//Compare expected with actual&#xD;
		assertEquals(expectedDeadlines, actualDeadlines,&#xD;
				&quot;Getting flow F1's deadline and then flow F2's deadline from stressTest4.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXWiumEeyJjNOKZ7e9aA" name="testGetFlowTxPerLink" specification="_dNzdxCumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_VALUE = 1;&#xD;
		//initiate actualValue&#xD;
		Integer actualValue = stressTest4WorkLoad.getFlowTxPerLink(&quot;F8&quot;);&#xD;
		&#xD;
		assertEquals(EXPECTED_VALUE, actualValue, &quot;Flow 'F8' txPerLink returned&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXWyumEeyJjNOKZ7e9aA" name="testGetFlowTxPerLinkNewFlowNoNodes" specification="_dNzdyCumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_VALUE = 1;&#xD;
		Integer actualValue;&#xD;
		&#xD;
		//add flow with no nodes&#xD;
		stressTest4WorkLoad.addFlow(&quot;F13&quot;);&#xD;
		//initiate actualValue&#xD;
		actualValue = stressTest4WorkLoad.getFlowTxPerLink(&quot;F13&quot;);&#xD;
		&#xD;
		assertEquals(EXPECTED_VALUE, actualValue, &quot;New flow 'F13' txPerLink returned&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXXCumEeyJjNOKZ7e9aA" name="testSetFlowsInRMorderOnce" specification="_dNzdzCumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_FLOWS = &quot;[F1, F2, F3, F4, F5, F6, F7, F8, F9, F10]&quot;;&#xD;
		String actualFlows;&#xD;
		//Arrange flows by period&#xD;
		stressTest4WorkLoad.setFlowsInRMorder();&#xD;
		&#xD;
		//Actual order of flows&#xD;
		actualFlows = stressTest4WorkLoad.getFlowNamesInPriorityOrder().toString();&#xD;
		//Compare expected with actual&#xD;
		assertEquals(EXPECTED_FLOWS, actualFlows,&#xD;
				&quot;Flows in stressTest4.txt arranged by period&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXXSumEeyJjNOKZ7e9aA" name="testSetFlowsInRMorderOverwrite" specification="_dN0E0yumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_FLOWS = &quot;[F1, F2, F3, F4, F5, F6, F7, F8, F9, F10]&quot;;&#xD;
		String actualFlows;&#xD;
		&#xD;
		//Arrange in order according to period twice&#xD;
		stressTest4WorkLoad.setFlowsInRMorder();&#xD;
		stressTest4WorkLoad.setFlowsInRMorder();&#xD;
		 &#xD;
		//Actual order of flows arranged by period&#xD;
		actualFlows = stressTest4WorkLoad.getFlowNamesInPriorityOrder().toString();&#xD;
		//Compare expected with actual&#xD;
		assertEquals(EXPECTED_FLOWS, actualFlows,&#xD;
				&quot;Flows in stressTest4.txt after being arranged by period twice&quot;);&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXXiumEeyJjNOKZ7e9aA" name="testSetFlowsInRMorderMultiple" specification="_dN0E1yumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_FLOWS = &quot;[F1, F2, F3, F4, F5, F6, F7, F8, F9, F10]&quot;;&#xD;
		String EXPECTED_FLOWS2 = &quot;[F1B, F1A]&quot;;&#xD;
		String [] expectedFlowsArray = {EXPECTED_FLOWS, EXPECTED_FLOWS2};&#xD;
&#xD;
		&#xD;
		//Arrange stressTest4.txt's flows by period&#xD;
		stressTest4WorkLoad.setFlowsInRMorder();&#xD;
		//Arrange Test1.txt's flows by period&#xD;
		test1WorkLoad.setFlowsInRMorder();&#xD;
		&#xD;
		//Using an array to compare both results at once&#xD;
		String [] actualFlowsArray = {stressTest4WorkLoad.getFlowNamesInPriorityOrder().toString(),&#xD;
				test1WorkLoad.getFlowNamesInPriorityOrder().toString()};&#xD;
		//Convert arrays to strings&#xD;
		String expectedFlows = Arrays.toString(expectedFlowsArray);&#xD;
		String actualFlows = Arrays.toString(actualFlowsArray);&#xD;
		//Compare expected with actual&#xD;
		assertEquals(expectedFlows, actualFlows,&#xD;
				&quot;Flows in stressTest4.txt and Test1.txt being arranged by period&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXXyumEeyJjNOKZ7e9aA" name="testSetFlowsInRMorderLargeAlphanumeric" specification="_dN0E2yumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>seeSprayWorkLoad.setFlowsInRMorder();&#xD;
		//Expected order of flows&#xD;
		String EXPECTED_FLOWS = &quot;[F6A, F6B, F2A, F28A, F16A, F28B, F2B, F16B, F24A, F12A, F24B, &quot;&#xD;
				+ &quot;F12B, F20A, F20B, F7B, F7A, F19A, F3B, F19B, F3A, F27A, F15A, F27B, F15B, F23A, &quot;&#xD;
				+ &quot;F11A, F23B, F11B, F8A, F8B, F4A, F18A, F4B, F18B, F26A, F14A, F26B, F14B, F22A, F10A, &quot;&#xD;
				+ &quot;F22B, F10B, F30A, F30B, F9B, F9A, F5B, F5A, F29A, F17A, F29B, F1B, F17B, F1A, F25A, F13A, &quot;&#xD;
				+ &quot;F25B, F13B, F21A, F21B]&quot;; &#xD;
		//Actual order of flows&#xD;
		String actualFlows = seeSprayWorkLoad.getFlowNamesInPriorityOrder().toString();&#xD;
		//Compare expected with actual&#xD;
		assertEquals(EXPECTED_FLOWS, actualFlows,&#xD;
				&quot;Large number of alphanumeric flows in SeeSpray.txt arranged by period&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXYCumEeyJjNOKZ7e9aA" name="testGetNodesOrderedAlphabetically" specification="_dN0r4yumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String[] EXPECTED = {&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;,&quot;F&quot;,&quot;G&quot;,&quot;H&quot;,&quot;I&quot;,&quot;J&quot;,&quot;K&quot;,&quot;L&quot;};&#xD;
		//order the nodes found in actualWorkLoad alphabetically&#xD;
		String[] actualNodes = stressTest4WorkLoad.getNodesOrderedAlphabetically();&#xD;
		&#xD;
		assertTrue(Arrays.equals(EXPECTED, actualNodes), &#xD;
				&quot;An array containg all nodes found in actualWorkLoad ordered alphabetically&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXYSumEeyJjNOKZ7e9aA" name="testGetNodesOrderedAlphabeticallyAddNumberNode" specification="_dN0r5yumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String[] EXPECTED = {&quot;1&quot;,&quot;10&quot;,&quot;7&quot;,&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;,&quot;F&quot;,&quot;G&quot;,&quot;H&quot;,&quot;I&quot;,&quot;J&quot;,&quot;K&quot;,&quot;L&quot;,&quot;M&quot;,&quot;S&quot;,&quot;Z&quot;};&#xD;
		String[] actualNodes;&#xD;
		&#xD;
		//add some nodes, some being numbers, so we can see sorters efficiency&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F3&quot;, &quot;Z&quot;);&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F9&quot;, &quot;S&quot;);&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F5&quot;, &quot;M&quot;);&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F1&quot;, &quot;1&quot;);&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F1&quot;, &quot;7&quot;);&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F1&quot;, &quot;10&quot;);&#xD;
		&#xD;
		//order the nodes found in actualWorkLoad alphabetically&#xD;
		actualNodes = stressTest4WorkLoad.getNodesOrderedAlphabetically();&#xD;
		&#xD;
		assertTrue(Arrays.equals(EXPECTED, actualNodes), &#xD;
				&quot;An array containg all nodes found in actualWorkLoad ordered alphabetically&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXYiumEeyJjNOKZ7e9aA" name="testGetNodesOrderedAlphabeticallyAddNodes" specification="_dN0r6yumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String[] actualNodes;&#xD;
		//create String array that contains the expected values&#xD;
		String[] EXPECTED = {&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;,&quot;F&quot;,&quot;G&quot;,&quot;H&quot;,&quot;I&quot;,&quot;J&quot;,&quot;K&quot;,&quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;S&quot;, &quot;U&quot;, &quot;Z&quot;};&#xD;
		&#xD;
		//add some nodes, NOT in alphabetical order, so we can see sorters efficiency&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F3&quot;, &quot;Z&quot;);&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F9&quot;, &quot;S&quot;);&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F5&quot;, &quot;U&quot;);&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F5&quot;, &quot;M&quot;);&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F1&quot;, &quot;N&quot;);&#xD;
		//order the nodes found in actualWorkLoad alphabetically&#xD;
		actualNodes = stressTest4WorkLoad.getNodesOrderedAlphabetically();&#xD;
		&#xD;
		assertTrue(Arrays.equals(EXPECTED, actualNodes), &#xD;
				&quot;An array containg all nodes found in actualWorkLoad ordered alphabetically&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXYyumEeyJjNOKZ7e9aA" name="testGetFlowNamesOnce" specification="_dN1S8iumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_FLOW_NAMES = &quot;[F1, F5, F2, F4, F3, F6, F7, F8, F9, F10]&quot;;&#xD;
		//Actual flow names using getFlowNames&#xD;
		String actualFlowNames = Arrays.toString(stressTest4WorkLoad.getFlowNames());&#xD;
		//Compare expected with actual&#xD;
		assertEquals(EXPECTED_FLOW_NAMES, actualFlowNames,&#xD;
				&quot;Get flow names once for stressTest4.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXZCumEeyJjNOKZ7e9aA" name="testGetFlowNamesAlphanumeric" specification="_dN1S9iumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_FLOW_NAMES = &quot;[F1A, F1B]&quot;;&#xD;
		//Actual flow names using getFlowNames&#xD;
		String actualFlowNames = Arrays.toString(test1WorkLoad.getFlowNames());&#xD;
		//Compare expected with actual&#xD;
		assertEquals(EXPECTED_FLOW_NAMES, actualFlowNames,&#xD;
				&quot;Get flow names once for alphanumeric workload of Test1.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXZSumEeyJjNOKZ7e9aA" name="testGetFlowNamesOverwrite" specification="_dN1S-iumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_FLOW_NAMES = &quot;[F1, F5, F2, F4, F3, F6, F7, F8, F9, F10]&quot;;&#xD;
		//Actual flow names using getFlowNames multiple times&#xD;
		String actualFlowNames = Arrays.toString(stressTest4WorkLoad.getFlowNames());&#xD;
		//Overwrite itself using same method again&#xD;
		actualFlowNames = Arrays.toString(stressTest4WorkLoad.getFlowNames());&#xD;
		//Compare expected with actual&#xD;
		assertEquals(EXPECTED_FLOW_NAMES, actualFlowNames,&#xD;
				&quot;Get flow names of stressTest4.txt after already getting them once&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXZiumEeyJjNOKZ7e9aA" name="testGetFlowNamesLargeAlphanumeric" specification="_dN1S_iumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_FLOW_NAMES = &quot;[F1A, F1B, F2A, F2B, F3A, F3B, F4A, F4B, F5A, F5B, F6A, F6B, F7A, F7B, &quot;&#xD;
				+ &quot;F8A, F8B, F9A, F9B, F10A, F10B, F11A, F11B, F12A, F12B, F13A, F13B, F14A, F14B, F15A, F15B, &quot;&#xD;
				+ &quot;F16A, F16B, F17A, F17B, F18A, F18B, F19A, F19B, F20A, F20B, F21A, F21B, F22A, F22B, F23A, F23B, &quot;&#xD;
				+ &quot;F24A, F24B, F25A, F25B, F26A, F26B, F27A, F27B, F28A, F28B, F29A, F29B, F30A, F30B]&quot;;&#xD;
		//Actual flow names using getFlowNames&#xD;
		String actualFlowNames = Arrays.toString(seeSprayWorkLoad.getFlowNames());&#xD;
		//Compare expected with actual&#xD;
		assertEquals(EXPECTED_FLOW_NAMES, actualFlowNames,&#xD;
				&quot;Get flow names once for large alphanumeric workload of SeeSpray.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXZyumEeyJjNOKZ7e9aA" name="testGetNodeIndex" specification="_dN16AyumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer[] ACTUAL_INDEX = {3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11};&#xD;
		//For this test, I'm sorting nodes found in actualWorkLoad alphabetically&#xD;
		String[] nodesInDoc = stressTest4WorkLoad.getNodesOrderedAlphabetically();&#xD;
		//I'm then putting it's corresponding index into an Integer array&#xD;
		Integer[] nodeIndexes = new Integer[nodesInDoc.length];&#xD;
	&#xD;
		for(int i = 0; i &lt; nodesInDoc.length; i++) {&#xD;
			//putting letters corresponding index into nodeIndexes&#xD;
			nodeIndexes[i] = stressTest4WorkLoad.getNodeIndex(nodesInDoc[i]);&#xD;
		}&#xD;
		&#xD;
		//check if the arrays are equal&#xD;
		assertTrue(Arrays.equals(nodeIndexes, ACTUAL_INDEX), &#xD;
				&quot;An array containg the indexes of nodes, corresponding to the name of the &quot;&#xD;
				+ &quot;Node in alphabetical order&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXaCumEeyJjNOKZ7e9aA" name="testGetNodeIndexExisting" specification="_dN16ByumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer[] ACTUAL_INDEXES = {3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11};&#xD;
		//For this test, I'm sorting nodes found in actualWorkLoad alphabetically&#xD;
		String[] nodesInDoc = stressTest4WorkLoad.getNodesOrderedAlphabetically();&#xD;
		//I'm then putting it's corresponding index into an Integer array&#xD;
		Integer[] nodeIndexes = new Integer[nodesInDoc.length];&#xD;
		&#xD;
		/* adding an already existing node, index should remain the same,&#xD;
		 * for this example adding A who's index should remain 3*/&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F1&quot;, &quot;A&quot;); //flow F1 does not have a node A&#xD;
		&#xD;
		for(int i = 0; i &lt; nodesInDoc.length; i++) {&#xD;
			//putting letters corresponding index into nodeIndexes&#xD;
			nodeIndexes[i] = stressTest4WorkLoad.getNodeIndex(nodesInDoc[i]);&#xD;
		}&#xD;
		&#xD;
		&#xD;
		//check if the arrays are equal&#xD;
		assertTrue(Arrays.equals(nodeIndexes, ACTUAL_INDEXES), &#xD;
				&quot;An array containg the indexes of nodes, corresponding to the name of the &quot;&#xD;
				+ &quot;Node in alphabetical order&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvXaSumEeyJjNOKZ7e9aA" name="testGetNodeIndexAddNodes" specification="_dN16CyumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer[] ACTUAL_INDEXES = {3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 13, 15, 12};&#xD;
		String[] nodesInDoc;&#xD;
		Integer[] nodeIndexes;&#xD;
		&#xD;
		//Going to add some nodes to make sure indexes increment correctly&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F5&quot;, &quot;Z&quot;);&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F3&quot;, &quot;S&quot;);&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F9&quot;, &quot;M&quot;);&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F2&quot;, &quot;X&quot;);&#xD;
						&#xD;
		//For this test, I'm sorting nodes found in actualWorkLoad alphabetically&#xD;
		nodesInDoc = stressTest4WorkLoad.getNodesOrderedAlphabetically();&#xD;
		//I'm then putting it's corresponding index into an Integer array&#xD;
		nodeIndexes = new Integer[nodesInDoc.length];&#xD;
		&#xD;
		for(int i = 0; i &lt; nodesInDoc.length; i++) {&#xD;
			//putting letters corresponding index into nodeIndexes&#xD;
			nodeIndexes[i] = stressTest4WorkLoad.getNodeIndex(nodesInDoc[i]);&#xD;
		}&#xD;
		&#xD;
		&#xD;
		//check if the arrays are equal&#xD;
		assertTrue(Arrays.equals(nodeIndexes, ACTUAL_INDEXES), &#xD;
				&quot;An array containg the indexes of nodes, corresponding to the name of the &quot;&#xD;
				+ &quot;Node in alphabetical order&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWv-YCumEeyJjNOKZ7e9aA" name="testGetNodesInFlowOnce" specification="_dN2hEyumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_NODES = &quot;[A, B, C, D, E]&quot;;&#xD;
		//Actual nodes in flow 'F5' of stressTest4.txt&#xD;
		String actualNodes = Arrays.toString(stressTest4WorkLoad.getNodesInFlow(&quot;F5&quot;));&#xD;
		//Compare actual with expected&#xD;
		assertEquals(EXPECTED_NODES, actualNodes,&#xD;
				&quot;Get nodes in flow F5 of stressTest4.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWv-YSumEeyJjNOKZ7e9aA" name="testGetNodesInFlowMultiple" specification="_dN2hFyumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_NODES_F1 = &quot;[B, C, D]&quot;;&#xD;
		String EXPECTED_NODES_F2 = &quot;[C, D, E, F, G, H, I]&quot;;&#xD;
		String EXPECTED_NODES_F5 = &quot;[A, B, C, D, E]&quot;;&#xD;
		//Actual nodes in flow 'F1' of stressTest4.txt&#xD;
		String actualNodesF1 = Arrays.toString(stressTest4WorkLoad.getNodesInFlow(&quot;F1&quot;));&#xD;
		//Actual nodes in flow 'F2' of stressTest4.txt&#xD;
		String actualNodesF2 = Arrays.toString(stressTest4WorkLoad.getNodesInFlow(&quot;F2&quot;));&#xD;
		//Actual nodes in flow 'F5' of stressTest4.txt&#xD;
		String actualNodesF5 = Arrays.toString(stressTest4WorkLoad.getNodesInFlow(&quot;F5&quot;));&#xD;
		//Use arrays to compare all results at once&#xD;
		String [] expectedNodesArray = {EXPECTED_NODES_F1, EXPECTED_NODES_F2, EXPECTED_NODES_F5};&#xD;
		String [] actualNodesArray = {actualNodesF1, actualNodesF2, actualNodesF5};&#xD;
		//Convert arrays to strings&#xD;
		String expectedNodes = Arrays.toString(expectedNodesArray);&#xD;
		String actualNodes = Arrays.toString(actualNodesArray);&#xD;
		//Compare actual with expected&#xD;
		assertEquals(expectedNodes, actualNodes.toString(),&#xD;
				&quot;Get nodes in flows F1, F2, and F5 of stressTest4.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWv-YiumEeyJjNOKZ7e9aA" name="testGetHyperPeriod" specification="_dN2hGyumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_HYPERPERIOD = 300;&#xD;
		Integer actualHyperPeriod;&#xD;
		//hyperPeriod just means the LCM of all the distinct periods//&#xD;
		//for this workLoad we should get a hyper period of 300 --> the LCM of (20, 75, 50, 100)&#xD;
		actualHyperPeriod = stressTest4WorkLoad.getHyperPeriod();&#xD;
		&#xD;
		assertEquals(EXPECTED_HYPERPERIOD, actualHyperPeriod, &quot;actualWorkLoad's hyperPeriod returned&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWv-YyumEeyJjNOKZ7e9aA" name="testGetHyperPeriodAddFlow" specification="_dN3IICumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_HYPERPERIOD = 2100;&#xD;
		Integer actualHyperPeriod;&#xD;
		//now we are going to add a flow and set its period&#xD;
		stressTest4WorkLoad.addFlow(&quot;F13&quot;);&#xD;
		stressTest4WorkLoad.setFlowPeriod(&quot;F13&quot;, 35);&#xD;
		//our new expectedHyperPeriod should be 2100 -> LCM of (20, 75, 50, 100, 35)&#xD;
		actualHyperPeriod = stressTest4WorkLoad.getHyperPeriod();&#xD;
		&#xD;
		assertEquals(EXPECTED_HYPERPERIOD, actualHyperPeriod, &#xD;
				&quot;hyperPeriod returned should reflect the addition of a new flow, 'F13'&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWv-ZCumEeyJjNOKZ7e9aA" name="testGetHyperPeriodNoSpecifiedPeriods" specification="_dN3IJCumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>WorkLoad actualWorkLoad = new WorkLoad(3.0, 2.0, &quot;Example2.txt&quot;);&#xD;
		//when flow periods not specified all periods default to 100, making LCM of all periods 100&#xD;
		Integer expectedHyperPeriod = 100;&#xD;
		Integer actualHyperPeriod = actualWorkLoad.getHyperPeriod();&#xD;
		&#xD;
		assertEquals(expectedHyperPeriod, actualHyperPeriod, &#xD;
				&quot;hyperPeriod of a WorkLoad who's flows do not explicityly have periods listed&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWv-ZSumEeyJjNOKZ7e9aA" name="testGetTotalCommunicationCostOnce" specification="_dN3IKCumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_COMMUNICATION_COST = 2;&#xD;
		//Get actual communication cost&#xD;
		Integer actualTotalCommunicationCost = stressTest4WorkLoad.getTotalCommunicationCost(&quot;F1&quot;);&#xD;
		//Compare actual communication cost of flow 'F1' with expected&#xD;
		assertEquals(EXPECTED_COMMUNICATION_COST, actualTotalCommunicationCost,&#xD;
				&quot;Get flow F1's total communication cost in stressTest4.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWv-ZiumEeyJjNOKZ7e9aA" name="testGetTotalCommunicationCostAlphanumeric" specification="_dN3ILCumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_COMMUNICATION_COST = 1;&#xD;
		//Get actual communication cost of flow 'F1A'&#xD;
		Integer actualTotalCommunicationCost = test1WorkLoad.getTotalCommunicationCost(&quot;F1A&quot;);&#xD;
		//Compare actual communication cost of flow 'F1' with expected&#xD;
		assertEquals(EXPECTED_COMMUNICATION_COST, actualTotalCommunicationCost,&#xD;
				&quot;Get flow F1A's total communication cost from alphanumeric workload of Test1.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWv-ZyumEeyJjNOKZ7e9aA" name="testGetTotalCommunicationCostMultiple" specification="_dN3vMyumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_COMMUNICATION_COST_F1 = 2;&#xD;
		//Expected communication cost of flow 'F2' should be 6&#xD;
		Integer EXPECTED_COMMUNICATION_COST_F2 = 6;&#xD;
		//Expected communication cost of flow 'F3' should be 5&#xD;
		Integer EXPECTED_COMMUNICATION_COST_F3 = 5;&#xD;
		//Put expected results in array&#xD;
		Integer [] expectedTotalCommunicationCostArray = {EXPECTED_COMMUNICATION_COST_F1,&#xD;
				EXPECTED_COMMUNICATION_COST_F2, EXPECTED_COMMUNICATION_COST_F3};&#xD;
		//Put actual results in array&#xD;
		Integer [] actualTotalCommunicationCostArray = {stressTest4WorkLoad.getTotalCommunicationCost(&quot;F1&quot;),&#xD;
				stressTest4WorkLoad.getTotalCommunicationCost(&quot;F2&quot;), stressTest4WorkLoad.getTotalCommunicationCost(&quot;F3&quot;)};&#xD;
		//Convert arrays to strings&#xD;
		String expectedTotalCommunicationCost = Arrays.toString(expectedTotalCommunicationCostArray);&#xD;
		String actualTotalCommunicationCost = Arrays.toString(actualTotalCommunicationCostArray);&#xD;
		//Compare actual communication cost of flows 'F1', 'F2', and 'F3' with expected&#xD;
		assertEquals(expectedTotalCommunicationCost, actualTotalCommunicationCost,&#xD;
				&quot;Get flows F1, F2, and F3's total communication cost from stressTest4.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWv-aCumEeyJjNOKZ7e9aA" name="testGetLinkCommunicationCosts" specification="_dN3vNyumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer[] EXPECTED_COSTS = {1, 1, 0};&#xD;
		Integer[] linkCosts;&#xD;
		/* In linkCommunicationCosts each node has a cost depending on how many other &#xD;
		 * nodes it communicates with. It's expected that each node in the flow will &#xD;
		 * have a cost of 1, EXCEPT for the last one who's cost is 0, because it doesn't&#xD;
		 * communicate with anyone, all these values are stored in an array*/&#xD;
		//so F1's array should look like [1,1,0] b/c it has three total nodes in it's flow&#xD;
		linkCosts = stressTest4WorkLoad.getLinkCommunicationCosts(&quot;F1&quot;);&#xD;
		&#xD;
		assertTrue(Arrays.equals(EXPECTED_COSTS, linkCosts), &#xD;
				&quot;LinkCommunicationCost of flow, 'F1' returned&quot;);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWv-aSumEeyJjNOKZ7e9aA" name="testGetLinkCommunicationCostsOneNode" specification="_dN3vOyumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer[] EXPECTED_COSTS = {};&#xD;
		Integer[] linkCosts;&#xD;
		//add flow&#xD;
		stressTest4WorkLoad.addFlow(&quot;F17&quot;);&#xD;
		//add one node to that flow&#xD;
		stressTest4WorkLoad.addNodeToFlow(&quot;F17&quot;, &quot;A&quot;);&#xD;
		//with one node that doesn't communicate to any other node the array should be empty --> I believe&#xD;
		linkCosts = stressTest4WorkLoad.getLinkCommunicationCosts(&quot;F17&quot;);&#xD;
		&#xD;
		assertTrue(Arrays.equals(EXPECTED_COSTS, linkCosts), &#xD;
				&quot;LinkCommunicationCost of flow, 'F17' returned&quot;);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWv-aiumEeyJjNOKZ7e9aA" name="testMaxFlowLengthOnce" specification="_dN4WQSumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_MAX_FLOW_LENGTH = 8;&#xD;
		//Find actual using function&#xD;
		Integer actualMaxFlowLength = stressTest4WorkLoad.maxFlowLength();&#xD;
		//Compare expected with actual&#xD;
		assertEquals(EXPECTED_MAX_FLOW_LENGTH, actualMaxFlowLength,&#xD;
				&quot;Max flow length of a workload of stressTest4.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWv-ayumEeyJjNOKZ7e9aA" name="testMaxFlowLengthOverwrite" specification="_dN4WRSumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_MAX_FLOW_LENGTH = 8;&#xD;
		//Find actual using function twice, see if it changes anything&#xD;
		Integer actualMaxFlowLength = stressTest4WorkLoad.maxFlowLength();&#xD;
		//Overwrite itself using method again&#xD;
		actualMaxFlowLength = stressTest4WorkLoad.maxFlowLength();&#xD;
		//Compare expected with actual&#xD;
		assertEquals(EXPECTED_MAX_FLOW_LENGTH, actualMaxFlowLength,&#xD;
				&quot;Max flow length of a workload of stressTest4.txt using the method twice&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWv-bCumEeyJjNOKZ7e9aA" name="testMaxFlowLengthAlphanumeric" specification="_dN4WSSumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_MAX_FLOW_LENGTH = 2;&#xD;
		//Find actual using function twice, see if it changes anything&#xD;
		Integer actualMaxFlowLength = test1WorkLoad.maxFlowLength();&#xD;
		//Compare expected with actual&#xD;
		assertEquals(EXPECTED_MAX_FLOW_LENGTH, actualMaxFlowLength,&#xD;
				&quot;Max flow length of a workload of Test1.txt with alphanumeric flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWv-bSumEeyJjNOKZ7e9aA" name="testMaxFlowLengthLargeAlphanumeric" specification="_dN49UyumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_MAX_FLOW_LENGTH = 2;&#xD;
		//Find actual max flow length&#xD;
		Integer actualMaxFlowLength = seeSprayWorkLoad.maxFlowLength();&#xD;
		//Compare expected with actual&#xD;
		assertEquals(EXPECTED_MAX_FLOW_LENGTH, actualMaxFlowLength,&#xD;
				&quot;Max flow length of a workload of SeeSpray.txt with a large number of flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dNvzYCumEeyJjNOKZ7e9aA" name="setUp" method="_dWuwUiumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNwaciumEeyJjNOKZ7e9aA" name="testAddFlow" visibility="package" method="_dWuwUyumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNwadiumEeyJjNOKZ7e9aA" name="testAddFlowMultiple" visibility="package" method="_dWuwVCumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNxBgiumEeyJjNOKZ7e9aA" name="testAddNodeToFlowOnce" visibility="package" method="_dWuwVSumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNxBhiumEeyJjNOKZ7e9aA" name="testAddNodeToFlowMultiple" visibility="package" method="_dWuwViumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNxokCumEeyJjNOKZ7e9aA" name="testAddNodeToFlowAlphanumeric" visibility="package" method="_dWuwVyumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNxolCumEeyJjNOKZ7e9aA" name="testGetFlowPriorityStringString" visibility="package" method="_dWuwWCumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNxomCumEeyJjNOKZ7e9aA" name="testGetFlowPriorityAddedNode" visibility="package" method="_dWvXUCumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNxonCumEeyJjNOKZ7e9aA" name="testGetFlowPriorityString" visibility="package" method="_dWvXUSumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNyPoyumEeyJjNOKZ7e9aA" name="testGetFlowPriorityStringAddedFlow" visibility="package" method="_dWvXUiumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNyPpyumEeyJjNOKZ7e9aA" name="testSetFlowPriority" visibility="package" method="_dWvXUyumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNyPqyumEeyJjNOKZ7e9aA" name="testSetFlowDeadlineOnce" visibility="package" method="_dWvXVCumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNy2siumEeyJjNOKZ7e9aA" name="testSetFlowDeadlineOverwrite" visibility="package" method="_dWvXVSumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNy2tiumEeyJjNOKZ7e9aA" name="testSetFlowDeadlineAlphanumeric" visibility="package" method="_dWvXViumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNy2uiumEeyJjNOKZ7e9aA" name="testGetFlowDeadlineOnce" visibility="package" method="_dWvXVyumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNy2viumEeyJjNOKZ7e9aA" name="testGetFlowDeadlineOnceAlphanumeric" visibility="package" method="_dWvXWCumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNzdwyumEeyJjNOKZ7e9aA" name="testGetFlowDeadlineMultiple" visibility="package" method="_dWvXWSumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNzdxCumEeyJjNOKZ7e9aA" name="testGetFlowTxPerLink" visibility="package" method="_dWvXWiumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNzdyCumEeyJjNOKZ7e9aA" name="testGetFlowTxPerLinkNewFlowNoNodes" visibility="package" method="_dWvXWyumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dNzdzCumEeyJjNOKZ7e9aA" name="testSetFlowsInRMorderOnce" visibility="package" method="_dWvXXCumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN0E0yumEeyJjNOKZ7e9aA" name="testSetFlowsInRMorderOverwrite" visibility="package" method="_dWvXXSumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN0E1yumEeyJjNOKZ7e9aA" name="testSetFlowsInRMorderMultiple" visibility="package" method="_dWvXXiumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN0E2yumEeyJjNOKZ7e9aA" name="testSetFlowsInRMorderLargeAlphanumeric" visibility="package" method="_dWvXXyumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN0r4yumEeyJjNOKZ7e9aA" name="testGetNodesOrderedAlphabetically" visibility="package" method="_dWvXYCumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN0r5yumEeyJjNOKZ7e9aA" name="testGetNodesOrderedAlphabeticallyAddNumberNode" visibility="package" method="_dWvXYSumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN0r6yumEeyJjNOKZ7e9aA" name="testGetNodesOrderedAlphabeticallyAddNodes" visibility="package" method="_dWvXYiumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN1S8iumEeyJjNOKZ7e9aA" name="testGetFlowNamesOnce" visibility="package" method="_dWvXYyumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN1S9iumEeyJjNOKZ7e9aA" name="testGetFlowNamesAlphanumeric" visibility="package" method="_dWvXZCumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN1S-iumEeyJjNOKZ7e9aA" name="testGetFlowNamesOverwrite" visibility="package" method="_dWvXZSumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN1S_iumEeyJjNOKZ7e9aA" name="testGetFlowNamesLargeAlphanumeric" visibility="package" method="_dWvXZiumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN16AyumEeyJjNOKZ7e9aA" name="testGetNodeIndex" visibility="package" method="_dWvXZyumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN16ByumEeyJjNOKZ7e9aA" name="testGetNodeIndexExisting" visibility="package" method="_dWvXaCumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN16CyumEeyJjNOKZ7e9aA" name="testGetNodeIndexAddNodes" visibility="package" method="_dWvXaSumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN2hEyumEeyJjNOKZ7e9aA" name="testGetNodesInFlowOnce" visibility="package" method="_dWv-YCumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN2hFyumEeyJjNOKZ7e9aA" name="testGetNodesInFlowMultiple" visibility="package" method="_dWv-YSumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN2hGyumEeyJjNOKZ7e9aA" name="testGetHyperPeriod" visibility="package" method="_dWv-YiumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN3IICumEeyJjNOKZ7e9aA" name="testGetHyperPeriodAddFlow" visibility="package" method="_dWv-YyumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN3IJCumEeyJjNOKZ7e9aA" name="testGetHyperPeriodNoSpecifiedPeriods" visibility="package" method="_dWv-ZCumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN3IKCumEeyJjNOKZ7e9aA" name="testGetTotalCommunicationCostOnce" visibility="package" method="_dWv-ZSumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN3ILCumEeyJjNOKZ7e9aA" name="testGetTotalCommunicationCostAlphanumeric" visibility="package" method="_dWv-ZiumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN3vMyumEeyJjNOKZ7e9aA" name="testGetTotalCommunicationCostMultiple" visibility="package" method="_dWv-ZyumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN3vNyumEeyJjNOKZ7e9aA" name="testGetLinkCommunicationCosts" visibility="package" method="_dWv-aCumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN3vOyumEeyJjNOKZ7e9aA" name="testGetLinkCommunicationCostsOneNode" visibility="package" method="_dWv-aSumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN4WQSumEeyJjNOKZ7e9aA" name="testMaxFlowLengthOnce" visibility="package" method="_dWv-aiumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN4WRSumEeyJjNOKZ7e9aA" name="testMaxFlowLengthOverwrite" visibility="package" method="_dWv-ayumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN4WSSumEeyJjNOKZ7e9aA" name="testMaxFlowLengthAlphanumeric" visibility="package" method="_dWv-bCumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN49UyumEeyJjNOKZ7e9aA" name="testMaxFlowLengthLargeAlphanumeric" visibility="package" method="_dWv-bSumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dN6LcCumEeyJjNOKZ7e9aA" name="WorkLoad">
              <ownedComment xmi:id="_q14Q5zd2EeykP74baAFnvg">
                <body>WorkLoad creates an object, given an input file, containing information that will be&#xD;
used to measure the graphs efficiency.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dU9OpyumEeyJjNOKZ7e9aA" general="_dNrh8CumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWUgkCumEeyJjNOKZ7e9aA" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWUgkSumEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWUgkiumEeyJjNOKZ7e9aA" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWUgkyumEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWUglCumEeyJjNOKZ7e9aA" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWUglSumEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWUgliumEeyJjNOKZ7e9aA" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWUglyumEeyJjNOKZ7e9aA" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWUgmCumEeyJjNOKZ7e9aA" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWUgmSumEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWVHoCumEeyJjNOKZ7e9aA" name="minPacketReceptionRate" type="_dVbIsCumEeyJjNOKZ7e9aA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWVHoSumEeyJjNOKZ7e9aA" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWVHoiumEeyJjNOKZ7e9aA" name="e2e" visibility="private" type="_dVbIsCumEeyJjNOKZ7e9aA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWVHoyumEeyJjNOKZ7e9aA" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWVHpSumEeyJjNOKZ7e9aA" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWVHpiumEeyJjNOKZ7e9aA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWVHpyumEeyJjNOKZ7e9aA" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWVHqCumEeyJjNOKZ7e9aA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWVusCumEeyJjNOKZ7e9aA" name="flows" type="_dMdZ8CumEeyJjNOKZ7e9aA" association="_dW5vYSumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWVusSumEeyJjNOKZ7e9aA" name="nodes" type="_dMoZECumEeyJjNOKZ7e9aA" association="_dW5vYyumEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_dWVusiumEeyJjNOKZ7e9aA" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWVutCumEeyJjNOKZ7e9aA" name="flowNamesInOriginalOrder" type="_dT-XMCumEeyJjNOKZ7e9aA" association="_dXQ7xyumEeyJjNOKZ7e9aA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWVutiumEeyJjNOKZ7e9aA" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dWWVwCumEeyJjNOKZ7e9aA" name="flowNamesInPriorityOrder" type="_dT-XMCumEeyJjNOKZ7e9aA" association="_dXRi0SumEeyJjNOKZ7e9aA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dWWVwiumEeyJjNOKZ7e9aA" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_dU8nkCumEeyJjNOKZ7e9aA" client="_dN6LcCumEeyJjNOKZ7e9aA" supplier="_dM9wQyumEeyJjNOKZ7e9aA" contract="_dM9wQyumEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWwlcCumEeyJjNOKZ7e9aA" name="WorkLoad" specification="_dVpyMCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWwlcSumEeyJjNOKZ7e9aA" name="m" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWwlciumEeyJjNOKZ7e9aA" name="e2e" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWwlcyumEeyJjNOKZ7e9aA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWwldCumEeyJjNOKZ7e9aA" type="_dN6LcCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWwldSumEeyJjNOKZ7e9aA" name="WorkLoad" specification="_dVqZQCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWwldiumEeyJjNOKZ7e9aA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWwldyumEeyJjNOKZ7e9aA" name="m" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWwleCumEeyJjNOKZ7e9aA" name="e2e" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dWwleSumEeyJjNOKZ7e9aA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWwleiumEeyJjNOKZ7e9aA" type="_dN6LcCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWwleyumEeyJjNOKZ7e9aA" name="setDefaultParameters" specification="_dN7ZkCumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWwlfCumEeyJjNOKZ7e9aA" name="getE2e" specification="_dN7ZkSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWwlfSumEeyJjNOKZ7e9aA" type="_dVbIsCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWwlfiumEeyJjNOKZ7e9aA" name="getIntForFlowNames" specification="_dN7ZkiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWwlfyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWwlgCumEeyJjNOKZ7e9aA" name="getName" specification="_dN7ZlCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWwlgSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWwlgiumEeyJjNOKZ7e9aA" name="setMinPacketReceptionRate" specification="_dVqZSSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWwlgyumEeyJjNOKZ7e9aA" name="minPacketReceptionRate" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWwlhCumEeyJjNOKZ7e9aA" name="getMaxPhase" specification="_dN8AoCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWwlhSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWwlhiumEeyJjNOKZ7e9aA" name="getMinPeriod" specification="_dN8AoiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWwlhyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWwliCumEeyJjNOKZ7e9aA" name="setE2e" specification="_dVqZSyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWwliSumEeyJjNOKZ7e9aA" name="e2e" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWwliiumEeyJjNOKZ7e9aA" name="setIntForFlowNames" specification="_dN8ApCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWwliyumEeyJjNOKZ7e9aA" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWwljCumEeyJjNOKZ7e9aA" name="setName" specification="_dN8ApiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWwljSumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWwljiumEeyJjNOKZ7e9aA" name="setNodeChannel" specification="_dN8AqCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWwljyumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWwlkCumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWwlkSumEeyJjNOKZ7e9aA" name="getNodeChannel" specification="_dN8nsCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWwlkiumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWwlkyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWwllCumEeyJjNOKZ7e9aA" name="addFlow" specification="_dN8nsyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWwllSumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWwlliumEeyJjNOKZ7e9aA" name="isIntForNodeNames" specification="_dN8ntSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWwllyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWwlmCumEeyJjNOKZ7e9aA" name="isIntForFlowNames" specification="_dN8ntyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWwlmSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxMgCumEeyJjNOKZ7e9aA" name="addNodeToFlow" specification="_dN8nuSumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxMgSumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWxMgiumEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxMgyumEeyJjNOKZ7e9aA" name="getFlowPriority" specification="_dN9OwCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxMhCumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWxMhSumEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWxMhiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxMhyumEeyJjNOKZ7e9aA" name="setFlowPriority" specification="_dN9OxCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxMiCumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWxMiSumEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxMiiumEeyJjNOKZ7e9aA" name="setFlowPeriod" specification="_dN9OxyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxMiyumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWxMjCumEeyJjNOKZ7e9aA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxMjSumEeyJjNOKZ7e9aA" name="setFlowDeadline" specification="_dN9OyiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxMjiumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWxMjyumEeyJjNOKZ7e9aA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxMkCumEeyJjNOKZ7e9aA" name="setFlowPhase" specification="_dN910CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxMkSumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWxMkiumEeyJjNOKZ7e9aA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxMkyumEeyJjNOKZ7e9aA" name="getFlowIndex" specification="_dN910yumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxMlCumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWxMlSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxMliumEeyJjNOKZ7e9aA" name="getFlowPriority" specification="_dN911iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxMlyumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWxMmCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxMmSumEeyJjNOKZ7e9aA" name="getFlowPeriod" specification="_dN912SumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxMmiumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWxMmyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxMnCumEeyJjNOKZ7e9aA" name="getFlowDeadline" specification="_dN-c4CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxMnSumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWxMniumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxMnyumEeyJjNOKZ7e9aA" name="getFlowPhase" specification="_dN-c4yumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxMoCumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWxMoSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxMoiumEeyJjNOKZ7e9aA" name="getFlowTxPerLink" specification="_dN-c5iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxMoyumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWxMpCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxMpSumEeyJjNOKZ7e9aA" name="setFlowsInPriorityOrder" specification="_dN-c6SumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxMpiumEeyJjNOKZ7e9aA" name="setFlowsInDMorder" specification="_dN-c6iumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxMpyumEeyJjNOKZ7e9aA" name="setFlowsInRMorder" specification="_dN-c6yumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxMqCumEeyJjNOKZ7e9aA" name="setFlowsInRealTimeHARTorder" specification="_dN-c7CumEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxMqSumEeyJjNOKZ7e9aA" name="finalizeCurrentFlow" specification="_dN_D8CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxMqiumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxzkCumEeyJjNOKZ7e9aA" name="finalizeFlowWithE2eParameters" specification="_dN_D8iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxzkSumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
	    var m = minPacketReceptionRate; // shorten the name :-)&#xD;
	    if (flowNode != null) {&#xD;
	      var nodes = flowNode.nodes;&#xD;
	      int nHops = nodes.size();&#xD;
	      if (nHops &lt; 1) {&#xD;
	        /*&#xD;
	         * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
	         * -1 at end&#xD;
	         */&#xD;
	        nHops = 2;&#xD;
	      }&#xD;
	      Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
	                        // and when m == 1.0&#xD;
	      if (m &lt; 1.0) {&#xD;
	        /*&#xD;
	         * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
	         * txs per hop&#xD;
	         */&#xD;
	        nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
	      }&#xD;
	      /* set numTxPerLink based on M, E2E, and flow length */&#xD;
	      flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
	      /* Now compute nTx per link to reach E2E requirement. */&#xD;
	      ReliabilityAnalysis linkTxAndTotalCost = new ReliabilityAnalysis(e2e, m);&#xD;
	      ArrayList&lt;Integer> refactoredResult = linkTxAndTotalCost.numTxPerLinkAndTotalCost(flowNode);&#xD;
	      //ArrayList&lt;Integer> linkTxAndTotalCost = nTxPerLinkAndTotalTxCost(flowNode, e2e, m, true);&#xD;
	      flowNode.linkTxAndTotalCost = refactoredResult;&#xD;
	      flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
	    } else { // should never happen...&#xD;
	      System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
	          + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
	    }&#xD;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxzkiumEeyJjNOKZ7e9aA" name="finalizeFlowWithFixedFaultTolerance" specification="_dN_D9CumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxzkyumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
	    if (flowNode != null) {&#xD;
	      /* set numTxPerLink based on M, E2E, and flow length */&#xD;
	      flowNode.numTxPerLink = numFaults + 1;&#xD;
	      /* Now compute nTx per link to reach E2E requirement. */&#xD;
	      ReliabilityAnalysis linkTxAndTotalCost = new ReliabilityAnalysis(numFaults);&#xD;
	      ArrayList&lt;Integer> refactoredResult = linkTxAndTotalCost.numTxPerLinkAndTotalCost(flowNode);&#xD;
	      //ArrayList&lt;Integer> linkTxAndTotalCost = getFixedPerLinkAndTotalTxCost(flowNode);&#xD;
	      flowNode.linkTxAndTotalCost = refactoredResult;&#xD;
	      flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
	    } else { // should never happen...&#xD;
	      System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
	          + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
	    }&#xD;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxznSumEeyJjNOKZ7e9aA" name="getNodesOrderedAlphabetically" specification="_dN_D9iumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxzniumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWxznyumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxzoCumEeyJjNOKZ7e9aA" name="getFlow" specification="_dN_rASumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxzoSumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWxzoiumEeyJjNOKZ7e9aA" type="_dMZIgCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxzoyumEeyJjNOKZ7e9aA" name="getFlowNames" specification="_dN_rAyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxzpCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWxzpSumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxzpiumEeyJjNOKZ7e9aA" name="getNodeIndex" specification="_dOASECumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxzpyumEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWxzqCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxzqSumEeyJjNOKZ7e9aA" name="getNodesInFlow" specification="_dOASEyumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxzqiumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWxzqyumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWxzrCumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxzrSumEeyJjNOKZ7e9aA" name="getHyperPeriod" specification="_dOASGCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxzriumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxzryumEeyJjNOKZ7e9aA" name="getTotalCommunicationCost" specification="_dOASGiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxzsCumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWxzsSumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxzsiumEeyJjNOKZ7e9aA" name="getLinkCommunicationCosts" specification="_dOA5ISumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxzsyumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWxztCumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWxztSumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); /* remove the last element, because that is the sum of&#xD;
                                         others */&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxztiumEeyJjNOKZ7e9aA" name="addEdge" specification="_dU9OpCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxztyumEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWxzuCumEeyJjNOKZ7e9aA" name="edge" type="_dMTB5CumEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWxzuSumEeyJjNOKZ7e9aA" name="maxFlowLength" specification="_dOA5JiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dWxzuiumEeyJjNOKZ7e9aA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dN7ZkCumEeyJjNOKZ7e9aA" name="setDefaultParameters" visibility="private" method="_dWwleyumEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_dN7ZkSumEeyJjNOKZ7e9aA" name="getE2e" method="_dWwlfCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q14Q6jd2EeykP74baAFnvg">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_dVqZSCumEeyJjNOKZ7e9aA" type="_dVbIsCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dN7ZkiumEeyJjNOKZ7e9aA" name="getIntForFlowNames" method="_dWwlfiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q14Q6zd2EeykP74baAFnvg">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN7ZkyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN7ZlCumEeyJjNOKZ7e9aA" name="getName" method="_dWwlgCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q1438Dd2EeykP74baAFnvg">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN7ZlSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN8AoCumEeyJjNOKZ7e9aA" name="getMaxPhase" method="_dWwlhCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q1438jd2EeykP74baAFnvg">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN8AoSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN8AoiumEeyJjNOKZ7e9aA" name="getMinPeriod" method="_dWwlhiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q1438zd2EeykP74baAFnvg">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN8AoyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN8ApCumEeyJjNOKZ7e9aA" name="setIntForFlowNames" method="_dWwliiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q1439Td2EeykP74baAFnvg">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN8ApSumEeyJjNOKZ7e9aA" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN8ApiumEeyJjNOKZ7e9aA" name="setName" method="_dWwljCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q1439jd2EeykP74baAFnvg">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN8ApyumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN8AqCumEeyJjNOKZ7e9aA" name="setNodeChannel" method="_dWwljiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q1439zd2EeykP74baAFnvg">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN8AqSumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dN8AqiumEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN8nsCumEeyJjNOKZ7e9aA" name="getNodeChannel" method="_dWwlkSumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q143-Dd2EeykP74baAFnvg">
                  <body>@param name Name of node&#xD;
   * @return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN8nsSumEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dN8nsiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN8nsyumEeyJjNOKZ7e9aA" name="addFlow" method="_dWwllCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q143-Td2EeykP74baAFnvg">
                  <body>Adds a new flow mode to the Flows dictionary with a new name, index, and priority with the other parameters &#xD;
  * set to default if the flow doesn't have custom parameters&#xD;
  * @param flowName Flow's name</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN8ntCumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN8ntSumEeyJjNOKZ7e9aA" name="isIntForNodeNames" method="_dWwlliumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q143-jd2EeykP74baAFnvg">
                  <body>Checks if all node names are integers&#xD;
   * @return A boolean indicating if all node names are integers or not</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN8ntiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN8ntyumEeyJjNOKZ7e9aA" name="isIntForFlowNames" method="_dWwlmCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q143-zd2EeykP74baAFnvg">
                  <body>Checks if all flow names are integers&#xD;
   * @return A boolean indicating if all flow names are integers or not</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN8nuCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN8nuSumEeyJjNOKZ7e9aA" name="addNodeToFlow" method="_dWxMgCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q143_Dd2EeykP74baAFnvg">
                  <body>Adds an existing node to a map of nodes or creates a node, if the given node is not already in the map of nodes,&#xD;
   * and then adds it to the map, once created, it adds the node to the given flow&#xD;
   * @param flowName Flow's name&#xD;
   * @param nodeName Node's name</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN8nuiumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dN8nuyumEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN9OwCumEeyJjNOKZ7e9aA" name="getFlowPriority" method="_dWxMgyumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q143_Td2EeykP74baAFnvg">
                  <body>Gets the given flow node's priority attribute&#xD;
   * @param flowName Flow's name&#xD;
   * @param nodeName Node's name&#xD;
   * @return An integer representing the priority attribute of the given Flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN9OwSumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dN9OwiumEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dN9OwyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN9OxCumEeyJjNOKZ7e9aA" name="setFlowPriority" method="_dWxMhyumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q143_jd2EeykP74baAFnvg">
                  <body>Set's a given flow node's priority attribute&#xD;
   * @param flowName Flow's name&#xD;
   * @param priority Integer to set the given flow's priority attribute to</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN9OxSumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dN9OxiumEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN9OxyumEeyJjNOKZ7e9aA" name="setFlowPeriod" method="_dWxMiiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q143_zd2EeykP74baAFnvg">
                  <body>Set's a given flow's period attribute to a given integer, denoting the time between&#xD;
   * successive releases of a packet of data from the source node&#xD;
   * @param flowName Flow's name&#xD;
   * @param period Given period attribute to change the given flow's period to</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN9OyCumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dN9OySumEeyJjNOKZ7e9aA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN9OyiumEeyJjNOKZ7e9aA" name="setFlowDeadline" method="_dWxMjSumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q144ADd2EeykP74baAFnvg">
                  <body>Set's a given flow's deadline attribute, which is the amount of time that can elapse&#xD;
   * from the release of a packet and its arrival at the sink node&#xD;
   * @param flowName Flow's name&#xD;
   * @param deadline Amount of time the given flow can have for a deadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN9OyyumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dN9OzCumEeyJjNOKZ7e9aA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN910CumEeyJjNOKZ7e9aA" name="setFlowPhase" method="_dWxMkCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q144ATd2EeykP74baAFnvg">
                  <body>Set a flow's phase&#xD;
   * &#xD;
   * @param flowName Name of flow&#xD;
   * @param phase Given phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN910SumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dN910iumEeyJjNOKZ7e9aA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN910yumEeyJjNOKZ7e9aA" name="getFlowIndex" method="_dWxMkyumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q144Ajd2EeykP74baAFnvg">
                  <body>Gets a flow's index&#xD;
   * &#xD;
   * @param flowName Name of flow&#xD;
   * @return Flow's index</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN911CumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dN911SumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN911iumEeyJjNOKZ7e9aA" name="getFlowPriority" method="_dWxMliumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q144Azd2EeykP74baAFnvg">
                  <body>Gets a flow's priorityn&#xD;
   * &#xD;
   * @param flowName Name of flow&#xD;
   * @return Flow's priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN911yumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dN912CumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN912SumEeyJjNOKZ7e9aA" name="getFlowPeriod" method="_dWxMmSumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q144BDd2EeykP74baAFnvg">
                  <body>Gets a given Flow's period attribute, which is the time between successive releases&#xD;
   * of a packet of data from the source node&#xD;
   * @param flowName Flow's name&#xD;
   * @return An integer representing the given flow's period attribute</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN912iumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dN912yumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN-c4CumEeyJjNOKZ7e9aA" name="getFlowDeadline" method="_dWxMnCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q144BTd2EeykP74baAFnvg">
                  <body>Gets a given Flow's deadline, which is the amount of time that can elapse&#xD;
   * from the release of a packet and its arrival at the sink node&#xD;
   * @param flowName Flow's name&#xD;
   * @return An integer indicating a flow's allotted deadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN-c4SumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dN-c4iumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN-c4yumEeyJjNOKZ7e9aA" name="getFlowPhase" method="_dWxMnyumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q144Bjd2EeykP74baAFnvg">
                  <body>Get's a given flow's phase attribute, which is the time offset from time 0 that the&#xD;
   * first release of data occurs&#xD;
   * @param flowName Flow's name&#xD;
   * @return An integer representing the given flow's phase attribute</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN-c5CumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dN-c5SumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN-c5iumEeyJjNOKZ7e9aA" name="getFlowTxPerLink" method="_dWxMoiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q144Bzd2EeykP74baAFnvg">
                  <body>Get a given flow's number of transmissions per link&#xD;
   * @param flowName Flow's name&#xD;
   * @return An integer representing the given flow's transmissions per link</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN-c5yumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dN-c6CumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN-c6SumEeyJjNOKZ7e9aA" name="setFlowsInPriorityOrder" method="_dWxMpSumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q144CDd2EeykP74baAFnvg">
                  <body>Arranges the flows from FlowMap in priority order.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_dN-c6iumEeyJjNOKZ7e9aA" name="setFlowsInDMorder" method="_dWxMpiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q144CTd2EeykP74baAFnvg">
                  <body>Arranges the flows in FlowMap by deadlines.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_dN-c6yumEeyJjNOKZ7e9aA" name="setFlowsInRMorder" method="_dWxMpyumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q15fADd2EeykP74baAFnvg">
                  <body>Arranges the flows in FlowMap by their periods.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_dN-c7CumEeyJjNOKZ7e9aA" name="setFlowsInRealTimeHARTorder" method="_dWxMqCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q15fATd2EeykP74baAFnvg">
                  <body>Set flows in priority order&#xD;
   *</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_dN_D8CumEeyJjNOKZ7e9aA" name="finalizeCurrentFlow" method="_dWxMqSumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q15fAjd2EeykP74baAFnvg">
                  <body>Finalize current flow&#xD;
   * &#xD;
   * @param flowName Name of flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN_D8SumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN_D8iumEeyJjNOKZ7e9aA" name="finalizeFlowWithE2eParameters" visibility="private" method="_dWxzkCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dN_D8yumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN_D9CumEeyJjNOKZ7e9aA" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_dWxzkiumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dN_D9SumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN_D9iumEeyJjNOKZ7e9aA" name="getNodesOrderedAlphabetically" method="_dWxznSumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q15fAzd2EeykP74baAFnvg">
                  <body>Returns an array of nodes sorted by their names.&#xD;
   * &#xD;
   * @return nodeNames An array of nodes sorted alphabetically</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN_D9yumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dN_D-CumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN_rASumEeyJjNOKZ7e9aA" name="getFlow" visibility="private" method="_dWxzoCumEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_dN_rAiumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dU9OoyumEeyJjNOKZ7e9aA" type="_dMZIgCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dN_rAyumEeyJjNOKZ7e9aA" name="getFlowNames" method="_dWxzoyumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q15fBDd2EeykP74baAFnvg">
                  <body>Public function to return an array of flow names in the order they were read from&#xD;
   * the graph file.&#xD;
   * &#xD;
   * @return flowNamesInOriginalOrder.toArray(new String[0]) An array of strings containing the&#xD;
   * flow names from the graph file.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN_rBCumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dN_rBSumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dOASECumEeyJjNOKZ7e9aA" name="getNodeIndex" method="_dWxzpiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q15fBTd2EeykP74baAFnvg">
                  <body>Public function to return the dictionary of nodes.&#xD;
   * &#xD;
   * @param nodeName A string of the specific node desired. &#xD;
   * @return index The nodes index.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dOASESumEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dOASEiumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dOASEyumEeyJjNOKZ7e9aA" name="getNodesInFlow" method="_dWxzqSumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q15fBjd2EeykP74baAFnvg">
                  <body>Returns an array of nodes in the order that they appear in the flow.&#xD;
   * &#xD;
   * @param flowName A string containing the name of the desired flow.&#xD;
   * @return nodes An array of all the nodes found in that flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dOASFCumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dOASFSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dOASFiumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dOASGCumEeyJjNOKZ7e9aA" name="getHyperPeriod" method="_dWxzrSumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q15fBzd2EeykP74baAFnvg">
                  <body>Updates HyperPeriod the the the current period value.&#xD;
   * &#xD;
   * @return hyperPeriod An Integer that represents the current hyperPeriod.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dOASGSumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dOASGiumEeyJjNOKZ7e9aA" name="getTotalCommunicationCost" method="_dWxzryumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q15fCDd2EeykP74baAFnvg">
                  <body>Returns the total cost of a given flow.&#xD;
   * &#xD;
   * @param flowName A string of the desired flow. &#xD;
   * @return totalCost An integer that represents the total cost of the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dOASGyumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dOA5ICumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dOA5ISumEeyJjNOKZ7e9aA" name="getLinkCommunicationCosts" method="_dWxzsiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q15fCTd2EeykP74baAFnvg">
                  <body>Return an array of the number of transmission needed for each&#xD;
   * link (i.e. edge in the flow graph) to meet E2E target.&#xD;
   *&#xD;
   * @param flowName A string of the desired flow. &#xD;
   * @return linkTxAndTotalCost.toArray(new Integer[0]) An array of Integers&#xD;
   * that contains the total cost of Links within the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dOA5IiumEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dOA5IyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dOA5JCumEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dOA5JiumEeyJjNOKZ7e9aA" name="maxFlowLength" method="_dWxzuSumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q15fCzd2EeykP74baAFnvg">
                  <body>Returns the max length of a flow.&#xD;
   * &#xD;
   * @return maxLength An Integer that represents the max length of the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dOA5JyumEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dU9OpCumEeyJjNOKZ7e9aA" name="addEdge" method="_dWxztiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q15fCjd2EeykP74baAFnvg">
                  <body>Adds an edge connected to the given node.&#xD;
   * &#xD;
   * @param nodeName String of the desired node you wish to add an edge to. &#xD;
   * @param edge The Edge that is being added.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dU9OpSumEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dU9OpiumEeyJjNOKZ7e9aA" name="edge" type="_dMTB5CumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVpyMCumEeyJjNOKZ7e9aA" name="WorkLoad" visibility="package" method="_dWwlcCumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dVpyNCumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dVpyNSumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_q14Q6Dd2EeykP74baAFnvg">
                  <body>Creates a workload with the specified information.&#xD;
   * &#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_dVpyMSumEeyJjNOKZ7e9aA" name="m" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVpyMiumEeyJjNOKZ7e9aA" name="e2e" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVpyMyumEeyJjNOKZ7e9aA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVpyNiumEeyJjNOKZ7e9aA" type="_dN6LcCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVqZQCumEeyJjNOKZ7e9aA" name="WorkLoad" visibility="package" method="_dWwldSumEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_dVqZRSumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dVqZRiumEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_q14Q6Td2EeykP74baAFnvg">
                  <body>Creates a workload with the specified information&#xD;
   * &#xD;
   * @param numFaults&#xD;
   * @param m &#xD;
   * @param e2e &#xD;
   * @param inputFileName&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_dVqZQSumEeyJjNOKZ7e9aA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVqZQiumEeyJjNOKZ7e9aA" name="m" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVqZQyumEeyJjNOKZ7e9aA" name="e2e" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_dVqZRCumEeyJjNOKZ7e9aA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVqZRyumEeyJjNOKZ7e9aA" type="_dN6LcCumEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVqZSSumEeyJjNOKZ7e9aA" name="setMinPacketReceptionRate" method="_dWwlgiumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q1438Td2EeykP74baAFnvg">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dVqZSiumEeyJjNOKZ7e9aA" name="minPacketReceptionRate" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dVqZSyumEeyJjNOKZ7e9aA" name="setE2e" method="_dWwliCumEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_q1439Dd2EeykP74baAFnvg">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dVqZTCumEeyJjNOKZ7e9aA" name="e2e" type="_dVbIsCumEeyJjNOKZ7e9aA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dVNGQiumEeyJjNOKZ7e9aA" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dVXeUCumEeyJjNOKZ7e9aA" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dVZTgiumEeyJjNOKZ7e9aA" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dVidcSumEeyJjNOKZ7e9aA" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dVjEhiumEeyJjNOKZ7e9aA" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_dW1d8CumEeyJjNOKZ7e9aA" name="" memberEnd="_dV1_diumEeyJjNOKZ7e9aA _dW1d8SumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dW1d8SumEeyJjNOKZ7e9aA" name="" type="_dMTB5CumEeyJjNOKZ7e9aA" association="_dW1d8CumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dW3TJCumEeyJjNOKZ7e9aA" name="" memberEnd="_dWEo-CumEeyJjNOKZ7e9aA _dW3TJSumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dW3TJSumEeyJjNOKZ7e9aA" name="" type="_dNCowCumEeyJjNOKZ7e9aA" association="_dW3TJCumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dW5vYSumEeyJjNOKZ7e9aA" name="" memberEnd="_dWVusCumEeyJjNOKZ7e9aA _dW5vYiumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dW5vYiumEeyJjNOKZ7e9aA" name="" type="_dN6LcCumEeyJjNOKZ7e9aA" association="_dW5vYSumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dW5vYyumEeyJjNOKZ7e9aA" name="" memberEnd="_dWVusSumEeyJjNOKZ7e9aA _dW5vZCumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dW5vZCumEeyJjNOKZ7e9aA" name="" type="_dN6LcCumEeyJjNOKZ7e9aA" association="_dW5vYyumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXFVkCumEeyJjNOKZ7e9aA" name="" memberEnd="_dXFVkSumEeyJjNOKZ7e9aA _dVxuACumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXFVkSumEeyJjNOKZ7e9aA" name="" type="_dL_f4CumEeyJjNOKZ7e9aA" association="_dXFVkCumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXF8oSumEeyJjNOKZ7e9aA" name="" memberEnd="_dXF8oiumEeyJjNOKZ7e9aA _dVxuAiumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXF8oiumEeyJjNOKZ7e9aA" name="" type="_dL_f4CumEeyJjNOKZ7e9aA" association="_dXF8oSumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXF8pCumEeyJjNOKZ7e9aA" name="" memberEnd="_dXF8pSumEeyJjNOKZ7e9aA _dVxuBCumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXF8pSumEeyJjNOKZ7e9aA" name="" type="_dL_f4CumEeyJjNOKZ7e9aA" association="_dXF8pCumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXF8pyumEeyJjNOKZ7e9aA" name="" memberEnd="_dXF8qCumEeyJjNOKZ7e9aA _dVy8KCumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXF8qCumEeyJjNOKZ7e9aA" name="" type="_dMICwCumEeyJjNOKZ7e9aA" association="_dXF8pyumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXGjsSumEeyJjNOKZ7e9aA" name="" memberEnd="_dXGjsiumEeyJjNOKZ7e9aA _dVzjNCumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXGjsiumEeyJjNOKZ7e9aA" name="" type="_dMKfACumEeyJjNOKZ7e9aA" association="_dXGjsSumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXGjtCumEeyJjNOKZ7e9aA" name="" memberEnd="_dXGjtSumEeyJjNOKZ7e9aA _dV0KQyumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXGjtSumEeyJjNOKZ7e9aA" name="" type="_dMKfACumEeyJjNOKZ7e9aA" association="_dXGjtCumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXGjtyumEeyJjNOKZ7e9aA" name="" memberEnd="_dXGjuCumEeyJjNOKZ7e9aA _dV0xUyumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXGjuCumEeyJjNOKZ7e9aA" name="" type="_dMOwcCumEeyJjNOKZ7e9aA" association="_dXGjtyumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXGjuiumEeyJjNOKZ7e9aA" name="" memberEnd="_dXGjuyumEeyJjNOKZ7e9aA _dV1YYyumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXGjuyumEeyJjNOKZ7e9aA" name="" type="_dMOwcCumEeyJjNOKZ7e9aA" association="_dXGjuiumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXHKwSumEeyJjNOKZ7e9aA" name="" memberEnd="_dXHKwiumEeyJjNOKZ7e9aA _dV30oyumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXHKwiumEeyJjNOKZ7e9aA" name="" type="_dMZIgCumEeyJjNOKZ7e9aA" association="_dXHKwSumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXHKxCumEeyJjNOKZ7e9aA" name="" memberEnd="_dXHKxSumEeyJjNOKZ7e9aA _dV30piumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXHKxSumEeyJjNOKZ7e9aA" name="" type="_dMZIgCumEeyJjNOKZ7e9aA" association="_dXHKxCumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXHKxyumEeyJjNOKZ7e9aA" name="" memberEnd="_dXHKyCumEeyJjNOKZ7e9aA _dV4bsiumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXHKyCumEeyJjNOKZ7e9aA" name="" type="_dMZIgCumEeyJjNOKZ7e9aA" association="_dXHKxyumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXHx0SumEeyJjNOKZ7e9aA" name="" memberEnd="_dXHx0iumEeyJjNOKZ7e9aA _dV4btSumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXHx0iumEeyJjNOKZ7e9aA" name="" type="_dMZIgCumEeyJjNOKZ7e9aA" association="_dXHx0SumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXHx1CumEeyJjNOKZ7e9aA" name="" memberEnd="_dXHx1SumEeyJjNOKZ7e9aA _dV5CwCumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXHx1SumEeyJjNOKZ7e9aA" name="" type="_dMZIgCumEeyJjNOKZ7e9aA" association="_dXHx1CumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXHx1yumEeyJjNOKZ7e9aA" name="" memberEnd="_dXHx2CumEeyJjNOKZ7e9aA _dV5p2CumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXHx2CumEeyJjNOKZ7e9aA" name="" type="_dMeoECumEeyJjNOKZ7e9aA" association="_dXHx1yumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXIY4CumEeyJjNOKZ7e9aA" name="" memberEnd="_dXIY4SumEeyJjNOKZ7e9aA _dV6Q4yumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXIY4SumEeyJjNOKZ7e9aA" name="" type="_dMeoECumEeyJjNOKZ7e9aA" association="_dXIY4CumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXIY4yumEeyJjNOKZ7e9aA" name="" memberEnd="_dXIY5CumEeyJjNOKZ7e9aA _dV6Q5SumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXIY5CumEeyJjNOKZ7e9aA" name="" type="_dMhEUCumEeyJjNOKZ7e9aA" association="_dXIY4yumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXIY5iumEeyJjNOKZ7e9aA" name="" memberEnd="_dXIY5yumEeyJjNOKZ7e9aA _dV638iumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXIY5yumEeyJjNOKZ7e9aA" name="" type="_dMhrYCumEeyJjNOKZ7e9aA" association="_dXIY5iumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXIY6SumEeyJjNOKZ7e9aA" name="" memberEnd="_dXIY6iumEeyJjNOKZ7e9aA _dV8GEiumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXIY6iumEeyJjNOKZ7e9aA" name="" type="_dMl80SumEeyJjNOKZ7e9aA" association="_dXIY6SumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXI_8SumEeyJjNOKZ7e9aA" name="" memberEnd="_dXI_8iumEeyJjNOKZ7e9aA _dV8tJyumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXI_8iumEeyJjNOKZ7e9aA" name="" type="_dMq1UCumEeyJjNOKZ7e9aA" association="_dXI_8SumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXI_9CumEeyJjNOKZ7e9aA" name="" memberEnd="_dXI_9SumEeyJjNOKZ7e9aA _dV8tKSumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXI_9SumEeyJjNOKZ7e9aA" name="" type="_dMq1UCumEeyJjNOKZ7e9aA" association="_dXI_9CumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXI_9yumEeyJjNOKZ7e9aA" name="" memberEnd="_dXI_-CumEeyJjNOKZ7e9aA _dV9UMSumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXI_-CumEeyJjNOKZ7e9aA" name="" type="_dMq1UCumEeyJjNOKZ7e9aA" association="_dXI_9yumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXJnACumEeyJjNOKZ7e9aA" name="" memberEnd="_dXJnASumEeyJjNOKZ7e9aA _dV9UNiumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXJnASumEeyJjNOKZ7e9aA" name="" type="_dMq1UCumEeyJjNOKZ7e9aA" association="_dXJnACumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXJnAyumEeyJjNOKZ7e9aA" name="" memberEnd="_dXJnBCumEeyJjNOKZ7e9aA _dV9UOyumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXJnBCumEeyJjNOKZ7e9aA" name="" type="_dMq1UCumEeyJjNOKZ7e9aA" association="_dXJnAyumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXJnBiumEeyJjNOKZ7e9aA" name="" memberEnd="_dXJnByumEeyJjNOKZ7e9aA _dV97QCumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXJnByumEeyJjNOKZ7e9aA" name="" type="_dMq1UCumEeyJjNOKZ7e9aA" association="_dXJnBiumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXKOESumEeyJjNOKZ7e9aA" name="" memberEnd="_dXKOEiumEeyJjNOKZ7e9aA _dV97QyumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXKOEiumEeyJjNOKZ7e9aA" name="" type="_dMq1UCumEeyJjNOKZ7e9aA" association="_dXKOESumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXKOFCumEeyJjNOKZ7e9aA" name="" memberEnd="_dXKOFSumEeyJjNOKZ7e9aA _dV97RiumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXKOFSumEeyJjNOKZ7e9aA" name="" type="_dMq1UCumEeyJjNOKZ7e9aA" association="_dXKOFCumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXK1ICumEeyJjNOKZ7e9aA" name="" memberEnd="_dXK1ISumEeyJjNOKZ7e9aA _dV_JZSumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXK1ISumEeyJjNOKZ7e9aA" name="" type="_dMxjASumEeyJjNOKZ7e9aA" association="_dXK1ICumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXK1IyumEeyJjNOKZ7e9aA" name="" memberEnd="_dXK1JCumEeyJjNOKZ7e9aA _dV_JZyumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXK1JCumEeyJjNOKZ7e9aA" name="" type="_dMxjASumEeyJjNOKZ7e9aA" association="_dXK1IyumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXK1JiumEeyJjNOKZ7e9aA" name="" memberEnd="_dXK1JyumEeyJjNOKZ7e9aA _dV_JaSumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXK1JyumEeyJjNOKZ7e9aA" name="" type="_dMxjASumEeyJjNOKZ7e9aA" association="_dXK1JiumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXK1KSumEeyJjNOKZ7e9aA" name="" memberEnd="_dXK1KiumEeyJjNOKZ7e9aA _dWAXgSumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXK1KiumEeyJjNOKZ7e9aA" name="" type="_dMxjASumEeyJjNOKZ7e9aA" association="_dXK1KSumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXLcMSumEeyJjNOKZ7e9aA" name="" memberEnd="_dXLcMiumEeyJjNOKZ7e9aA _dWA-kSumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXLcMiumEeyJjNOKZ7e9aA" name="" type="_dMxjASumEeyJjNOKZ7e9aA" association="_dXLcMSumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXLcNCumEeyJjNOKZ7e9aA" name="" memberEnd="_dXLcNSumEeyJjNOKZ7e9aA _dWA-kyumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXLcNSumEeyJjNOKZ7e9aA" name="" type="_dMxjASumEeyJjNOKZ7e9aA" association="_dXLcNCumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXLcNyumEeyJjNOKZ7e9aA" name="" memberEnd="_dXLcOCumEeyJjNOKZ7e9aA _dWBlpCumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXLcOCumEeyJjNOKZ7e9aA" name="" type="_dM6s8CumEeyJjNOKZ7e9aA" association="_dXLcNyumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXMDQSumEeyJjNOKZ7e9aA" name="" memberEnd="_dXMDQiumEeyJjNOKZ7e9aA _dWBlpiumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXMDQiumEeyJjNOKZ7e9aA" name="" type="_dM6s8CumEeyJjNOKZ7e9aA" association="_dXMDQSumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXMDRCumEeyJjNOKZ7e9aA" name="" memberEnd="_dXMDRSumEeyJjNOKZ7e9aA _dWCzwSumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXMDRSumEeyJjNOKZ7e9aA" name="" type="_dM_leiumEeyJjNOKZ7e9aA" association="_dXMDRCumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXMDRyumEeyJjNOKZ7e9aA" name="" memberEnd="_dXMDSCumEeyJjNOKZ7e9aA _dWCzwyumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXMDSCumEeyJjNOKZ7e9aA" name="" type="_dM_leiumEeyJjNOKZ7e9aA" association="_dXMDRyumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXMDSiumEeyJjNOKZ7e9aA" name="" memberEnd="_dXMDSyumEeyJjNOKZ7e9aA _dWCzxyumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXMDSyumEeyJjNOKZ7e9aA" name="" type="_dNAMgCumEeyJjNOKZ7e9aA" association="_dXMDSiumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXMqUSumEeyJjNOKZ7e9aA" name="" memberEnd="_dXMqUiumEeyJjNOKZ7e9aA _dWEo-SumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXMqUiumEeyJjNOKZ7e9aA" name="" type="_dNCowCumEeyJjNOKZ7e9aA" association="_dXMqUSumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXMqVCumEeyJjNOKZ7e9aA" name="" memberEnd="_dXMqVSumEeyJjNOKZ7e9aA _dWFQAiumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXMqVSumEeyJjNOKZ7e9aA" name="" type="_dNCowCumEeyJjNOKZ7e9aA" association="_dXMqVCumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXMqVyumEeyJjNOKZ7e9aA" name="" memberEnd="_dXMqWCumEeyJjNOKZ7e9aA _dWHFOCumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXMqWCumEeyJjNOKZ7e9aA" name="" type="_dNLLoSumEeyJjNOKZ7e9aA" association="_dXMqVyumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXNRYSumEeyJjNOKZ7e9aA" name="" memberEnd="_dXNRYiumEeyJjNOKZ7e9aA _dWHsQSumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXNRYiumEeyJjNOKZ7e9aA" name="" type="_dNLLoSumEeyJjNOKZ7e9aA" association="_dXNRYSumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXNRZCumEeyJjNOKZ7e9aA" name="" memberEnd="_dXNRZSumEeyJjNOKZ7e9aA _dWI6YyumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXNRZSumEeyJjNOKZ7e9aA" name="" type="_dNX_8CumEeyJjNOKZ7e9aA" association="_dXNRZCumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXNRZyumEeyJjNOKZ7e9aA" name="" memberEnd="_dXNRaCumEeyJjNOKZ7e9aA _dWI6ZSumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXNRaCumEeyJjNOKZ7e9aA" name="" type="_dNX_8CumEeyJjNOKZ7e9aA" association="_dXNRZyumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXN4cSumEeyJjNOKZ7e9aA" name="" memberEnd="_dXN4ciumEeyJjNOKZ7e9aA _dWJhcSumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXN4ciumEeyJjNOKZ7e9aA" name="" type="_dNX_8CumEeyJjNOKZ7e9aA" association="_dXN4cSumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXN4dCumEeyJjNOKZ7e9aA" name="" memberEnd="_dXN4dSumEeyJjNOKZ7e9aA _dWKIgSumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXN4dSumEeyJjNOKZ7e9aA" name="" type="_dNX_8CumEeyJjNOKZ7e9aA" association="_dXN4dCumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXN4dyumEeyJjNOKZ7e9aA" name="" memberEnd="_dXN4eCumEeyJjNOKZ7e9aA _dWKIhCumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXN4eCumEeyJjNOKZ7e9aA" name="" type="_dNX_8CumEeyJjNOKZ7e9aA" association="_dXN4dyumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXN4eiumEeyJjNOKZ7e9aA" name="" memberEnd="_dXN4eyumEeyJjNOKZ7e9aA _dWKIhyumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXN4eyumEeyJjNOKZ7e9aA" name="" type="_dNX_8CumEeyJjNOKZ7e9aA" association="_dXN4eiumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXOfgSumEeyJjNOKZ7e9aA" name="" memberEnd="_dXOfgiumEeyJjNOKZ7e9aA _dWKvkCumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXOfgiumEeyJjNOKZ7e9aA" name="" type="_dNacMCumEeyJjNOKZ7e9aA" association="_dXOfgSumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXOfhCumEeyJjNOKZ7e9aA" name="" memberEnd="_dXOfhSumEeyJjNOKZ7e9aA _dWMkxSumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXOfhSumEeyJjNOKZ7e9aA" name="" type="_dNgi0yumEeyJjNOKZ7e9aA" association="_dXOfhCumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXOfhyumEeyJjNOKZ7e9aA" name="" memberEnd="_dXOfiCumEeyJjNOKZ7e9aA _dWNL0iumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXOfiCumEeyJjNOKZ7e9aA" name="" type="_dNgi0yumEeyJjNOKZ7e9aA" association="_dXOfhyumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXPGkSumEeyJjNOKZ7e9aA" name="" memberEnd="_dXPGkiumEeyJjNOKZ7e9aA _dWNy4CumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXPGkiumEeyJjNOKZ7e9aA" name="" type="_dNjmICumEeyJjNOKZ7e9aA" association="_dXPGkSumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXPGlCumEeyJjNOKZ7e9aA" name="" memberEnd="_dXPGlSumEeyJjNOKZ7e9aA _dWNy4iumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXPGlSumEeyJjNOKZ7e9aA" name="" type="_dNjmICumEeyJjNOKZ7e9aA" association="_dXPGlCumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXPGlyumEeyJjNOKZ7e9aA" name="" memberEnd="_dXPGmCumEeyJjNOKZ7e9aA _dWNy5CumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXPGmCumEeyJjNOKZ7e9aA" name="" type="_dNjmICumEeyJjNOKZ7e9aA" association="_dXPGlyumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXPtoSumEeyJjNOKZ7e9aA" name="" memberEnd="_dXPtoiumEeyJjNOKZ7e9aA _dWSEVCumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXPtoiumEeyJjNOKZ7e9aA" name="" type="_dNrh8CumEeyJjNOKZ7e9aA" association="_dXPtoSumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXPtpCumEeyJjNOKZ7e9aA" name="" memberEnd="_dXPtpSumEeyJjNOKZ7e9aA _dWSEWCumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXPtpSumEeyJjNOKZ7e9aA" name="" type="_dNrh8CumEeyJjNOKZ7e9aA" association="_dXPtpCumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXPtpyumEeyJjNOKZ7e9aA" name="" memberEnd="_dXPtqCumEeyJjNOKZ7e9aA _dWSrYSumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXPtqCumEeyJjNOKZ7e9aA" name="" type="_dNtXICumEeyJjNOKZ7e9aA" association="_dXPtpyumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXPtqiumEeyJjNOKZ7e9aA" name="" memberEnd="_dXPtqyumEeyJjNOKZ7e9aA _dWSrZSumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXPtqyumEeyJjNOKZ7e9aA" name="" type="_dNvMUCumEeyJjNOKZ7e9aA" association="_dXPtqiumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXQUsSumEeyJjNOKZ7e9aA" name="" memberEnd="_dXQUsiumEeyJjNOKZ7e9aA _dWTScSumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXQUsiumEeyJjNOKZ7e9aA" name="" type="_dNvMUCumEeyJjNOKZ7e9aA" association="_dXQUsSumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXQUtCumEeyJjNOKZ7e9aA" name="" memberEnd="_dXQUtSumEeyJjNOKZ7e9aA _dWTScyumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXQUtSumEeyJjNOKZ7e9aA" name="" type="_dNvMUCumEeyJjNOKZ7e9aA" association="_dXQUtCumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXQUtyumEeyJjNOKZ7e9aA" name="" memberEnd="_dXQUuCumEeyJjNOKZ7e9aA _dWTSdSumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXQUuCumEeyJjNOKZ7e9aA" name="" type="_dNvMUCumEeyJjNOKZ7e9aA" association="_dXQUtyumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXQ7wSumEeyJjNOKZ7e9aA" name="" memberEnd="_dXQ7wiumEeyJjNOKZ7e9aA _dWTSdyumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXQ7wiumEeyJjNOKZ7e9aA" name="" type="_dNvMUCumEeyJjNOKZ7e9aA" association="_dXQ7wSumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXQ7xCumEeyJjNOKZ7e9aA" name="" memberEnd="_dXQ7xSumEeyJjNOKZ7e9aA _dWT5gSumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXQ7xSumEeyJjNOKZ7e9aA" name="" type="_dNvMUCumEeyJjNOKZ7e9aA" association="_dXQ7xCumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXQ7xyumEeyJjNOKZ7e9aA" name="" memberEnd="_dXQ7yCumEeyJjNOKZ7e9aA _dWVutCumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXQ7yCumEeyJjNOKZ7e9aA" name="" type="_dN6LcCumEeyJjNOKZ7e9aA" association="_dXQ7xyumEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dXRi0SumEeyJjNOKZ7e9aA" name="" memberEnd="_dXRi0iumEeyJjNOKZ7e9aA _dWWVwCumEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_dXRi0iumEeyJjNOKZ7e9aA" name="" type="_dN6LcCumEeyJjNOKZ7e9aA" association="_dXRi0SumEeyJjNOKZ7e9aA"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_dKm_0CumEeyJjNOKZ7e9aA" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_dUHhICumEeyJjNOKZ7e9aA" name="Authentication"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dUacECumEeyJjNOKZ7e9aA" name="Utilities"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_dKrRRSumEeyJjNOKZ7e9aA" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_dUNnxyumEeyJjNOKZ7e9aA" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dUOO0SumEeyJjNOKZ7e9aA" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dUOO0yumEeyJjNOKZ7e9aA" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dVk5sSumEeyJjNOKZ7e9aA" name="WARPdslBaseListener"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_dKd14yumEeyJjNOKZ7e9aA" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_dKec8CumEeyJjNOKZ7e9aA" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_dKiHUCumEeyJjNOKZ7e9aA" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_dUCopCumEeyJjNOKZ7e9aA" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_dLRHICumEeyJjNOKZ7e9aA" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_dU8AhSumEeyJjNOKZ7e9aA" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_dM9JMiumEeyJjNOKZ7e9aA" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dT9wICumEeyJjNOKZ7e9aA" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dT-XMCumEeyJjNOKZ7e9aA" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dT-XMiumEeyJjNOKZ7e9aA" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dT-XNCumEeyJjNOKZ7e9aA" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dT--QSumEeyJjNOKZ7e9aA" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dUFr9iumEeyJjNOKZ7e9aA" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dUVjkiumEeyJjNOKZ7e9aA" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dUhw0CumEeyJjNOKZ7e9aA" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dUhw0iumEeyJjNOKZ7e9aA" name="Queue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dU6LUSumEeyJjNOKZ7e9aA" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dU7ZcCumEeyJjNOKZ7e9aA" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dU8AgSumEeyJjNOKZ7e9aA" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dU8AgyumEeyJjNOKZ7e9aA" name="Vector"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_dKm_0SumEeyJjNOKZ7e9aA" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_dUHhIiumEeyJjNOKZ7e9aA" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dUIIMCumEeyJjNOKZ7e9aA" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dUR5MCumEeyJjNOKZ7e9aA" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dUR5MiumEeyJjNOKZ7e9aA" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_dKm_0iumEeyJjNOKZ7e9aA" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_dKm_0yumEeyJjNOKZ7e9aA" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_dUIIMiumEeyJjNOKZ7e9aA" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_dUIINCumEeyJjNOKZ7e9aA" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_dUIINiumEeyJjNOKZ7e9aA" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_dKzNECumEeyJjNOKZ7e9aA" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_dUZ1ACumEeyJjNOKZ7e9aA" name="Math"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dVG_oCumEeyJjNOKZ7e9aA" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dVR-wSumEeyJjNOKZ7e9aA" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_dVbIsCumEeyJjNOKZ7e9aA" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_dKm_1CumEeyJjNOKZ7e9aA" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_dKm_1SumEeyJjNOKZ7e9aA" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_dUIvQSumEeyJjNOKZ7e9aA" name="JFileChooser"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_dKm_1iumEeyJjNOKZ7e9aA" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_dKm_1yumEeyJjNOKZ7e9aA" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_dKm_2CumEeyJjNOKZ7e9aA" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_dUIvQyumEeyJjNOKZ7e9aA" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_dKrRQCumEeyJjNOKZ7e9aA" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_dKrRQSumEeyJjNOKZ7e9aA" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_dKrRQiumEeyJjNOKZ7e9aA" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_dKrRQyumEeyJjNOKZ7e9aA" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_dKrRRCumEeyJjNOKZ7e9aA" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_dUNnwyumEeyJjNOKZ7e9aA" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_dUNnxSumEeyJjNOKZ7e9aA" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_dUNAsCumEeyJjNOKZ7e9aA" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dUNAsiumEeyJjNOKZ7e9aA" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dUNnwSumEeyJjNOKZ7e9aA" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_dLNcwCumEeyJjNOKZ7e9aA" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_dLNcwSumEeyJjNOKZ7e9aA" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_dLOD0CumEeyJjNOKZ7e9aA" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_dU5kQyumEeyJjNOKZ7e9aA" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_dU6LUyumEeyJjNOKZ7e9aA" name="BeforeEach"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_dU6LVSumEeyJjNOKZ7e9aA" name="Test"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_dKsfYCumEeyJjNOKZ7e9aA" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_dUO15SumEeyJjNOKZ7e9aA" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dUPc8iumEeyJjNOKZ7e9aA" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dUPc-SumEeyJjNOKZ7e9aA" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dUQEBiumEeyJjNOKZ7e9aA" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dUQrEiumEeyJjNOKZ7e9aA" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dURSICumEeyJjNOKZ7e9aA" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dU3IACumEeyJjNOKZ7e9aA" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dU3IByumEeyJjNOKZ7e9aA" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dU3vFSumEeyJjNOKZ7e9aA" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dU4WIiumEeyJjNOKZ7e9aA" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_dLGIACumEeyJjNOKZ7e9aA" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_dUt-ESumEeyJjNOKZ7e9aA" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dUvMMSumEeyJjNOKZ7e9aA" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dUvMOCumEeyJjNOKZ7e9aA" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dUvzRiumEeyJjNOKZ7e9aA" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dUwaUiumEeyJjNOKZ7e9aA" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dUwaWSumEeyJjNOKZ7e9aA" name="ChannelContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_dLJyYCumEeyJjNOKZ7e9aA" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_dUy2kCumEeyJjNOKZ7e9aA" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dUzdoSumEeyJjNOKZ7e9aA" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dUzdoyumEeyJjNOKZ7e9aA" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dUzdpSumEeyJjNOKZ7e9aA" name="StringHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dUzdpyumEeyJjNOKZ7e9aA" name="IntHolder"/>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="_L1JckDBLEeyJyfgKlcqSwg" name="Reliability::java::util::ArrayList&lt;Integer>"/>
    <packagedElement xmi:type="uml:DataType" xmi:id="_YTqLsDBLEeyJyfgKlcqSwg" name="Reliability::Reliability::java::util::ArrayList"/>
    <packagedElement xmi:type="uml:DataType" xmi:id="_ew4t0DBLEeyJyfgKlcqSwg" name="Reliability::java::util::ArrayList&lt;Integer>"/>
    <packagedElement xmi:type="uml:DataType" xmi:id="_imKWQDBLEeyJyfgKlcqSwg" name="java::util::ArrayList&lt;Integer>"/>
    <packagedElement xmi:type="uml:DataType" xmi:id="_kMKDsDBLEeyJyfgKlcqSwg" name="ArrayList&lt;Integer>"/>
    <packagedElement xmi:type="uml:DataType" xmi:id="_V7haMDBMEeyJyfgKlcqSwg" name="ReliabilityAnalysis::java.util::ArrayList&lt;Integer>"/>
    <packagedElement xmi:type="uml:DataType" xmi:id="_X0hjMDBMEeyJyfgKlcqSwg" name="Reliability::ReliabilityAnalysis::java.util::ArrayList"/>
    <packagedElement xmi:type="uml:DataType" xmi:id="_RESJADBNEeyJyfgKlcqSwg" name="Relia"/>
    <profileApplication xmi:id="_ce5JUCumEeyJjNOKZ7e9aA">
      <eAnnotations xmi:id="_ce5JUSumEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_ce5JUiumEeyJjNOKZ7e9aA" base_Package="_cRHMACumEeyJjNOKZ7e9aA">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_dL-RwCumEeyJjNOKZ7e9aA" genericsValue="T,E" base_Element="_dL9qsCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dMAuACumEeyJjNOKZ7e9aA" base_Element="_dMAG9SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dMAuASumEeyJjNOKZ7e9aA" base_Element="_dMAG9SumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dMAuAiumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dMBVECumEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_dMAuAyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dMBVEiumEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_dMBVESumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dMB8ISumEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_dMB8ICumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dMB8IyumEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_dMB8IiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dMCjMSumEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_dMCjMCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dMJQ4yumEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_dMJQ4SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dMLtICumEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_dMLGFiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dMPXgSumEeyJjNOKZ7e9aA" base_Element="_dMPXgCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dMP-kCumEeyJjNOKZ7e9aA" base_Element="_dMPXgCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dMP-kSumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dMP-kyumEeyJjNOKZ7e9aA" base_Element="_dMP-kiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dMP-lCumEeyJjNOKZ7e9aA" base_Element="_dMP-kiumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dMP-lSumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dMP-lyumEeyJjNOKZ7e9aA" base_Element="_dMP-liumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dMP-mCumEeyJjNOKZ7e9aA" base_Element="_dMP-liumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dMP-mSumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dMRzwCumEeyJjNOKZ7e9aA" genericsValue="T extends SchedulableObject" base_Element="_dMRMsSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dMTB4SumEeyJjNOKZ7e9aA" base_Element="_dMSa2SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dMTB4iumEeyJjNOKZ7e9aA" base_Element="_dMSa2SumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dMTB4yumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dMTo8SumEeyJjNOKZ7e9aA" base_Element="_dMTo8CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dMVeIiumEeyJjNOKZ7e9aA" base_Element="_dMVeICumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dMVeIyumEeyJjNOKZ7e9aA" base_Element="_dMVeICumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dMVeJCumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dMVeJyumEeyJjNOKZ7e9aA" base_Element="_dMVeJSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dMWFMCumEeyJjNOKZ7e9aA" base_Element="_dMVeJSumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dMWFMSumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dMWFMyumEeyJjNOKZ7e9aA" base_Element="_dMWFMiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dMWFNCumEeyJjNOKZ7e9aA" base_Element="_dMWFMiumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dMWFNSumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dMaWpyumEeyJjNOKZ7e9aA" genericsValue="Node" base_Element="_dMaWpiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dMa9sSumEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_dMa9sCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dMa9syumEeyJjNOKZ7e9aA" genericsValue="Integer" base_Element="_dMa9siumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dMcL0SumEeyJjNOKZ7e9aA" base_Element="_dMbkxiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dMcL0iumEeyJjNOKZ7e9aA" base_Element="_dMbkxiumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dMcL0yumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dMfPISumEeyJjNOKZ7e9aA" base_Element="_dMfPICumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dMfPIiumEeyJjNOKZ7e9aA" base_Element="_dMfPICumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dMfPIyumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dMlVwCumEeyJjNOKZ7e9aA" genericsValue="T extends SchedulableObject" base_Element="_dMkusiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dMl80CumEeyJjNOKZ7e9aA" genericsValue="T extends SchedulableObject" base_Element="_dMlVwSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dMmj6SumEeyJjNOKZ7e9aA" base_Element="_dMmj5yumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dMmj6iumEeyJjNOKZ7e9aA" base_Element="_dMmj5yumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dMmj6yumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dMnK9iumEeyJjNOKZ7e9aA" base_Element="_dMnK9CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dMnK9yumEeyJjNOKZ7e9aA" base_Element="_dMnK9CumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dMnK-CumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dMnK-iumEeyJjNOKZ7e9aA" base_Element="_dMnK-SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dMnK-yumEeyJjNOKZ7e9aA" base_Element="_dMnK-SumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dMnyACumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dMpnMCumEeyJjNOKZ7e9aA" base_Element="_dMpAKiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dMpnMSumEeyJjNOKZ7e9aA" base_Element="_dMpAKiumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dMpnMiumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dMqOQCumEeyJjNOKZ7e9aA" genericsValue="T extends SchedulableObject" base_Element="_dMpnMyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dMrcYSumEeyJjNOKZ7e9aA" genericsValue="String, Integer" base_Element="_dMrcYCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dMsDcCumEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_dMrcYiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Array xmi:id="_dMsDdCumEeyJjNOKZ7e9aA" base_Element="_dMsDcSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dMvt0SumEeyJjNOKZ7e9aA" base_Element="_dMvt0CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dMvt0iumEeyJjNOKZ7e9aA" base_Element="_dMvt0CumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dMvt0yumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dMxjACumEeyJjNOKZ7e9aA" genericsValue="T extends SchedulableObject" base_Element="_dMw78CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dM10dyumEeyJjNOKZ7e9aA" base_Element="_dM10diumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dM10eCumEeyJjNOKZ7e9aA" base_Element="_dM10diumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dM10eSumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dM2bgCumEeyJjNOKZ7e9aA" base_Element="_dM10eiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dM2bgSumEeyJjNOKZ7e9aA" base_Element="_dM10eiumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dM2bgiumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dM2bhSumEeyJjNOKZ7e9aA" base_Element="_dM2bgyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dM2bhiumEeyJjNOKZ7e9aA" base_Element="_dM2bgyumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dM2bhyumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dM2biiumEeyJjNOKZ7e9aA" base_Element="_dM2biCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dM3CkCumEeyJjNOKZ7e9aA" base_Element="_dM2biCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dM3CkSumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dM3CliumEeyJjNOKZ7e9aA" base_Element="_dM3ClCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dM3ClyumEeyJjNOKZ7e9aA" base_Element="_dM3ClCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dM3CmCumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dM6s8iumEeyJjNOKZ7e9aA" base_Element="_dM6s8SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dM6s8yumEeyJjNOKZ7e9aA" base_Element="_dM6s8SumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dM6s9CumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dM7UACumEeyJjNOKZ7e9aA" base_Element="_dM6s9SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dM7UASumEeyJjNOKZ7e9aA" base_Element="_dM6s9SumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dM7UAiumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dM77ESumEeyJjNOKZ7e9aA" genericsValue="T extends SchedulableObject" base_Element="_dM77ECumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dM8iISumEeyJjNOKZ7e9aA" genericsValue="T extends SchedulableObject" base_Element="_dM8iICumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dM9JMyumEeyJjNOKZ7e9aA" base_Element="_dM9JMiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dM9JNSumEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_dM9JNCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNAzkSumEeyJjNOKZ7e9aA" base_Element="_dNAzkCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNAzkiumEeyJjNOKZ7e9aA" base_Element="_dNAzkCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNAzkyumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dNBaoSumEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_dNBaoCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dNEd8SumEeyJjNOKZ7e9aA" genericsValue="Integer" base_Element="_dNEd8CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dNKkkCumEeyJjNOKZ7e9aA" genericsValue="T extends SchedulableObject" base_Element="_dNJ9gCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dNLLoCumEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_dNKkkSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dNRSQiumEeyJjNOKZ7e9aA" genericsValue="T extends SchedulableObject" base_Element="_dNRSQSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dNR5VSumEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_dNR5VCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNSgYiumEeyJjNOKZ7e9aA" base_Element="_dNSgYSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dNUVkSumEeyJjNOKZ7e9aA" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_dNUVkCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNWKwiumEeyJjNOKZ7e9aA" base_Element="_dNWKwSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNWx1SumEeyJjNOKZ7e9aA" base_Element="_dNWx1CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNYnASumEeyJjNOKZ7e9aA" base_Element="_dNYnACumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNYnAiumEeyJjNOKZ7e9aA" base_Element="_dNYnACumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNYnAyumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNYnBSumEeyJjNOKZ7e9aA" base_Element="_dNYnBCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNYnBiumEeyJjNOKZ7e9aA" base_Element="_dNYnBCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNYnByumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNZOESumEeyJjNOKZ7e9aA" base_Element="_dNYnCCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNZOEiumEeyJjNOKZ7e9aA" base_Element="_dNYnCCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNZOEyumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dNgi0iumEeyJjNOKZ7e9aA" genericsValue="InstructionParameters" base_Element="_dNgi0CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dNhJ5SumEeyJjNOKZ7e9aA" genericsValue="InstructionParameters" base_Element="_dNhJ5CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNkNMSumEeyJjNOKZ7e9aA" base_Element="_dNkNMCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNkNMiumEeyJjNOKZ7e9aA" base_Element="_dNkNMCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNkNMyumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNkNNSumEeyJjNOKZ7e9aA" base_Element="_dNkNNCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNkNNiumEeyJjNOKZ7e9aA" base_Element="_dNkNNCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNkNNyumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNk0QSumEeyJjNOKZ7e9aA" base_Element="_dNk0QCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNk0QiumEeyJjNOKZ7e9aA" base_Element="_dNk0QCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNk0QyumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNk0RSumEeyJjNOKZ7e9aA" base_Element="_dNk0RCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNk0RiumEeyJjNOKZ7e9aA" base_Element="_dNk0RCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNk0RyumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNlbUiumEeyJjNOKZ7e9aA" base_Element="_dNlbUCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNlbUyumEeyJjNOKZ7e9aA" base_Element="_dNlbUCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNlbVCumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNlbVyumEeyJjNOKZ7e9aA" base_Element="_dNlbVSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNlbWCumEeyJjNOKZ7e9aA" base_Element="_dNlbVSumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNlbWSumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNmCYiumEeyJjNOKZ7e9aA" base_Element="_dNmCYCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNmCYyumEeyJjNOKZ7e9aA" base_Element="_dNmCYCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNmCZCumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNmCZiumEeyJjNOKZ7e9aA" base_Element="_dNmCZSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNmCZyumEeyJjNOKZ7e9aA" base_Element="_dNmCZSumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNmCaCumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNmCaiumEeyJjNOKZ7e9aA" base_Element="_dNmCaSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNmpcCumEeyJjNOKZ7e9aA" base_Element="_dNmCaSumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNmpcSumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNmpdCumEeyJjNOKZ7e9aA" base_Element="_dNmpciumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNmpdSumEeyJjNOKZ7e9aA" base_Element="_dNmpciumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNmpdiumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNmpeSumEeyJjNOKZ7e9aA" base_Element="_dNmpdyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNmpeiumEeyJjNOKZ7e9aA" base_Element="_dNmpdyumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNmpeyumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNnQgCumEeyJjNOKZ7e9aA" base_Element="_dNmpfCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNnQgSumEeyJjNOKZ7e9aA" base_Element="_dNmpfCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNnQgiumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNnQhSumEeyJjNOKZ7e9aA" base_Element="_dNnQgyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNnQhiumEeyJjNOKZ7e9aA" base_Element="_dNnQgyumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNnQhyumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNnQiSumEeyJjNOKZ7e9aA" base_Element="_dNnQiCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNnQiiumEeyJjNOKZ7e9aA" base_Element="_dNnQiCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNnQiyumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_dNpswCumEeyJjNOKZ7e9aA" dimensions="1" base_Element="_dNpFsSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNsJASumEeyJjNOKZ7e9aA" base_Element="_dNsJACumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNsJAiumEeyJjNOKZ7e9aA" base_Element="_dNsJACumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNsJAyumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNsJBSumEeyJjNOKZ7e9aA" base_Element="_dNsJBCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNsJBiumEeyJjNOKZ7e9aA" base_Element="_dNsJBCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNsJByumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNswEiumEeyJjNOKZ7e9aA" base_Element="_dNswECumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNswEyumEeyJjNOKZ7e9aA" base_Element="_dNswECumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNswFCumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNvzYSumEeyJjNOKZ7e9aA" base_Element="_dNvzYCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNwacCumEeyJjNOKZ7e9aA" base_Element="_dNvzYCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNwacSumEeyJjNOKZ7e9aA" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNwacyumEeyJjNOKZ7e9aA" base_Element="_dNwaciumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNwadCumEeyJjNOKZ7e9aA" base_Element="_dNwaciumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNwadSumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNwadyumEeyJjNOKZ7e9aA" base_Element="_dNwadiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNxBgCumEeyJjNOKZ7e9aA" base_Element="_dNwadiumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNxBgSumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNxBgyumEeyJjNOKZ7e9aA" base_Element="_dNxBgiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNxBhCumEeyJjNOKZ7e9aA" base_Element="_dNxBgiumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNxBhSumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNxBhyumEeyJjNOKZ7e9aA" base_Element="_dNxBhiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNxBiCumEeyJjNOKZ7e9aA" base_Element="_dNxBhiumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNxBiSumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNxokSumEeyJjNOKZ7e9aA" base_Element="_dNxokCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNxokiumEeyJjNOKZ7e9aA" base_Element="_dNxokCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNxokyumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNxolSumEeyJjNOKZ7e9aA" base_Element="_dNxolCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNxoliumEeyJjNOKZ7e9aA" base_Element="_dNxolCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNxolyumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNxomSumEeyJjNOKZ7e9aA" base_Element="_dNxomCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNxomiumEeyJjNOKZ7e9aA" base_Element="_dNxomCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNxomyumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNyPoCumEeyJjNOKZ7e9aA" base_Element="_dNxonCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNyPoSumEeyJjNOKZ7e9aA" base_Element="_dNxonCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNyPoiumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNyPpCumEeyJjNOKZ7e9aA" base_Element="_dNyPoyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNyPpSumEeyJjNOKZ7e9aA" base_Element="_dNyPoyumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNyPpiumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNyPqCumEeyJjNOKZ7e9aA" base_Element="_dNyPpyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNyPqSumEeyJjNOKZ7e9aA" base_Element="_dNyPpyumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNyPqiumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNyPrCumEeyJjNOKZ7e9aA" base_Element="_dNyPqyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNy2sCumEeyJjNOKZ7e9aA" base_Element="_dNyPqyumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNy2sSumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNy2syumEeyJjNOKZ7e9aA" base_Element="_dNy2siumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNy2tCumEeyJjNOKZ7e9aA" base_Element="_dNy2siumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNy2tSumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNy2tyumEeyJjNOKZ7e9aA" base_Element="_dNy2tiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNy2uCumEeyJjNOKZ7e9aA" base_Element="_dNy2tiumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNy2uSumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNy2uyumEeyJjNOKZ7e9aA" base_Element="_dNy2uiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNy2vCumEeyJjNOKZ7e9aA" base_Element="_dNy2uiumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNy2vSumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNzdwCumEeyJjNOKZ7e9aA" base_Element="_dNy2viumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNzdwSumEeyJjNOKZ7e9aA" base_Element="_dNy2viumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNzdwiumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNzdxSumEeyJjNOKZ7e9aA" base_Element="_dNzdxCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNzdxiumEeyJjNOKZ7e9aA" base_Element="_dNzdxCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNzdxyumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNzdySumEeyJjNOKZ7e9aA" base_Element="_dNzdyCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dNzdyiumEeyJjNOKZ7e9aA" base_Element="_dNzdyCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dNzdyyumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN0E0CumEeyJjNOKZ7e9aA" base_Element="_dNzdzCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN0E0SumEeyJjNOKZ7e9aA" base_Element="_dNzdzCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN0E0iumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN0E1CumEeyJjNOKZ7e9aA" base_Element="_dN0E0yumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN0E1SumEeyJjNOKZ7e9aA" base_Element="_dN0E0yumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN0E1iumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN0E2CumEeyJjNOKZ7e9aA" base_Element="_dN0E1yumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN0E2SumEeyJjNOKZ7e9aA" base_Element="_dN0E1yumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN0E2iumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN0r4CumEeyJjNOKZ7e9aA" base_Element="_dN0E2yumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN0r4SumEeyJjNOKZ7e9aA" base_Element="_dN0E2yumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN0r4iumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN0r5CumEeyJjNOKZ7e9aA" base_Element="_dN0r4yumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN0r5SumEeyJjNOKZ7e9aA" base_Element="_dN0r4yumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN0r5iumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN0r6CumEeyJjNOKZ7e9aA" base_Element="_dN0r5yumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN0r6SumEeyJjNOKZ7e9aA" base_Element="_dN0r5yumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN0r6iumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN0r7CumEeyJjNOKZ7e9aA" base_Element="_dN0r6yumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN1S8CumEeyJjNOKZ7e9aA" base_Element="_dN0r6yumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN1S8SumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN1S8yumEeyJjNOKZ7e9aA" base_Element="_dN1S8iumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN1S9CumEeyJjNOKZ7e9aA" base_Element="_dN1S8iumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN1S9SumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN1S9yumEeyJjNOKZ7e9aA" base_Element="_dN1S9iumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN1S-CumEeyJjNOKZ7e9aA" base_Element="_dN1S9iumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN1S-SumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN1S-yumEeyJjNOKZ7e9aA" base_Element="_dN1S-iumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN1S_CumEeyJjNOKZ7e9aA" base_Element="_dN1S-iumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN1S_SumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN16ACumEeyJjNOKZ7e9aA" base_Element="_dN1S_iumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN16ASumEeyJjNOKZ7e9aA" base_Element="_dN1S_iumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN16AiumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN16BCumEeyJjNOKZ7e9aA" base_Element="_dN16AyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN16BSumEeyJjNOKZ7e9aA" base_Element="_dN16AyumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN16BiumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN16CCumEeyJjNOKZ7e9aA" base_Element="_dN16ByumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN16CSumEeyJjNOKZ7e9aA" base_Element="_dN16ByumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN16CiumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN2hECumEeyJjNOKZ7e9aA" base_Element="_dN16CyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN2hESumEeyJjNOKZ7e9aA" base_Element="_dN16CyumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN2hEiumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN2hFCumEeyJjNOKZ7e9aA" base_Element="_dN2hEyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN2hFSumEeyJjNOKZ7e9aA" base_Element="_dN2hEyumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN2hFiumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN2hGCumEeyJjNOKZ7e9aA" base_Element="_dN2hFyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN2hGSumEeyJjNOKZ7e9aA" base_Element="_dN2hFyumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN2hGiumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN2hHCumEeyJjNOKZ7e9aA" base_Element="_dN2hGyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN2hHSumEeyJjNOKZ7e9aA" base_Element="_dN2hGyumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN2hHiumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN3IISumEeyJjNOKZ7e9aA" base_Element="_dN3IICumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN3IIiumEeyJjNOKZ7e9aA" base_Element="_dN3IICumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN3IIyumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN3IJSumEeyJjNOKZ7e9aA" base_Element="_dN3IJCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN3IJiumEeyJjNOKZ7e9aA" base_Element="_dN3IJCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN3IJyumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN3IKSumEeyJjNOKZ7e9aA" base_Element="_dN3IKCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN3IKiumEeyJjNOKZ7e9aA" base_Element="_dN3IKCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN3IKyumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN3vMCumEeyJjNOKZ7e9aA" base_Element="_dN3ILCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN3vMSumEeyJjNOKZ7e9aA" base_Element="_dN3ILCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN3vMiumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN3vNCumEeyJjNOKZ7e9aA" base_Element="_dN3vMyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN3vNSumEeyJjNOKZ7e9aA" base_Element="_dN3vMyumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN3vNiumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN3vOCumEeyJjNOKZ7e9aA" base_Element="_dN3vNyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN3vOSumEeyJjNOKZ7e9aA" base_Element="_dN3vNyumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN3vOiumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN3vPCumEeyJjNOKZ7e9aA" base_Element="_dN3vOyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN3vPSumEeyJjNOKZ7e9aA" base_Element="_dN3vOyumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN4WQCumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN4WQiumEeyJjNOKZ7e9aA" base_Element="_dN4WQSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN4WQyumEeyJjNOKZ7e9aA" base_Element="_dN4WQSumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN4WRCumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN4WRiumEeyJjNOKZ7e9aA" base_Element="_dN4WRSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN4WRyumEeyJjNOKZ7e9aA" base_Element="_dN4WRSumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN4WSCumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN49UCumEeyJjNOKZ7e9aA" base_Element="_dN4WSSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN49USumEeyJjNOKZ7e9aA" base_Element="_dN4WSSumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN49UiumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN49VCumEeyJjNOKZ7e9aA" base_Element="_dN49UyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dN49VSumEeyJjNOKZ7e9aA" base_Element="_dN49UyumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dN49ViumEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_dN_rACumEeyJjNOKZ7e9aA" base_Element="_dN_D9iumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Array xmi:id="_dN_rBiumEeyJjNOKZ7e9aA" base_Element="_dN_rAyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Array xmi:id="_dOASFyumEeyJjNOKZ7e9aA" dimensions="0" base_Element="_dOASEyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Array xmi:id="_dOA5JSumEeyJjNOKZ7e9aA" base_Element="_dOA5ISumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dT9wISumEeyJjNOKZ7e9aA" base_Element="_dT9wICumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dT-XMSumEeyJjNOKZ7e9aA" base_Element="_dT-XMCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dT-XMyumEeyJjNOKZ7e9aA" base_Element="_dT-XMiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dT--QCumEeyJjNOKZ7e9aA" base_Element="_dT-XNCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dT--QiumEeyJjNOKZ7e9aA" base_Element="_dT--QSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUAMYSumEeyJjNOKZ7e9aA" base_Element="_dT_lWiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dUAMYiumEeyJjNOKZ7e9aA" base_Element="_dT_lWiumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dUAMYyumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dUAzcyumEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_dUAzciumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dUAzdiumEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_dUAzdSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dUCBkSumEeyJjNOKZ7e9aA" genericsValue="String, Activation" base_Element="_dUCBkCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUDPsCumEeyJjNOKZ7e9aA" base_Element="_dUCopCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUEd1iumEeyJjNOKZ7e9aA" base_Element="_dUEd0yumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dUEd1yumEeyJjNOKZ7e9aA" base_Element="_dUEd0yumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dUEd2CumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dUFr9yumEeyJjNOKZ7e9aA" base_Element="_dUFr9iumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUG6ESumEeyJjNOKZ7e9aA" base_Element="_dUGTACumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dUG6EiumEeyJjNOKZ7e9aA" base_Element="_dUGTACumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dUG6EyumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dUHhISumEeyJjNOKZ7e9aA" base_Element="_dUHhICumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUHhIyumEeyJjNOKZ7e9aA" base_Element="_dUHhIiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUIIMSumEeyJjNOKZ7e9aA" base_Element="_dUIIMCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUIIMyumEeyJjNOKZ7e9aA" base_Element="_dUIIMiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUIINSumEeyJjNOKZ7e9aA" base_Element="_dUIINCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUIvQCumEeyJjNOKZ7e9aA" base_Element="_dUIINiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUIvQiumEeyJjNOKZ7e9aA" base_Element="_dUIvQSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUIvRCumEeyJjNOKZ7e9aA" base_Element="_dUIvQyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUJ9ZSumEeyJjNOKZ7e9aA" base_Element="_dUJ9YiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dUJ9ZiumEeyJjNOKZ7e9aA" base_Element="_dUJ9YiumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dUJ9ZyumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dULLgSumEeyJjNOKZ7e9aA" genericsValue="String, Flow" base_Element="_dULLgCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dULykSumEeyJjNOKZ7e9aA" genericsValue="Node, Activation" base_Element="_dULykCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUNAsSumEeyJjNOKZ7e9aA" base_Element="_dUNAsCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUNnwCumEeyJjNOKZ7e9aA" base_Element="_dUNAsiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUNnwiumEeyJjNOKZ7e9aA" base_Element="_dUNnwSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUNnxCumEeyJjNOKZ7e9aA" base_Element="_dUNnwyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUNnxiumEeyJjNOKZ7e9aA" base_Element="_dUNnxSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUOO0CumEeyJjNOKZ7e9aA" base_Element="_dUNnxyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUOO0iumEeyJjNOKZ7e9aA" base_Element="_dUOO0SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUOO1CumEeyJjNOKZ7e9aA" base_Element="_dUOO0yumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUO15iumEeyJjNOKZ7e9aA" base_Element="_dUO15SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUO16SumEeyJjNOKZ7e9aA" base_Element="_dUO15yumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dUPc8CumEeyJjNOKZ7e9aA" base_Element="_dUO15yumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dUPc8SumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dUPc8yumEeyJjNOKZ7e9aA" base_Element="_dUPc8iumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUPc9iumEeyJjNOKZ7e9aA" base_Element="_dUPc9CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dUPc9yumEeyJjNOKZ7e9aA" base_Element="_dUPc9CumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dUPc-CumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dUQEACumEeyJjNOKZ7e9aA" base_Element="_dUPc-SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUQEAyumEeyJjNOKZ7e9aA" base_Element="_dUQEASumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dUQEBCumEeyJjNOKZ7e9aA" base_Element="_dUQEASumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dUQEBSumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dUQEByumEeyJjNOKZ7e9aA" base_Element="_dUQEBiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUQECiumEeyJjNOKZ7e9aA" base_Element="_dUQECCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dUQrECumEeyJjNOKZ7e9aA" base_Element="_dUQECCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dUQrESumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dUQrEyumEeyJjNOKZ7e9aA" base_Element="_dUQrEiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUQrFiumEeyJjNOKZ7e9aA" base_Element="_dUQrFCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dUQrFyumEeyJjNOKZ7e9aA" base_Element="_dUQrFCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dUQrGCumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dURSISumEeyJjNOKZ7e9aA" base_Element="_dURSICumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dURSJCumEeyJjNOKZ7e9aA" base_Element="_dURSIiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dURSJSumEeyJjNOKZ7e9aA" base_Element="_dURSIiumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dURSJiumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dUR5MSumEeyJjNOKZ7e9aA" base_Element="_dUR5MCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUR5MyumEeyJjNOKZ7e9aA" base_Element="_dUR5MiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dUTHUSumEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_dUTHUCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUTuYyumEeyJjNOKZ7e9aA" base_Element="_dUTuYCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dUUVcCumEeyJjNOKZ7e9aA" base_Element="_dUTuYCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dUUVcSumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dUU8gSumEeyJjNOKZ7e9aA" genericsValue="String, Node" base_Element="_dUU8gCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUVjkyumEeyJjNOKZ7e9aA" base_Element="_dUVjkiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUX_0CumEeyJjNOKZ7e9aA" base_Element="_dUXYxiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dUX_0SumEeyJjNOKZ7e9aA" base_Element="_dUXYxiumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dUX_0iumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dUYm4yumEeyJjNOKZ7e9aA" genericsValue="ScheduleTime" base_Element="_dUX_1yumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUZN-SumEeyJjNOKZ7e9aA" base_Element="_dUZN9iumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dUZN-iumEeyJjNOKZ7e9aA" base_Element="_dUZN9iumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dUZN-yumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dUZ1ASumEeyJjNOKZ7e9aA" base_Element="_dUZ1ACumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUacESumEeyJjNOKZ7e9aA" base_Element="_dUacECumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dUeGcSumEeyJjNOKZ7e9aA" genericsValue="String,InstructionTimeSlot" base_Element="_dUeGcCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dUfUkCumEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_dUetgyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dUf7oCumEeyJjNOKZ7e9aA" genericsValue="Double" base_Element="_dUfUliumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dUf7oiumEeyJjNOKZ7e9aA" genericsValue="Double,ReliabilityRow" base_Element="_dUf7oSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUhw0SumEeyJjNOKZ7e9aA" base_Element="_dUhw0CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUhw0yumEeyJjNOKZ7e9aA" base_Element="_dUhw0iumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUmCQSumEeyJjNOKZ7e9aA" base_Element="_dUmCQCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dUpFkSumEeyJjNOKZ7e9aA" genericsValue="Activation,Row&lt;Activation>" base_Element="_dUpFkCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dUpsoiumEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_dUpFkyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUpspSumEeyJjNOKZ7e9aA" base_Element="_dUpspCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUq6wCumEeyJjNOKZ7e9aA" base_Element="_dUqTtSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUq6wiumEeyJjNOKZ7e9aA" base_Element="_dUq6wSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUulICumEeyJjNOKZ7e9aA" base_Element="_dUt-ESumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUulIyumEeyJjNOKZ7e9aA" base_Element="_dUulISumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dUulJCumEeyJjNOKZ7e9aA" base_Element="_dUulISumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dUulJSumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUulKCumEeyJjNOKZ7e9aA" base_Element="_dUulJiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dUulKSumEeyJjNOKZ7e9aA" base_Element="_dUulJiumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dUvMMCumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dUvMMiumEeyJjNOKZ7e9aA" base_Element="_dUvMMSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUvMNSumEeyJjNOKZ7e9aA" base_Element="_dUvMMyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dUvMNiumEeyJjNOKZ7e9aA" base_Element="_dUvMMyumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dUvMNyumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dUvzQCumEeyJjNOKZ7e9aA" base_Element="_dUvMOCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUvzQyumEeyJjNOKZ7e9aA" base_Element="_dUvzQSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dUvzRCumEeyJjNOKZ7e9aA" base_Element="_dUvzQSumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dUvzRSumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dUvzRyumEeyJjNOKZ7e9aA" base_Element="_dUvzRiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUvzSiumEeyJjNOKZ7e9aA" base_Element="_dUvzSCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dUwaUCumEeyJjNOKZ7e9aA" base_Element="_dUvzSCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dUwaUSumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dUwaUyumEeyJjNOKZ7e9aA" base_Element="_dUwaUiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUwaViumEeyJjNOKZ7e9aA" base_Element="_dUwaVCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dUwaVyumEeyJjNOKZ7e9aA" base_Element="_dUwaVCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dUwaWCumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dUxBYCumEeyJjNOKZ7e9aA" base_Element="_dUwaWSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUxBYyumEeyJjNOKZ7e9aA" base_Element="_dUxBYSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dUxBZCumEeyJjNOKZ7e9aA" base_Element="_dUxBYSumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dUxBZSumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dUzdoCumEeyJjNOKZ7e9aA" base_Element="_dUy2kCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUzdoiumEeyJjNOKZ7e9aA" base_Element="_dUzdoSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUzdpCumEeyJjNOKZ7e9aA" base_Element="_dUzdoyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dUzdpiumEeyJjNOKZ7e9aA" base_Element="_dUzdpSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dU0EsCumEeyJjNOKZ7e9aA" base_Element="_dUzdpyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dU2g8yumEeyJjNOKZ7e9aA" base_Element="_dU2g8SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dU2g9CumEeyJjNOKZ7e9aA" base_Element="_dU2g8SumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dU2g9SumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dU2g-CumEeyJjNOKZ7e9aA" base_Element="_dU2g9iumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dU2g-SumEeyJjNOKZ7e9aA" base_Element="_dU2g9iumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dU2g-iumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dU3IASumEeyJjNOKZ7e9aA" base_Element="_dU3IACumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dU3IBCumEeyJjNOKZ7e9aA" base_Element="_dU3IAiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dU3IBSumEeyJjNOKZ7e9aA" base_Element="_dU3IAiumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dU3IBiumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dU3ICCumEeyJjNOKZ7e9aA" base_Element="_dU3IByumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dU3vEiumEeyJjNOKZ7e9aA" base_Element="_dU3vECumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dU3vEyumEeyJjNOKZ7e9aA" base_Element="_dU3vECumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dU3vFCumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dU3vFiumEeyJjNOKZ7e9aA" base_Element="_dU3vFSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dU3vGSumEeyJjNOKZ7e9aA" base_Element="_dU3vFyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dU4WICumEeyJjNOKZ7e9aA" base_Element="_dU3vFyumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dU4WISumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dU4WIyumEeyJjNOKZ7e9aA" base_Element="_dU4WIiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dU4WJiumEeyJjNOKZ7e9aA" base_Element="_dU4WJCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dU4WJyumEeyJjNOKZ7e9aA" base_Element="_dU4WJCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dU4WKCumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dU49MiumEeyJjNOKZ7e9aA" base_Element="_dU49MCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dU49MyumEeyJjNOKZ7e9aA" base_Element="_dU49MCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dU49NCumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dU49NyumEeyJjNOKZ7e9aA" base_Element="_dU49NSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dU49OCumEeyJjNOKZ7e9aA" base_Element="_dU49NSumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dU49OSumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dU5kQCumEeyJjNOKZ7e9aA" base_Element="_dU49OiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dU5kQSumEeyJjNOKZ7e9aA" base_Element="_dU49OiumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dU5kQiumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dU6LUCumEeyJjNOKZ7e9aA" base_Element="_dU5kQyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dU6LUiumEeyJjNOKZ7e9aA" base_Element="_dU6LUSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dU6LVCumEeyJjNOKZ7e9aA" base_Element="_dU6LUyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dU6LViumEeyJjNOKZ7e9aA" base_Element="_dU6LVSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dU8AgCumEeyJjNOKZ7e9aA" base_Element="_dU7ZcCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dU8AgiumEeyJjNOKZ7e9aA" base_Element="_dU8AgSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dU8AhCumEeyJjNOKZ7e9aA" base_Element="_dU8AgyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dU8AhiumEeyJjNOKZ7e9aA" base_Element="_dU8AhSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVGYkSumEeyJjNOKZ7e9aA" genericsValue="T, E" base_Element="_dVGYkCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dVG_oSumEeyJjNOKZ7e9aA" base_Element="_dVG_oCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVG_oyumEeyJjNOKZ7e9aA" genericsValue="Activation" base_Element="_dVG_oiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVHmsiumEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_dVHmsSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVINwCumEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_dVHmtCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVINwyumEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_dVINwiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVI00CumEeyJjNOKZ7e9aA" genericsValue="ScheduleTime" base_Element="_dVINxSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVJb4SumEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_dVJb4CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVKqACumEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_dVKC8iumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVKqASumEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_dVKC8yumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVLRECumEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_dVKqBCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVLRFCumEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_dVLREiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVL4ISumEeyJjNOKZ7e9aA" genericsValue="Activation" base_Element="_dVL4ICumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dVMfMyumEeyJjNOKZ7e9aA" base_Element="_dVMfMCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVMfNCumEeyJjNOKZ7e9aA" genericsValue="Node" base_Element="_dVMfMSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dVMfNSumEeyJjNOKZ7e9aA" base_Element="_dVMfMCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dVMfNiumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dVNGQSumEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_dVNGQCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dVNGQyumEeyJjNOKZ7e9aA" base_Element="_dVNGQiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dVNtVCumEeyJjNOKZ7e9aA" base_Element="_dVNtUCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dVNtVSumEeyJjNOKZ7e9aA" base_Element="_dVNtUCumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dVNtViumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dVOUYSumEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_dVOUYCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVOUYyumEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_dVOUYiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVPigSumEeyJjNOKZ7e9aA" genericsValue="Flow" base_Element="_dVPigCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVQwoCumEeyJjNOKZ7e9aA" genericsValue="Node" base_Element="_dVQJlCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVQwoyumEeyJjNOKZ7e9aA" genericsValue="Integer" base_Element="_dVQwoiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dVSl0CumEeyJjNOKZ7e9aA" base_Element="_dVR-wSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVTM4CumEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_dVSl0SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dVTM5SumEeyJjNOKZ7e9aA" base_Element="_dVTM4SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dVTM5iumEeyJjNOKZ7e9aA" base_Element="_dVTM4SumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dVTM5yumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dVTz8SumEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_dVTz8CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dVTz9iumEeyJjNOKZ7e9aA" base_Element="_dVTz8iumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dVUbACumEeyJjNOKZ7e9aA" base_Element="_dVTz8iumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dVUbASumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dVUbAyumEeyJjNOKZ7e9aA" genericsValue="Node" base_Element="_dVUbAiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVVCESumEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_dVVCECumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dVVpJCumEeyJjNOKZ7e9aA" base_Element="_dVVpICumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dVVpJSumEeyJjNOKZ7e9aA" base_Element="_dVVpICumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dVVpJiumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dVW3QCumEeyJjNOKZ7e9aA" genericsValue="Node" base_Element="_dVWQMyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Array xmi:id="_dVW3RSumEeyJjNOKZ7e9aA" base_Element="_dVW3QSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVW3RiumEeyJjNOKZ7e9aA" genericsValue="Node" base_Element="_dVW3QiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dVXeUSumEeyJjNOKZ7e9aA" base_Element="_dVXeUCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVYscCumEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_dVYFYyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dVYsdSumEeyJjNOKZ7e9aA" base_Element="_dVYscSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dVYsdiumEeyJjNOKZ7e9aA" base_Element="_dVYscSumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dVYsdyumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dVZTgSumEeyJjNOKZ7e9aA" genericsValue="String, Integer" base_Element="_dVZTgCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dVZTgyumEeyJjNOKZ7e9aA" base_Element="_dVZTgiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dVbIsSumEeyJjNOKZ7e9aA" base_Element="_dVbIsCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVcW0SumEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_dVcW0CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dVc95CumEeyJjNOKZ7e9aA" base_Element="_dVc94CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dVc95SumEeyJjNOKZ7e9aA" base_Element="_dVc94CumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dVc95iumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dVfaICumEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_dVezGSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVgoRSumEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_dVgoQSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVhPUCumEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_dVgoRyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVhPUSumEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_dVgoSCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVidcCumEeyJjNOKZ7e9aA" genericsValue="E" base_Element="_dVh2ZSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dVidciumEeyJjNOKZ7e9aA" base_Element="_dVidcSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dVjEhyumEeyJjNOKZ7e9aA" base_Element="_dVjEhiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_dVjrliumEeyJjNOKZ7e9aA" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_dVjrlCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dVjrlyumEeyJjNOKZ7e9aA" base_Element="_dVjrlCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dVk5siumEeyJjNOKZ7e9aA" base_Element="_dVk5sSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dVmH0yumEeyJjNOKZ7e9aA" base_Element="_dVmH0CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVmH1CumEeyJjNOKZ7e9aA" genericsValue="Node" base_Element="_dVmH0SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_dVmH1SumEeyJjNOKZ7e9aA" base_Element="_dVmH0CumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dVmH1iumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dVxuASumEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_dVxuACumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVxuAyumEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_dVxuAiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVyVECumEeyJjNOKZ7e9aA" genericsValue="ScheduleTime" base_Element="_dVxuBCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dVy8JSumEeyJjNOKZ7e9aA" base_Element="_dVy8JCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dVy8JyumEeyJjNOKZ7e9aA" base_Element="_dVy8JiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVzjMCumEeyJjNOKZ7e9aA" genericsValue="ChannelSet" base_Element="_dVy8KCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dVzjMSumEeyJjNOKZ7e9aA" base_Element="_dVy8KCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dVzjNSumEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_dVzjNCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV0KQCumEeyJjNOKZ7e9aA" base_Element="_dVzjNCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV0KQiumEeyJjNOKZ7e9aA" base_Element="_dV0KQSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dV0KRCumEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_dV0KQyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV0KRSumEeyJjNOKZ7e9aA" base_Element="_dV0KQyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV0xUCumEeyJjNOKZ7e9aA" base_Element="_dV0KRiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV0xUiumEeyJjNOKZ7e9aA" base_Element="_dV0xUSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV0xVCumEeyJjNOKZ7e9aA" base_Element="_dV0xUyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV1YYCumEeyJjNOKZ7e9aA" base_Element="_dV0xVSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV1YYiumEeyJjNOKZ7e9aA" base_Element="_dV1YYSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV1YZCumEeyJjNOKZ7e9aA" base_Element="_dV1YYyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV2mhCumEeyJjNOKZ7e9aA" base_Element="_dV2mgyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV3NmyumEeyJjNOKZ7e9aA" base_Element="_dV3NmSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV30oCumEeyJjNOKZ7e9aA" base_Element="_dV3NnCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV30oiumEeyJjNOKZ7e9aA" base_Element="_dV30oSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dV30pCumEeyJjNOKZ7e9aA" genericsValue="Node" base_Element="_dV30oyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV30pSumEeyJjNOKZ7e9aA" base_Element="_dV30oyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dV4bsCumEeyJjNOKZ7e9aA" genericsValue="Integer" base_Element="_dV30piumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV4bsSumEeyJjNOKZ7e9aA" base_Element="_dV30piumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dV4bsyumEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_dV4bsiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV4btCumEeyJjNOKZ7e9aA" base_Element="_dV4bsiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV4btiumEeyJjNOKZ7e9aA" base_Element="_dV4btSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV5CwSumEeyJjNOKZ7e9aA" base_Element="_dV5CwCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV5p1SumEeyJjNOKZ7e9aA" base_Element="_dV5p1CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV5p1yumEeyJjNOKZ7e9aA" base_Element="_dV5p1iumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV5p2SumEeyJjNOKZ7e9aA" base_Element="_dV5p2CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV6Q4CumEeyJjNOKZ7e9aA" base_Element="_dV5p2iumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV6Q4iumEeyJjNOKZ7e9aA" base_Element="_dV6Q4SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV6Q5CumEeyJjNOKZ7e9aA" base_Element="_dV6Q4yumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV6Q5iumEeyJjNOKZ7e9aA" base_Element="_dV6Q5SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV638yumEeyJjNOKZ7e9aA" base_Element="_dV638iumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV639iumEeyJjNOKZ7e9aA" base_Element="_dV639SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV7fASumEeyJjNOKZ7e9aA" base_Element="_dV639yumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dV8GEyumEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_dV8GEiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV8tKCumEeyJjNOKZ7e9aA" base_Element="_dV8tJyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV9UMCumEeyJjNOKZ7e9aA" base_Element="_dV8tKSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV9UNSumEeyJjNOKZ7e9aA" base_Element="_dV9UMSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV9UOiumEeyJjNOKZ7e9aA" base_Element="_dV9UNiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV9UPCumEeyJjNOKZ7e9aA" base_Element="_dV9UOyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dV97QSumEeyJjNOKZ7e9aA" genericsValue="Activation" base_Element="_dV97QCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV97QiumEeyJjNOKZ7e9aA" base_Element="_dV97QCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dV97RCumEeyJjNOKZ7e9aA" genericsValue="String, Integer" base_Element="_dV97QyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV97RSumEeyJjNOKZ7e9aA" base_Element="_dV97QyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV-iUCumEeyJjNOKZ7e9aA" base_Element="_dV97RiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV_JZiumEeyJjNOKZ7e9aA" base_Element="_dV_JZSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV_JaCumEeyJjNOKZ7e9aA" base_Element="_dV_JZyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV_wcCumEeyJjNOKZ7e9aA" base_Element="_dV_JaSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV_wciumEeyJjNOKZ7e9aA" base_Element="_dV_wcSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV_wdCumEeyJjNOKZ7e9aA" base_Element="_dV_wcyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV_wdiumEeyJjNOKZ7e9aA" base_Element="_dV_wdSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dV_weCumEeyJjNOKZ7e9aA" base_Element="_dV_wdyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWAXgCumEeyJjNOKZ7e9aA" base_Element="_dV_weSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWAXgiumEeyJjNOKZ7e9aA" base_Element="_dWAXgSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWAXhCumEeyJjNOKZ7e9aA" base_Element="_dWAXgyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWAXhiumEeyJjNOKZ7e9aA" base_Element="_dWAXhSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWA-kCumEeyJjNOKZ7e9aA" base_Element="_dWAXhyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWA-kiumEeyJjNOKZ7e9aA" base_Element="_dWA-kSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWA-lCumEeyJjNOKZ7e9aA" base_Element="_dWA-kyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWBlpSumEeyJjNOKZ7e9aA" base_Element="_dWBlpCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWCMsCumEeyJjNOKZ7e9aA" base_Element="_dWBlpiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWCzwiumEeyJjNOKZ7e9aA" base_Element="_dWCzwSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWCzxCumEeyJjNOKZ7e9aA" base_Element="_dWCzwyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWCzyCumEeyJjNOKZ7e9aA" base_Element="_dWCzxyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWDa0CumEeyJjNOKZ7e9aA" base_Element="_dWCzySumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWEB5CumEeyJjNOKZ7e9aA" base_Element="_dWEB4yumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWEo8CumEeyJjNOKZ7e9aA" base_Element="_dWEB6CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWEo8iumEeyJjNOKZ7e9aA" base_Element="_dWEo8SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWEo9CumEeyJjNOKZ7e9aA" base_Element="_dWEo8yumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dWFQACumEeyJjNOKZ7e9aA" genericsValue="Integer" base_Element="_dWEo-SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWFQASumEeyJjNOKZ7e9aA" base_Element="_dWEo-SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dWF3ECumEeyJjNOKZ7e9aA" genericsValue="SchedulableObject" base_Element="_dWFQAiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWHFMCumEeyJjNOKZ7e9aA" base_Element="_dWGeJCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWHFMiumEeyJjNOKZ7e9aA" base_Element="_dWHFMSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWHFNSumEeyJjNOKZ7e9aA" base_Element="_dWHFMyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWHFNyumEeyJjNOKZ7e9aA" base_Element="_dWHFNiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWHsQCumEeyJjNOKZ7e9aA" base_Element="_dWHFOCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWHsQiumEeyJjNOKZ7e9aA" base_Element="_dWHsQSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWHsRCumEeyJjNOKZ7e9aA" base_Element="_dWHsQyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWHsRiumEeyJjNOKZ7e9aA" base_Element="_dWHsRSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWI6ZCumEeyJjNOKZ7e9aA" base_Element="_dWI6YyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWJhcCumEeyJjNOKZ7e9aA" base_Element="_dWI6ZSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWJhciumEeyJjNOKZ7e9aA" base_Element="_dWJhcSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWJhdCumEeyJjNOKZ7e9aA" base_Element="_dWJhcyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWJhdiumEeyJjNOKZ7e9aA" base_Element="_dWJhdSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWKIgCumEeyJjNOKZ7e9aA" base_Element="_dWJhdyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWKIgyumEeyJjNOKZ7e9aA" base_Element="_dWKIgSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWKIhiumEeyJjNOKZ7e9aA" base_Element="_dWKIhCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWKIiSumEeyJjNOKZ7e9aA" base_Element="_dWKIhyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWKvkSumEeyJjNOKZ7e9aA" base_Element="_dWKvkCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWKvkyumEeyJjNOKZ7e9aA" base_Element="_dWKvkiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWLWoCumEeyJjNOKZ7e9aA" base_Element="_dWKvlCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWMkwCumEeyJjNOKZ7e9aA" base_Element="_dWL9uyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWMkxCumEeyJjNOKZ7e9aA" base_Element="_dWMkwyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dWNL0CumEeyJjNOKZ7e9aA" genericsValue="InstructionParameters" base_Element="_dWMkxSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWNL0SumEeyJjNOKZ7e9aA" base_Element="_dWMkxSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWNL0yumEeyJjNOKZ7e9aA" base_Element="_dWNL0iumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWNy4SumEeyJjNOKZ7e9aA" base_Element="_dWNy4CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWNy4yumEeyJjNOKZ7e9aA" base_Element="_dWNy4iumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWNy5SumEeyJjNOKZ7e9aA" base_Element="_dWNy5CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWNy5yumEeyJjNOKZ7e9aA" base_Element="_dWNy5iumEeyJjNOKZ7e9aA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_dWOZ8CumEeyJjNOKZ7e9aA" name="getNumChannels" method="_dWs7FiumEeyJjNOKZ7e9aA">
      <ownedParameter xmi:id="_dWOZ8SumEeyJjNOKZ7e9aA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_dWOZ8iumEeyJjNOKZ7e9aA" base_Element="_dWOZ8CumEeyJjNOKZ7e9aA">
    <annotations xmi:id="_dWOZ8yumEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWOZ9iumEeyJjNOKZ7e9aA" base_Element="_dWOZ9CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWPBAiumEeyJjNOKZ7e9aA" base_Element="_dWPBACumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWPoGyumEeyJjNOKZ7e9aA" base_Element="_dWPoGiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWQPICumEeyJjNOKZ7e9aA" base_Element="_dWPoHCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWQPIiumEeyJjNOKZ7e9aA" base_Element="_dWQPISumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWQPJCumEeyJjNOKZ7e9aA" base_Element="_dWQPIyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWQPJiumEeyJjNOKZ7e9aA" base_Element="_dWQPJSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWQPKCumEeyJjNOKZ7e9aA" base_Element="_dWQPJyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWQ2MCumEeyJjNOKZ7e9aA" base_Element="_dWQPKSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWQ2MiumEeyJjNOKZ7e9aA" base_Element="_dWQ2MSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWQ2NCumEeyJjNOKZ7e9aA" base_Element="_dWQ2MyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWQ2NiumEeyJjNOKZ7e9aA" base_Element="_dWQ2NSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWQ2OCumEeyJjNOKZ7e9aA" base_Element="_dWQ2NyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWRdQSumEeyJjNOKZ7e9aA" base_Element="_dWQ2OSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWRdQyumEeyJjNOKZ7e9aA" base_Element="_dWRdQiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWRdRSumEeyJjNOKZ7e9aA" base_Element="_dWRdRCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWRdRyumEeyJjNOKZ7e9aA" base_Element="_dWRdRiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWSEVSumEeyJjNOKZ7e9aA" base_Element="_dWSEVCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWSEVyumEeyJjNOKZ7e9aA" base_Element="_dWSEViumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWSEWSumEeyJjNOKZ7e9aA" base_Element="_dWSEWCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWSrYiumEeyJjNOKZ7e9aA" base_Element="_dWSrYSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWSrZCumEeyJjNOKZ7e9aA" base_Element="_dWSrYyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWTScCumEeyJjNOKZ7e9aA" base_Element="_dWSrZSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWTSciumEeyJjNOKZ7e9aA" base_Element="_dWTScSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWTSdCumEeyJjNOKZ7e9aA" base_Element="_dWTScyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWTSdiumEeyJjNOKZ7e9aA" base_Element="_dWTSdSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWT5gCumEeyJjNOKZ7e9aA" base_Element="_dWTSdyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWT5giumEeyJjNOKZ7e9aA" base_Element="_dWT5gSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWVHpCumEeyJjNOKZ7e9aA" base_Element="_dWVHoiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWVHqSumEeyJjNOKZ7e9aA" base_Element="_dWVHpyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWVusyumEeyJjNOKZ7e9aA" base_Element="_dWVusiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dWVutSumEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_dWVutCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_dWWVwSumEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_dWWVwCumEeyJjNOKZ7e9aA"/>
  <uml:OpaqueBehavior xmi:id="_dWs7FiumEeyJjNOKZ7e9aA" name="getNumChannels" specification="_dWOZ8CumEeyJjNOKZ7e9aA">
    <ownedParameter xmi:id="_dWs7FyumEeyJjNOKZ7e9aA" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_dXF8oCumEeyJjNOKZ7e9aA" base_Element="_dXFVkCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXF8oyumEeyJjNOKZ7e9aA" base_Element="_dXF8oSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXF8piumEeyJjNOKZ7e9aA" base_Element="_dXF8pCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXGjsCumEeyJjNOKZ7e9aA" base_Element="_dXF8pyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXGjsyumEeyJjNOKZ7e9aA" base_Element="_dXGjsSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXGjtiumEeyJjNOKZ7e9aA" base_Element="_dXGjtCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXGjuSumEeyJjNOKZ7e9aA" base_Element="_dXGjtyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXHKwCumEeyJjNOKZ7e9aA" base_Element="_dXGjuiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXHKwyumEeyJjNOKZ7e9aA" base_Element="_dXHKwSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXHKxiumEeyJjNOKZ7e9aA" base_Element="_dXHKxCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXHx0CumEeyJjNOKZ7e9aA" base_Element="_dXHKxyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXHx0yumEeyJjNOKZ7e9aA" base_Element="_dXHx0SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXHx1iumEeyJjNOKZ7e9aA" base_Element="_dXHx1CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXHx2SumEeyJjNOKZ7e9aA" base_Element="_dXHx1yumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXIY4iumEeyJjNOKZ7e9aA" base_Element="_dXIY4CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXIY5SumEeyJjNOKZ7e9aA" base_Element="_dXIY4yumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXIY6CumEeyJjNOKZ7e9aA" base_Element="_dXIY5iumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXI_8CumEeyJjNOKZ7e9aA" base_Element="_dXIY6SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXI_8yumEeyJjNOKZ7e9aA" base_Element="_dXI_8SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXI_9iumEeyJjNOKZ7e9aA" base_Element="_dXI_9CumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXI_-SumEeyJjNOKZ7e9aA" base_Element="_dXI_9yumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXJnAiumEeyJjNOKZ7e9aA" base_Element="_dXJnACumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXJnBSumEeyJjNOKZ7e9aA" base_Element="_dXJnAyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXKOECumEeyJjNOKZ7e9aA" base_Element="_dXJnBiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXKOEyumEeyJjNOKZ7e9aA" base_Element="_dXKOESumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXKOFiumEeyJjNOKZ7e9aA" base_Element="_dXKOFCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXK1IiumEeyJjNOKZ7e9aA" base_Element="_dXK1ICumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXK1JSumEeyJjNOKZ7e9aA" base_Element="_dXK1IyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXK1KCumEeyJjNOKZ7e9aA" base_Element="_dXK1JiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXLcMCumEeyJjNOKZ7e9aA" base_Element="_dXK1KSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXLcMyumEeyJjNOKZ7e9aA" base_Element="_dXLcMSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXLcNiumEeyJjNOKZ7e9aA" base_Element="_dXLcNCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXMDQCumEeyJjNOKZ7e9aA" base_Element="_dXLcNyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXMDQyumEeyJjNOKZ7e9aA" base_Element="_dXMDQSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXMDRiumEeyJjNOKZ7e9aA" base_Element="_dXMDRCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXMDSSumEeyJjNOKZ7e9aA" base_Element="_dXMDRyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXMqUCumEeyJjNOKZ7e9aA" base_Element="_dXMDSiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXMqUyumEeyJjNOKZ7e9aA" base_Element="_dXMqUSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXMqViumEeyJjNOKZ7e9aA" base_Element="_dXMqVCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXNRYCumEeyJjNOKZ7e9aA" base_Element="_dXMqVyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXNRYyumEeyJjNOKZ7e9aA" base_Element="_dXNRYSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXNRZiumEeyJjNOKZ7e9aA" base_Element="_dXNRZCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXN4cCumEeyJjNOKZ7e9aA" base_Element="_dXNRZyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXN4cyumEeyJjNOKZ7e9aA" base_Element="_dXN4cSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXN4diumEeyJjNOKZ7e9aA" base_Element="_dXN4dCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXN4eSumEeyJjNOKZ7e9aA" base_Element="_dXN4dyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXOfgCumEeyJjNOKZ7e9aA" base_Element="_dXN4eiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXOfgyumEeyJjNOKZ7e9aA" base_Element="_dXOfgSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXOfhiumEeyJjNOKZ7e9aA" base_Element="_dXOfhCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXPGkCumEeyJjNOKZ7e9aA" base_Element="_dXOfhyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXPGkyumEeyJjNOKZ7e9aA" base_Element="_dXPGkSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXPGliumEeyJjNOKZ7e9aA" base_Element="_dXPGlCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXPtoCumEeyJjNOKZ7e9aA" base_Element="_dXPGlyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXPtoyumEeyJjNOKZ7e9aA" base_Element="_dXPtoSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXPtpiumEeyJjNOKZ7e9aA" base_Element="_dXPtpCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXPtqSumEeyJjNOKZ7e9aA" base_Element="_dXPtpyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXQUsCumEeyJjNOKZ7e9aA" base_Element="_dXPtqiumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXQUsyumEeyJjNOKZ7e9aA" base_Element="_dXQUsSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXQUtiumEeyJjNOKZ7e9aA" base_Element="_dXQUtCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXQ7wCumEeyJjNOKZ7e9aA" base_Element="_dXQUtyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXQ7wyumEeyJjNOKZ7e9aA" base_Element="_dXQ7wSumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXQ7xiumEeyJjNOKZ7e9aA" base_Element="_dXQ7xCumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXRi0CumEeyJjNOKZ7e9aA" base_Element="_dXQ7xyumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_dXRi0yumEeyJjNOKZ7e9aA" base_Element="_dXRi0SumEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:UnresolvedElement xmi:id="_L1KqsDBLEeyJyfgKlcqSwg" base_Element="_L1JckDBLEeyJyfgKlcqSwg"/>
  <UMLLabProfile:UnresolvedElement xmi:id="_YTqLsTBLEeyJyfgKlcqSwg" base_Element="_YTqLsDBLEeyJyfgKlcqSwg"/>
  <UMLLabProfile:UnresolvedElement xmi:id="_ew5U4DBLEeyJyfgKlcqSwg" base_Element="_ew4t0DBLEeyJyfgKlcqSwg"/>
  <UMLLabProfile:UnresolvedElement xmi:id="_imK9UDBLEeyJyfgKlcqSwg" base_Element="_imKWQDBLEeyJyfgKlcqSwg"/>
  <UMLLabProfile:UnresolvedElement xmi:id="_kMKqwDBLEeyJyfgKlcqSwg" base_Element="_kMKDsDBLEeyJyfgKlcqSwg"/>
  <UMLLabProfile:UnresolvedElement xmi:id="_V7haMTBMEeyJyfgKlcqSwg" base_Element="_V7haMDBMEeyJyfgKlcqSwg"/>
  <UMLLabProfile:UnresolvedElement xmi:id="_X0iKQDBMEeyJyfgKlcqSwg" base_Element="_X0hjMDBMEeyJyfgKlcqSwg"/>
  <UMLLabProfile:UnresolvedElement xmi:id="_RESwEDBNEeyJyfgKlcqSwg" base_Element="_RESJADBNEeyJyfgKlcqSwg"/>
  <UMLLabProfile:Generics xmi:id="_nrDyYDHeEeyBLonIa2KKjw" genericsValue="Integer" base_Element="_wlOcsDBMEeyJyfgKlcqSwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0OQqlDXLEeyzKPzbxOg4Ww" base_Element="_0OQqkzXLEeyzKPzbxOg4Ww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0ORRoDXLEeyzKPzbxOg4Ww" base_Element="_0OQqlTXLEeyzKPzbxOg4Ww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0ORRojXLEeyzKPzbxOg4Ww" base_Element="_0ORRoTXLEeyzKPzbxOg4Ww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0ORRpDXLEeyzKPzbxOg4Ww" base_Element="_0ORRozXLEeyzKPzbxOg4Ww"/>
</xmi:XMI>
