<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_mS_aQCueEeyJjNOKZ7e9aA" name="SchedulableObject">
    <eAnnotations xmi:id="_mb--MCueEeyJjNOKZ7e9aA" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_mcCBgCueEeyJjNOKZ7e9aA" source="codegen">
        <details xmi:id="_mcCBgSueEeyJjNOKZ7e9aA" key="codegenDirectory" value="/cs2820-fall21/src"/>
        <details xmi:id="_n3aaYCueEeyJjNOKZ7e9aA" key="AssociatedSourceCode" value="/cs2820-fall21/src/edu/uiowa/cs/warp/AbstractMap.java;1424622298/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Activation.java;1809359660/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Activations.java;820905503/1;/cs2820-fall21/src/edu/uiowa/cs/warp/BasicPoset.java;2224306677/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Channels.java;595789530/1;/cs2820-fall21/src/edu/uiowa/cs/warp/CodeFragment.java;1317884368/1;/cs2820-fall21/src/edu/uiowa/cs/warp/CombinedActivation.java;2029188156/1;/cs2820-fall21/src/edu/uiowa/cs/warp/CommunicationGraph.java;612585676/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ConnectivityPoset.java;79606901/1;/cs2820-fall21/src/edu/uiowa/cs/warp/DeadlineComparator.java;2664873414/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Description.java;1965213309/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Edge.java;3709953189/1;/cs2820-fall21/src/edu/uiowa/cs/warp/FileManager.java;31757812/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Flow.java;3979945578/1;/cs2820-fall21/src/edu/uiowa/cs/warp/FlowMap.java;4084289374/1;/cs2820-fall21/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;1064623610/1;/cs2820-fall21/src/edu/uiowa/cs/warp/GraphViz.java;2298633738/1;/cs2820-fall21/src/edu/uiowa/cs/warp/GraphVizListener.java;1295846020/1;/cs2820-fall21/src/edu/uiowa/cs/warp/InputGraphFile.java;1686457629/1;/cs2820-fall21/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;888741420/1;/cs2820-fall21/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;459276445/1;/cs2820-fall21/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1826505669/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Node.java;1981269113/1;/cs2820-fall21/src/edu/uiowa/cs/warp/NodeMap.java;28649763/1;/cs2820-fall21/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;1765515208/1;/cs2820-fall21/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;4124722036/1;/cs2820-fall21/src/edu/uiowa/cs/warp/PeriodComparator.java;3701604498/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Poset.java;4280983065/1;/cs2820-fall21/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;4276577887/1;/cs2820-fall21/src/edu/uiowa/cs/warp/PriorityComparator.java;3500031587/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Program.java;1985869762/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ProgramSchedule.java;1201325015/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ProgramVisualization.java;1461015684/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;76739592/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;2628899863/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;4036799373/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1809110799/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ReliabilityRow.java;1058057599/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ReliabilityTable.java;2292645629/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;4200694574/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ReportVisualization.java;392587375/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Row.java;2072540828/1;/cs2820-fall21/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;2628500970/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Schedule.java;240224972/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ScheduleTable.java;820659454/1;/cs2820-fall21/src/edu/uiowa/cs/warp/ScheduleTime.java;3343049115/1;/cs2820-fall21/src/edu/uiowa/cs/warp/SimulatorInput.java;3110368559/1;/cs2820-fall21/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;2370839513/1;/cs2820-fall21/src/edu/uiowa/cs/warp/SystemAttributes.java;3931163786/1;/cs2820-fall21/src/edu/uiowa/cs/warp/SystemFactory.java;1558218719/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Table.java;27306893/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Visualization.java;1300506497/1;/cs2820-fall21/src/edu/uiowa/cs/warp/VisualizationFactory.java;560865614/1;/cs2820-fall21/src/edu/uiowa/cs/warp/VisualizationImplementation.java;2830549456/1;/cs2820-fall21/src/edu/uiowa/cs/warp/VisualizationObject.java;2412285771/1;/cs2820-fall21/src/edu/uiowa/cs/warp/Warp.java;3060914214/1;/cs2820-fall21/src/edu/uiowa/cs/warp/WarpDSL.java;790761677/1;/cs2820-fall21/src/edu/uiowa/cs/warp/WarpPoset.java;346020847/1;/cs2820-fall21/src/edu/uiowa/cs/warp/WarpSystem.java;3763510556/1;/cs2820-fall21/src/edu/uiowa/cs/warp/WarpTester.java;1421978700/1;/cs2820-fall21/src/edu/uiowa/cs/warp/WorkLoad.java;3064469822/1;/cs2820-fall21/src/edu/uiowa/cs/warp/WorkLoadDescription.java;3957719957/1;/cs2820-fall21/src/edu/uiowa/cs/warp/WorkLoadListener.java;3074030464/1;/cs2820-fall21/src/edu/uiowa/cs/warp/WorkLoadTest.java;195082332/1;/cs2820-fall21/src/edu/uiowa/cs/warp/SchedulableObject.java;987848086/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_nKzMACueEeyJjNOKZ7e9aA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_nKzzECueEeyJjNOKZ7e9aA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_nKzzESueEeyJjNOKZ7e9aA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_nKzzEiueEeyJjNOKZ7e9aA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_nKzzEyueEeyJjNOKZ7e9aA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_nKzzFCueEeyJjNOKZ7e9aA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_nKzzFSueEeyJjNOKZ7e9aA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_nKzzFiueEeyJjNOKZ7e9aA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_nK0aICueEeyJjNOKZ7e9aA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_nJ6bMCueEeyJjNOKZ7e9aA" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_nJ7CQCueEeyJjNOKZ7e9aA" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_nJ7CQSueEeyJjNOKZ7e9aA" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_nJ_TsCueEeyJjNOKZ7e9aA" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_nLaQACueEeyJjNOKZ7e9aA" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_neCRECueEeyJjNOKZ7e9aA" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_nLjZ8CueEeyJjNOKZ7e9aA" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_neI-wiueEeyJjNOKZ7e9aA" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_nLl2MCueEeyJjNOKZ7e9aA" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_neKz8CueEeyJjNOKZ7e9aA" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_neKz8iueEeyJjNOKZ7e9aA" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nN2gACueEeyJjNOKZ7e9aA" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_nfGBACueEeyJjNOKZ7e9aA" general="_nc4agCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngQeoCueEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngQeoSueEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhX48CueEeyJjNOKZ7e9aA" name="AbstractMap" specification="_nN6xcCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhX48SueEeyJjNOKZ7e9aA" type="_nN2gACueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super();
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nN6xcCueEeyJjNOKZ7e9aA" name="AbstractMap" method="_nhX48CueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nN7YgCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nN7YgSueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nN7YgiueEeyJjNOKZ7e9aA" type="_nN2gACueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nN7_kCueEeyJjNOKZ7e9aA" name="Activation">
              <generalization xmi:id="_nc_vQSueEeyJjNOKZ7e9aA" general="_nSnrQCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngRFsCueEeyJjNOKZ7e9aA" name="coordinators" type="_nc5ooCueEeyJjNOKZ7e9aA" isReadOnly="true" association="_niuj0CueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngRswCueEeyJjNOKZ7e9aA" name="edges" type="_nc5ooCueEeyJjNOKZ7e9aA" isReadOnly="true" association="_nivK4SueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngRswiueEeyJjNOKZ7e9aA" name="additionalScheduleTimes" type="_nc5ooCueEeyJjNOKZ7e9aA" isReadOnly="true" association="_nivx8SueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngST0SueEeyJjNOKZ7e9aA" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ngST0iueEeyJjNOKZ7e9aA" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_nfHPISueEeyJjNOKZ7e9aA" client="_nN7_kCueEeyJjNOKZ7e9aA" supplier="_nfGoESueEeyJjNOKZ7e9aA" contract="_nfGoESueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhaVMCueEeyJjNOKZ7e9aA" name="Activation" specification="_nN9NsCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhaVMSueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhaVMiueEeyJjNOKZ7e9aA" type="_nN7_kCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super();
		setName(name);
		this.edges = new ArrayList&lt;Edge>();
		this.coordinators = new ArrayList&lt;String>();
		this.conflicts = new HashSet&lt;String>();
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nha8QCueEeyJjNOKZ7e9aA" name="Activation" specification="_nc7d0CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nha8QSueEeyJjNOKZ7e9aA" name="elem" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nha8QiueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nha8QyueEeyJjNOKZ7e9aA" type="_nN7_kCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(elem, time);
		this.edges = new ArrayList&lt;Edge>();
		this.edges.addAll(elem.getEdges());
		this.coordinators = new ArrayList&lt;String>();
		this.coordinators.addAll(elem.getCoordinators());
		// conflicts = new Set&lt;String>();
		this.conflicts = new HashSet&lt;String>();
		this.conflicts.addAll(elem.getConflicts());
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nha8RCueEeyJjNOKZ7e9aA" name="clone" specification="_nN-b0CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nha8RSueEeyJjNOKZ7e9aA" type="_nN7_kCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();
		var clone = new Activation(this, time);
		return clone;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nha8RiueEeyJjNOKZ7e9aA" name="getEdgesByReleaseTime" specification="_nOCtQSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nha8RyueEeyJjNOKZ7e9aA" type="_nQbS5CueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return new 
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nha8SCueEeyJjNOKZ7e9aA" name="getEdgesByLatestReleaseTime" specification="_nOD7YCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nha8SSueEeyJjNOKZ7e9aA" type="_nQbS5CueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return new 
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhbjUCueEeyJjNOKZ7e9aA" name="getEdgesByPeriod" specification="_nOFJgCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhbjUSueEeyJjNOKZ7e9aA" type="_nQbS5CueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return new 
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhbjUiueEeyJjNOKZ7e9aA" name="getEdgesByDeadline" specification="_nOGXoCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhbjUyueEeyJjNOKZ7e9aA" type="_nQbS5CueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return new 
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhbjVCueEeyJjNOKZ7e9aA" name="getEdgesByPriority" specification="_nOG-sSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhbjVSueEeyJjNOKZ7e9aA" type="_nQbS5CueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return new 
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhbjViueEeyJjNOKZ7e9aA" name="addEdges" specification="_nfIdQCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhbjVyueEeyJjNOKZ7e9aA" name="edges" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>this.edges.addAll(edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhbjWCueEeyJjNOKZ7e9aA" name="addEdge" specification="_nc8r8SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhbjWSueEeyJjNOKZ7e9aA" name="edge" type="_nO1-gCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>this.edges.add(edge);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhbjWiueEeyJjNOKZ7e9aA" name="increaseEdgePhases" specification="_nOIz4CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhbjWyueEeyJjNOKZ7e9aA" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed
			for (Edge edge: this.edges) {
				var oldPhase = edge.getPhase();
				edge.setPhase(oldPhase+additionalOffset);
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhbjXCueEeyJjNOKZ7e9aA" name="updatePriorityAndRelease" specification="_nOIz4iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhbjXSueEeyJjNOKZ7e9aA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();
		if (currentTime >= lastUpdateTime) {
			for(Edge edge: edges) {
				edge.setNextReleaseTime(currentTime);
			}
			
			/* get the edges with earliest release time and 
			 * highest priority ==> get head of the queue just built
			 */
			var edgesByReleaseTime = getEdgesByReleaseTime();
			var firstEdge = edgesByReleaseTime.element();
			setPhase(firstEdge.getPhase()); 
			var edgesByPeriod = getEdgesByPeriod();
			firstEdge = edgesByPeriod.element();
			setPeriod(firstEdge.getPeriod()); // shortest period 
			var edgesByDeadline = getEdgesByDeadline();
			firstEdge = edgesByDeadline.element();
			setDeadline(firstEdge.getDeadline()); // earliest deadline
			var edgesByPrioriy = getEdgesByPriority();
			firstEdge = edgesByPrioriy.element();
			setPriority(firstEdge.getPriority());
			
			/* With the partition scheduling parameters set to match  
			 * the highest priority edge with respect to the parameter, 
			 * we can now set the next release time based on the
			 * current time.
			 * */
			setNextReleaseTime(currentTime);
			
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhcKYCueEeyJjNOKZ7e9aA" name="addConflict" specification="_nOJa8CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhcKYSueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhcKYiueEeyJjNOKZ7e9aA" name="addConflicts" specification="_nfJEUSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhcKYyueEeyJjNOKZ7e9aA" name="conflicts" type="_nc62wSueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhcKZCueEeyJjNOKZ7e9aA" name="addCoordinator" specification="_nOKCACueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhcKZSueEeyJjNOKZ7e9aA" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhcKZiueEeyJjNOKZ7e9aA" name="addCoordinators" specification="_nfJrYSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhcKZyueEeyJjNOKZ7e9aA" name="coordinators" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhcKaCueEeyJjNOKZ7e9aA" name="addScheduleTimes" specification="_nfKScSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhcKaSueEeyJjNOKZ7e9aA" name="scheduleTime" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhcKaiueEeyJjNOKZ7e9aA" name="getNextScheduleTime" specification="_nOKpECueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhcKayueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhcKbCueEeyJjNOKZ7e9aA" type="_nQ8QQCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);
		var moreScheduleTimes = getAdditionalScheduleTimes();
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();
		while (iter.hasNext() ) {
			var next = iter.next();
			if (next.getStartTime() > time) {
				result = next;
				break;
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhcxcCueEeyJjNOKZ7e9aA" name="getMatchingEndTime" specification="_nOKpEiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhcxcSueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhcxciueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;
		var moreScheduleTimes = getAdditionalScheduleTimes();
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();
		// var nextEndTime = time;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {
			// nextEndTime = iter.next().getEndTime();
			var scheduleTime = iter.next();
			if (time == scheduleTime.getStartTime()) {
				result = scheduleTime.getEndTime();
				break;
			}
		}
		
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhcxcyueEeyJjNOKZ7e9aA" name="getNextStartTime" specification="_nOLQIiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhcxdCueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhcxdSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();
		var nextStartTime = time;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {
			nextStartTime = iter.next().getStartTime();
		}
		if (nextStartTime == time) {
			/* no next StartTime found 
			 * could be an error 
			 */
			nextStartTime = Integer.MAX_VALUE;
			
		}
		return nextStartTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhcxdiueEeyJjNOKZ7e9aA" name="getNextEndTime" specification="_nOL3MCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhcxdyueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhcxeCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();
		var nextEndTime = time;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {
			nextEndTime = iter.next().getEndTime();
		}
		if (nextEndTime == time) {
			/* no next StartTime found 
			 * could be an error 
			 */
			nextEndTime = Integer.MAX_VALUE;
			
		}
		return nextEndTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhcxeSueEeyJjNOKZ7e9aA" name="getNumEdges" specification="_nOMeQCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhcxeiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhcxeyueEeyJjNOKZ7e9aA" name="compareTo" specification="_nc9TASueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhcxfCueEeyJjNOKZ7e9aA" name="obj" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhcxfSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhdYgCueEeyJjNOKZ7e9aA" name="conflictExists" specification="_nc96EiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhdYgSueEeyJjNOKZ7e9aA" name="obj" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhdYgiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;
		/* create a copy of this.conflicts and obj.conflicts
		 * and then check the intersection of the two 
		 * sets. 
		 * Conflicts exists if |intersection| > 0
		 */
		var conflicts = new HashSet&lt;String>();
		conflicts.addAll(getConflicts());
		var objConflicts = new HashSet&lt;String>();
		objConflicts.addAll(obj.getConflicts());
		conflicts.retainAll(objConflicts); // get the intersection
		if (conflicts.size() > 0) {
			result = true; // |intersection| > 0 => conflict
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhdYgyueEeyJjNOKZ7e9aA" name="canCombine" specification="_nc96FSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhdYhCueEeyJjNOKZ7e9aA" name="a2" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhdYhSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;
		/* make sure a2 is not null */
		if (a2 != null) {
			var newEntryCoordinator = a2.getCoordinators().get(0);
			if (getCoordinators().contains(newEntryCoordinator)) {
				/* The (first) coordinator of the newEntry
				 * is in the list of coordinators of the prior entry.
				 * Thus, these two can be combined for efficiency.
				 */
				result = true;
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhdYhiueEeyJjNOKZ7e9aA" name="getDelta" specification="_nONFUCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhdYhyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;
		for (Edge edge: getEdges()) {
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());
		}
		return maxTxPerLink;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhdYiCueEeyJjNOKZ7e9aA" name="getExecutionDuration" specification="_nONFUiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhdYiSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming 
		 * the WARP pipeline scheduling approach, the activation only
		 * executes for Delta + (numEdges - 1) time units, because
		 * a new edge will be added to the pipeline every time unit
		 * it executes.
		 */
		return getDelta() + (getNumEdges() - 1);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhdYiiueEeyJjNOKZ7e9aA" name="getCombinedExecutionDuration" specification="_nc-hIiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhdYiyueEeyJjNOKZ7e9aA" name="a2" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhdYjCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming 
		 * the WARP pipeline scheduling approach, the activation only
		 * executes for Delta + (numEdges - 1) time units, because
		 * a new edge will be added to the pipeline every time unit
		 * it executes.
		 * So, if combined, we consider edges in both activations
		 */
		var result = 0;
		if (a2 != null) {
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhdYjSueEeyJjNOKZ7e9aA" name="printAll" specification="_nONsYSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhdYjiueEeyJjNOKZ7e9aA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);
		this.printAll();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhd_kCueEeyJjNOKZ7e9aA" name="printAll" specification="_nOOTcCueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>super.print();
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhd_kSueEeyJjNOKZ7e9aA" name="printEdges" specification="_nc-hJSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhd_kiueEeyJjNOKZ7e9aA" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhd_kyueEeyJjNOKZ7e9aA" name="edges" type="_nQaEwCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);
		printEdges(edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhemoCueEeyJjNOKZ7e9aA" name="printEdges" specification="_nc_IMSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhemoSueEeyJjNOKZ7e9aA" name="edges" type="_nQaEwCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();
 		q.addAll(edges);
 		Iterator&lt;Edge> qValue = q.iterator();
         while (qValue.hasNext()) {
         	var next = q.poll();
         	next.print();
         }
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nN9NsCueEeyJjNOKZ7e9aA" name="Activation" visibility="package" method="_nhaVMCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nN90wSueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nN90wiueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nN90wCueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nN90wyueEeyJjNOKZ7e9aA" type="_nN7_kCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nN-b0CueEeyJjNOKZ7e9aA" name="clone" method="_nha8RCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nc8E4SueEeyJjNOKZ7e9aA" type="_nN7_kCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nOCtQSueEeyJjNOKZ7e9aA" name="getEdgesByReleaseTime" method="_nha8RiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niMYUCueEeyJjNOKZ7e9aA">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_nc8E4iueEeyJjNOKZ7e9aA" type="_nQbS5CueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nOD7YCueEeyJjNOKZ7e9aA" name="getEdgesByLatestReleaseTime" method="_nha8SCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niMYUSueEeyJjNOKZ7e9aA">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_nc8E4yueEeyJjNOKZ7e9aA" type="_nQbS5CueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nOFJgCueEeyJjNOKZ7e9aA" name="getEdgesByPeriod" method="_nhbjUCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niM_YCueEeyJjNOKZ7e9aA">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_nc8E5CueEeyJjNOKZ7e9aA" type="_nQbS5CueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nOGXoCueEeyJjNOKZ7e9aA" name="getEdgesByDeadline" method="_nhbjUiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niM_YSueEeyJjNOKZ7e9aA">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_nc8E5SueEeyJjNOKZ7e9aA" type="_nQbS5CueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nOG-sSueEeyJjNOKZ7e9aA" name="getEdgesByPriority" method="_nhbjVCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niM_YiueEeyJjNOKZ7e9aA">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_nc8r8CueEeyJjNOKZ7e9aA" type="_nQbS5CueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nOIz4CueEeyJjNOKZ7e9aA" name="increaseEdgePhases" method="_nhbjWiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niM_YyueEeyJjNOKZ7e9aA">
                  <body>Increase the phase of each edge by the input parameter.
	 * 
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_nOIz4SueEeyJjNOKZ7e9aA" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nOIz4iueEeyJjNOKZ7e9aA" name="updatePriorityAndRelease" method="_nhbjXCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niM_ZCueEeyJjNOKZ7e9aA">
                  <body>Updates priority and release time of 
	 * this activation.&lt;br>
	 * 
	 * The priority of the element is equal to the
	 * edge priority with the earliest release time.
	 * Thus, it can change dynamically. &lt;br>
	 *
	 * The release time of the element is equal to the
	 * edge priority with the earliest release time.
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_nOIz4yueEeyJjNOKZ7e9aA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nOJa8CueEeyJjNOKZ7e9aA" name="addConflict" method="_nhcKYCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nOJa8SueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nOKCACueEeyJjNOKZ7e9aA" name="addCoordinator" method="_nhcKZCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nOKCASueEeyJjNOKZ7e9aA" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nOKpECueEeyJjNOKZ7e9aA" name="getNextScheduleTime" method="_nhcKaiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niM_ZiueEeyJjNOKZ7e9aA">
                  <body>getNextScheduleTime returns the next entry in the additional
	 * schedule time array list whose start time is greater than the input
	 * parameter time. MAX_INT is returned if such a time
	 * is not found
	 * @param next
	 * @param time
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_nOKpESueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nc9TACueEeyJjNOKZ7e9aA" type="_nQ8QQCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nOKpEiueEeyJjNOKZ7e9aA" name="getMatchingEndTime" method="_nhcxcCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niM_ZyueEeyJjNOKZ7e9aA">
                  <body>getMatchingEndTime returns the next end time in the additional
	 * schedule time array list that is greater than the input
	 * parameter time. MAX_INT is returned if such a time
	 * is not found
	 * @param next
	 * @param time
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_nOLQICueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOLQISueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nOLQIiueEeyJjNOKZ7e9aA" name="getNextStartTime" method="_nhcxcyueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niM_aCueEeyJjNOKZ7e9aA">
                  <body>getNextStartTime returns the next start time in the additional
	 * schedule time array list that is greater than the input
	 * parameter time. MAX_INT is returned if such a time
	 * is not found
	 * @param next
	 * @param time
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_nOLQIyueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOLQJCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nOL3MCueEeyJjNOKZ7e9aA" name="getNextEndTime" method="_nhcxdiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niM_aSueEeyJjNOKZ7e9aA">
                  <body>getNextEndTime returns the next end time in the additional
	 * schedule time array list that is greater than the input
	 * parameter time. MAX_INT is returned if such a time
	 * is not found
	 * @param next
	 * @param time
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_nOL3MSueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOL3MiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nOMeQCueEeyJjNOKZ7e9aA" name="getNumEdges" method="_nhcxeSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nOMeQSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nONFUCueEeyJjNOKZ7e9aA" name="getDelta" method="_nhdYhiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niM_aiueEeyJjNOKZ7e9aA">
                  <body>Returns the maximum number of transmissions
	 * needed on any link in activation to ensure e2e 
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_nONFUSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nONFUiueEeyJjNOKZ7e9aA" name="getExecutionDuration" method="_nhdYiCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nONsYCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nONsYSueEeyJjNOKZ7e9aA" name="printAll" method="_nhdYjSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nONsYiueEeyJjNOKZ7e9aA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nOOTcCueEeyJjNOKZ7e9aA" name="printAll" method="_nhd_kCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nc7d0CueEeyJjNOKZ7e9aA" name="Activation" visibility="package" method="_nha8QCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nc7d0yueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nc7d1CueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nc7d0SueEeyJjNOKZ7e9aA" name="elem" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nc7d0iueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nc8E4CueEeyJjNOKZ7e9aA" type="_nN7_kCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nc8r8SueEeyJjNOKZ7e9aA" name="addEdge" method="_nhbjWCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nc8r8iueEeyJjNOKZ7e9aA" name="edge" type="_nO1-gCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nc9TASueEeyJjNOKZ7e9aA" name="compareTo" method="_nhcxeyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nc9TAiueEeyJjNOKZ7e9aA" name="obj" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nc9TAyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nc96EiueEeyJjNOKZ7e9aA" name="conflictExists" method="_nhdYgCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nc96EyueEeyJjNOKZ7e9aA" name="obj" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nc96FCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nc96FSueEeyJjNOKZ7e9aA" name="canCombine" method="_nhdYgyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nc-hICueEeyJjNOKZ7e9aA" name="a2" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nc-hISueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nc-hIiueEeyJjNOKZ7e9aA" name="getCombinedExecutionDuration" method="_nhdYiiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nc-hIyueEeyJjNOKZ7e9aA" name="a2" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nc-hJCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nc-hJSueEeyJjNOKZ7e9aA" name="printEdges" visibility="private" method="_nhd_kSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nc-hJiueEeyJjNOKZ7e9aA" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nc-hJyueEeyJjNOKZ7e9aA" name="edges" type="_nQaEwCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nc_IMSueEeyJjNOKZ7e9aA" name="printEdges" visibility="private" method="_nhemoCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nc_IMiueEeyJjNOKZ7e9aA" name="edges" type="_nQaEwCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nfIdQCueEeyJjNOKZ7e9aA" name="addEdges" method="_nhbjViueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nfIdQSueEeyJjNOKZ7e9aA" name="edges" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nfJEUSueEeyJjNOKZ7e9aA" name="addConflicts" method="_nhcKYiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nfJEUiueEeyJjNOKZ7e9aA" name="conflicts" type="_nc62wSueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nfJrYSueEeyJjNOKZ7e9aA" name="addCoordinators" method="_nhcKZiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nfJrYiueEeyJjNOKZ7e9aA" name="coordinators" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nfKScSueEeyJjNOKZ7e9aA" name="addScheduleTimes" method="_nhcKaCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niM_ZSueEeyJjNOKZ7e9aA">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_nfK5gCueEeyJjNOKZ7e9aA" name="scheduleTime" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nOVBICueEeyJjNOKZ7e9aA" name="Activations">
              <generalization xmi:id="_ndBkcCueEeyJjNOKZ7e9aA" general="_nN2gACueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngTh8CueEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngTh8SueEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nOVoMCueEeyJjNOKZ7e9aA" name="BasicPoset">
              <ownedComment xmi:id="_niM_ayueEeyJjNOKZ7e9aA">
                <body>ConnectivityPoset extends Poset by selecting
primary coordinator in the flow based on highest
local connectivity.

@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_ndCLhSueEeyJjNOKZ7e9aA" general="_nPpPwCueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhemoiueEeyJjNOKZ7e9aA" name="BasicPoset" specification="_ndCLgCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhemoyueEeyJjNOKZ7e9aA" name="workload" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhempCueEeyJjNOKZ7e9aA" type="_nOVoMCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(workload);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ndCLgCueEeyJjNOKZ7e9aA" name="BasicPoset" visibility="package" method="_nhemoiueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_ndCLgiueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ndCLgyueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ndCLgSueEeyJjNOKZ7e9aA" name="workload" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndCLhCueEeyJjNOKZ7e9aA" type="_nOVoMCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nOW2UCueEeyJjNOKZ7e9aA" name="Channels">
              <ownedComment xmi:id="_niM_bCueEeyJjNOKZ7e9aA">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ngTh9CueEeyJjNOKZ7e9aA" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngUJASueEeyJjNOKZ7e9aA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngUJAyueEeyJjNOKZ7e9aA" name="channelsAvailable" visibility="package" type="_nc5ooCueEeyJjNOKZ7e9aA" association="_nivx9CueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhfNsyueEeyJjNOKZ7e9aA" name="Channels" specification="_nOagsCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhfNtCueEeyJjNOKZ7e9aA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhfNtSueEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhfNtiueEeyJjNOKZ7e9aA" type="_nOW2UCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;
     this.verbose = verbose;  
     this.channelsAvailable = new ArrayList&lt;ChannelSet>();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhfNtyueEeyJjNOKZ7e9aA" name="getChannelSet" specification="_nObu0CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhfNuCueEeyJjNOKZ7e9aA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhfNuSueEeyJjNOKZ7e9aA" type="_nc6PsCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot)); // get the channel set for this timeSlot
 	return channelSet;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhfNuiueEeyJjNOKZ7e9aA" name="addNewChannelSet" specification="_nOcV4SueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);
 	channelsAvailable.add(channels);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhfNuyueEeyJjNOKZ7e9aA" name="isEmpty" specification="_nOc88CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhfNvCueEeyJjNOKZ7e9aA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhfNvSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this timeSlot
 	return channelSet.isEmpty(); // returns true channel set is empty and false if not
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhfNviueEeyJjNOKZ7e9aA" name="removeChannel" specification="_nOdkACueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhfNvyueEeyJjNOKZ7e9aA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhfNwCueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhfNwSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;
 	ChannelSet channels = channelsAvailable.get(timeSlot);
 	result = channels.remove(channel);
 	return result;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhfNwiueEeyJjNOKZ7e9aA" name="addChannel" specification="_nOeLECueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhfNwyueEeyJjNOKZ7e9aA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhfNxCueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhfNxSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;
 	ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set
 	result = channels.add(channel); // remove the channel, returning the result
 	return result;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhf0wCueEeyJjNOKZ7e9aA" name="getNumChannels" specification="_nOeLFCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhf0wSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nOagsCueEeyJjNOKZ7e9aA" name="Channels" visibility="package" method="_nhfNsyueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nObHwCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nObHwSueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nOagsSueEeyJjNOKZ7e9aA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOagsiueEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nObHwiueEeyJjNOKZ7e9aA" type="_nOW2UCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nObu0CueEeyJjNOKZ7e9aA" name="getChannelSet" method="_nhfNtyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nObu0SueEeyJjNOKZ7e9aA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nfNVwCueEeyJjNOKZ7e9aA" type="_nc6PsCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nOcV4SueEeyJjNOKZ7e9aA" name="addNewChannelSet" method="_nhfNuiueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nOc88CueEeyJjNOKZ7e9aA" name="isEmpty" method="_nhfNuyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nOc88SueEeyJjNOKZ7e9aA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOc88iueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nOdkACueEeyJjNOKZ7e9aA" name="removeChannel" method="_nhfNviueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nOdkASueEeyJjNOKZ7e9aA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOdkAiueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOdkAyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nOeLECueEeyJjNOKZ7e9aA" name="addChannel" method="_nhfNwiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nOeLESueEeyJjNOKZ7e9aA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOeLEiueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOeLEyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nOeLFCueEeyJjNOKZ7e9aA" name="getNumChannels" method="_nhf0wCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nOeLFSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_nOXdYCueEeyJjNOKZ7e9aA" name="ChannelSet" visibility="private">
                <generalization xmi:id="_nfMusCueEeyJjNOKZ7e9aA" general="_nc6PsCueEeyJjNOKZ7e9aA"/>
                <ownedAttribute xmi:id="_ngTh8iueEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngTh8yueEeyJjNOKZ7e9aA" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhempSueEeyJjNOKZ7e9aA" name="ChannelSet" specification="_nOYEcCueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nhempiueEeyJjNOKZ7e9aA" type="_nOXdYCueEeyJjNOKZ7e9aA" direction="return"/>
                  <language>java</language>
                  <body>super();
	    </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhfNsCueEeyJjNOKZ7e9aA" name="ChannelSet" specification="_nOZSkCueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nhfNsSueEeyJjNOKZ7e9aA" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_nhfNsiueEeyJjNOKZ7e9aA" type="_nOXdYCueEeyJjNOKZ7e9aA" direction="return"/>
                  <language>java</language>
                  <body>super();
	    	for (int i = 0; i &lt; nChannels; i++) {  // ASSUMES channels range from 0 to nChannels-1
	    		this.add(String.valueOf(i));
	    	}
	    </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_nOYEcCueEeyJjNOKZ7e9aA" name="ChannelSet" visibility="private" method="_nhempSueEeyJjNOKZ7e9aA">
                  <eAnnotations xmi:id="_nOYrgCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_nOYrgSueEeyJjNOKZ7e9aA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_nOYrgiueEeyJjNOKZ7e9aA" type="_nOXdYCueEeyJjNOKZ7e9aA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_nOZSkCueEeyJjNOKZ7e9aA" name="ChannelSet" visibility="private" method="_nhfNsCueEeyJjNOKZ7e9aA">
                  <eAnnotations xmi:id="_nOZSkiueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_nOZSkyueEeyJjNOKZ7e9aA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_nOZSkSueEeyJjNOKZ7e9aA" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_nOZSlCueEeyJjNOKZ7e9aA" type="_nOXdYCueEeyJjNOKZ7e9aA" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nOgAQCueEeyJjNOKZ7e9aA" name="CodeFragment">
              <ownedAttribute xmi:id="_ngUwEiueEeyJjNOKZ7e9aA" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngUwEyueEeyJjNOKZ7e9aA" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngUwFCueEeyJjNOKZ7e9aA" name="edges" visibility="package" type="_nc5ooCueEeyJjNOKZ7e9aA" association="_niwZASueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngVXIiueEeyJjNOKZ7e9aA" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngV-MCueEeyJjNOKZ7e9aA" name="codeFragment" visibility="package" type="_nc5ooCueEeyJjNOKZ7e9aA" association="_niwZBCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngV-MyueEeyJjNOKZ7e9aA" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngWlQSueEeyJjNOKZ7e9aA" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhf0wiueEeyJjNOKZ7e9aA" name="CodeFragment" specification="_nOgnUCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhf0wyueEeyJjNOKZ7e9aA" type="_nOgAQCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;
		this.channel = 0;
		this.edges = null;
		this.coordinator = null;
		this.codeFragment = new ArrayList&lt;String>();
		this.codeFragment.add(SLEEP);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhf0xCueEeyJjNOKZ7e9aA" name="CodeFragment" specification="_nfN80CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhf0xSueEeyJjNOKZ7e9aA" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhf0xiueEeyJjNOKZ7e9aA" name="edges" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhf0xyueEeyJjNOKZ7e9aA" name="coordinators" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhf0yCueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhf0ySueEeyJjNOKZ7e9aA" type="_nOgAQCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;
		this.channel = channel;
		this.edges = edges;
		this.coordinator = coordinators.get(0);
		this.codeFragment = new ArrayList&lt;String>();
		if (multipleCoordinators(coordinators)) {
			reportIfDifferentCoordinators(coordinators);
		}	
		generateCodeFragment();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhf0yiueEeyJjNOKZ7e9aA" name="getCoordinator" specification="_nOh1cCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhf0yyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhf0zCueEeyJjNOKZ7e9aA" name="instructions" specification="_nOh1ciueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhf0zSueEeyJjNOKZ7e9aA" type="_nc5ooCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return codeFragment;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhf0ziueEeyJjNOKZ7e9aA" name="size" specification="_nOjDkCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhf0zyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhgb0CueEeyJjNOKZ7e9aA" name="generateCodeFragment" specification="_nOjDkiueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new 
				PriorityComparator&lt;Edge>(),this.edges);
		Iterator&lt;Edge> q = edgeQueue.iterator();
		var size = edgeQueue.size();
		/* the code length will be equal to 
		 * delta + #edges -1
		 */
		var codeLength = delta + size -1;
		var basicInstructions = new ArrayList&lt;String>();
		/* create basic instructions for each edge 
		 * and initial receiver set for each instruction
		 * */
		while(q.hasNext()) {
			var edge = edgeQueue.poll();
			var src = edge.getSrc();
			var snk = edge.getSnk();
			var flow = edge.getFlow();
			var instr = getBaseInstruction(flow,src,snk);
			basicInstructions.add(instr);
		}
		/* start building code fragments */
		
		codeFragment.add(basicInstructions.get(0));
		
		/* when size &lt; delta, we need to repeat the
		 * middle stage delta - size times
		 */
		var numRepeatStages = Math.max(0, delta - size);
		if (size &lt; delta) {
			numRepeatStages = delta - size;
		}
		
		/* build the initial code fragment */
		Integer localDelta = Math.min(size, delta);
		var instr = new String();
		var dropInstr = new String();
		var priorInstr = new String();
		for (int i = 1; i &lt; localDelta ; i++) { 
			instr = codeFragment.get(i-1) +
					&quot; else &quot; + basicInstructions.get(i);
			codeFragment.add(instr);
		}
		/* now repeat middle stage if size &lt; delta 
		 * otherwise, this for loop will be skipped
		 */
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { 
			instr = codeFragment.get(i-1);
			codeFragment.add(instr);
		}
		/* The first Instruction has been repeated
		 * delta times. Now it gets removed from
		 * the pipeline. E.g., with delta = 3 and
		 * size = 3
		 *  a &lt;-- dropInstr
		 *  ab
		 *  abc &lt;-- priorInstr
		 *  bc &lt;-- instr
		 */

		/* Now loop through dropping old instructions
		 * and adding new ones for size - localDelta times.
		 * This loop will be skipped if size = localDelta.
		 */
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { 
			priorInstr = codeFragment.get(i-1);
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);
			codeFragment.add(instr);
		}
		/* Now loop through dropping old instructions, draining
		 * the pipleline.
		 */
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { 
			priorInstr = codeFragment.get(i-1);
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);
			codeFragment.add(instr);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhgb0SueEeyJjNOKZ7e9aA" name="getBaseInstruction" specification="_nOjqoCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhgb0iueEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhgb0yueEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhgb1CueEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhgb1SueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();
		if (coordinator.equals(src)) {
			/* push instruction */
			instr += ifHas(flow,src,snk) + push(flow,src,snk);
		} else {
			/* pull instruction */
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);
		}
		return instr;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhgb1iueEeyJjNOKZ7e9aA" name="push" specification="_nOjqpSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhgb1yueEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhgb2CueEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhgb2SueEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhgb2iueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);
		return instruction;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhgb2yueEeyJjNOKZ7e9aA" name="pull" specification="_nOkRsyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhgb3CueEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhgb3SueEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhgb3iueEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhgb3yueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);
		return instruction;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhgb4CueEeyJjNOKZ7e9aA" name="ifHas" specification="_nOk4xCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhgb4SueEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhgb4iueEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhgb4yueEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhgb5CueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);
		return instruction;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhgb5SueEeyJjNOKZ7e9aA" name="ifNotHas" specification="_nOlf0iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhgb5iueEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhgb5yueEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhgb6CueEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhgb6SueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);
		return instruction;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhhC4CueEeyJjNOKZ7e9aA" name="wait" specification="_nOmG4SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhhC4SueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhhC4iueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);
		return instruction;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhhC4yueEeyJjNOKZ7e9aA" name="sleep" specification="_nOmG5CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhhC5CueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;
		return instruction;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhhC5SueEeyJjNOKZ7e9aA" name="reportIfDifferentCoordinators" specification="_nfPK8iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhhC5iueEeyJjNOKZ7e9aA" name="coordinators" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;
		var coordinatorNames = this.coordinator;
		if (coordinators.size() > 1) {
			for (int i = 1 ; i &lt; coordinators.size(); i++) {
				if (!this.coordinator.equals(coordinators.get(i))) {
					coordinatorNames += &quot;, &quot; + coordinators.get(i);
					numUniqueCoordinators++;
				}
			}
			if (numUniqueCoordinators > 1) {
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, 
						numUniqueCoordinators, this.coordinator, coordinatorNames);
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhhC5yueEeyJjNOKZ7e9aA" name="multipleCoordinators" specification="_nfPyAiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhhC6CueEeyJjNOKZ7e9aA" name="coordinators" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhhC6SueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;
		if (coordinators.size() > 1) {
			for (int i = 1 ; i &lt; coordinators.size(); i++) {
				if (!this.coordinator.equals(coordinators.get(i))) {
					result = true;
				}
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nOgnUCueEeyJjNOKZ7e9aA" name="CodeFragment" visibility="package" method="_nhf0wiueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nOhOYCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nOhOYSueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_niNmcCueEeyJjNOKZ7e9aA">
                  <body>Constructor generates a SLEEP instruction for the
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_nOhOYiueEeyJjNOKZ7e9aA" type="_nOgAQCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nOh1cCueEeyJjNOKZ7e9aA" name="getCoordinator" method="_nhf0yiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niNmciueEeyJjNOKZ7e9aA">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_nOh1cSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nOh1ciueEeyJjNOKZ7e9aA" name="instructions" method="_nhf0zCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niNmcyueEeyJjNOKZ7e9aA">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_nfPK8SueEeyJjNOKZ7e9aA" type="_nc5ooCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nOjDkCueEeyJjNOKZ7e9aA" name="size" method="_nhf0ziueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niNmdCueEeyJjNOKZ7e9aA">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_nOjDkSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nOjDkiueEeyJjNOKZ7e9aA" name="generateCodeFragment" visibility="private" method="_nhgb0CueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nOjqoCueEeyJjNOKZ7e9aA" name="getBaseInstruction" visibility="private" method="_nhgb0SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nOjqoSueEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOjqoiueEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOjqoyueEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOjqpCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nOjqpSueEeyJjNOKZ7e9aA" name="push" visibility="private" method="_nhgb1iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nOjqpiueEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOkRsCueEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOkRsSueEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOkRsiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nOkRsyueEeyJjNOKZ7e9aA" name="pull" visibility="private" method="_nhgb2yueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nOk4wCueEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOk4wSueEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOk4wiueEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOk4wyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nOk4xCueEeyJjNOKZ7e9aA" name="ifHas" visibility="private" method="_nhgb4CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nOk4xSueEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOk4xiueEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOlf0CueEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOlf0SueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nOlf0iueEeyJjNOKZ7e9aA" name="ifNotHas" visibility="private" method="_nhgb5SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nOlf0yueEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOlf1CueEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOlf1SueEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOmG4CueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nOmG4SueEeyJjNOKZ7e9aA" name="wait" method="_nhhC4CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nOmG4iueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOmG4yueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nOmG5CueEeyJjNOKZ7e9aA" name="sleep" isStatic="true" method="_nhhC4yueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nOmt8CueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nfN80CueEeyJjNOKZ7e9aA" name="CodeFragment" visibility="package" method="_nhf0xCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nfOj5CueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nfOj5SueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_niNmcSueEeyJjNOKZ7e9aA">
                  <body>Constructor generates DSL instructions to transmit
	 * the data over edges using the coordinator and channel
	 * to determine the type of instruction and delta to 
	 * determine the number of times each instructions must
	 * be attempted.
	 * 
	 * @param delta
	 * @param edges
	 * @param coordinators
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_nfOj4CueEeyJjNOKZ7e9aA" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nfOj4SueEeyJjNOKZ7e9aA" name="edges" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfOj4iueEeyJjNOKZ7e9aA" name="coordinators" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfOj4yueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nfOj5iueEeyJjNOKZ7e9aA" type="_nOgAQCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nfPK8iueEeyJjNOKZ7e9aA" name="reportIfDifferentCoordinators" visibility="private" method="_nhhC5SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nfPyACueEeyJjNOKZ7e9aA" name="coordinators" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nfPyAiueEeyJjNOKZ7e9aA" name="multipleCoordinators" visibility="private" method="_nhhC5yueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nfPyAyueEeyJjNOKZ7e9aA" name="coordinators" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfQZECueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nOojICueEeyJjNOKZ7e9aA" name="CombinedActivation">
              <generalization xmi:id="_ndGc8yueEeyJjNOKZ7e9aA" general="_nN7_kCueEeyJjNOKZ7e9aA"/>
              <interfaceRealization xmi:id="_nfRAICueEeyJjNOKZ7e9aA" client="_nOojICueEeyJjNOKZ7e9aA" supplier="_nfGoESueEeyJjNOKZ7e9aA" contract="_nfGoESueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhhC6iueEeyJjNOKZ7e9aA" name="CombinedActivation" specification="_nOpKMCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhhC6yueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhhC7CueEeyJjNOKZ7e9aA" type="_nOojICueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(name);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhhp8CueEeyJjNOKZ7e9aA" name="CombinedActivation" specification="_ndFO0CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhhp8SueEeyJjNOKZ7e9aA" name="elem" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhhp8iueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhhp8yueEeyJjNOKZ7e9aA" type="_nOojICueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhhp9CueEeyJjNOKZ7e9aA" name="CombinedActivation" specification="_ndF14CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhhp9SueEeyJjNOKZ7e9aA" name="priorEntry" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhhp9iueEeyJjNOKZ7e9aA" name="next" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhhp9yueEeyJjNOKZ7e9aA" type="_nOojICueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry 
		 * and next as subObjects. The new name is 
		 * &quot;PriorName + NextName&quot;. 
		 */
		super(priorEntry,next.getLastUpdateTime());
		String combinedName = 
				priorEntry.getName() + &quot;+&quot; + next.getName();
		/* initially, this will be a clone of priorEntry */;
		/* now update its name and add relevant attributes from next */
		this.setName(combinedName);
		this.addSubObject(priorEntry);
		this.addSubObject(next);
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());
		this.setEndTime(endTime);
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());
		this.setStartTime(startTime);
		this.addEdges(next.getEdges());
		this.addCoordinators(next.getCoordinators());
		this.addConflicts(next.getConflicts());
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhhp-CueEeyJjNOKZ7e9aA" name="canCombine" specification="_ndF15iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhhp-SueEeyJjNOKZ7e9aA" name="a2" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhhp-iueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;
		/* make sure a2 is not null */
		if (a2 != null) {
			var newEntryCoordinator = a2.getCoordinators().get(0);
			if (getCoordinators().contains(newEntryCoordinator)) {
				/* The (first) coordinator of the newEntry
				 * is in the list of coordinators of the prior entry.
				 * Thus, these two can be combined for efficiency 
				 */

				result = true;
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nOpKMCueEeyJjNOKZ7e9aA" name="CombinedActivation" visibility="package" method="_nhhC6iueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nOpKMiueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nOpKMyueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nOpKMSueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nOpKNCueEeyJjNOKZ7e9aA" type="_nOojICueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ndFO0CueEeyJjNOKZ7e9aA" name="CombinedActivation" visibility="package" method="_nhhp8CueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_ndFO0yueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ndFO1CueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ndFO0SueEeyJjNOKZ7e9aA" name="elem" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndFO0iueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ndFO1SueEeyJjNOKZ7e9aA" type="_nOojICueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ndF14CueEeyJjNOKZ7e9aA" name="CombinedActivation" visibility="package" method="_nhhp9CueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_ndF14yueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ndF15CueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ndF14SueEeyJjNOKZ7e9aA" name="priorEntry" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndF14iueEeyJjNOKZ7e9aA" name="next" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndF15SueEeyJjNOKZ7e9aA" type="_nOojICueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ndF15iueEeyJjNOKZ7e9aA" name="canCombine" method="_nhhp-CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ndF15yueEeyJjNOKZ7e9aA" name="a2" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndF16CueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nOq_YCueEeyJjNOKZ7e9aA" name="CommunicationGraph">
              <ownedComment xmi:id="_niNmdSueEeyJjNOKZ7e9aA">
                <body>@author sgoddard2
 *</body>
              </ownedComment>
              <generalization xmi:id="_ndHrGiueEeyJjNOKZ7e9aA" general="_nRRncCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngXMUCueEeyJjNOKZ7e9aA" name="wfm" visibility="package" type="_nO96UCueEeyJjNOKZ7e9aA" association="_nixAESueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngXMUiueEeyJjNOKZ7e9aA" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngXzYSueEeyJjNOKZ7e9aA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngXzYyueEeyJjNOKZ7e9aA" name="workLoad" visibility="package" type="_nR2PMCueEeyJjNOKZ7e9aA" association="_nixAFCueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhhp-yueEeyJjNOKZ7e9aA" name="CommunicationGraph" specification="_ndHEACueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhhp_CueEeyJjNOKZ7e9aA" name="fm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhhp_SueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhhp_iueEeyJjNOKZ7e9aA" type="_nOq_YCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class
		super(fm, workLoad, &quot;.wf&quot;);
		this.wfm = fm;
		this.workLoad = workLoad;
		verbose = false; // initialize verbose to false
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhhp_yueEeyJjNOKZ7e9aA" name="CommunicationGraph" specification="_ndHrECueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhhqACueEeyJjNOKZ7e9aA" name="fm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhhqASueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhhqAiueEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhhqAyueEeyJjNOKZ7e9aA" type="_nOq_YCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class
		super(fm, workLoad, &quot;.wf&quot;);
		this.wfm = fm;
		this.workLoad = workLoad;
		this.verbose = verbose; // initialize verbose to false
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhhqBCueEeyJjNOKZ7e9aA" name="createHeader" specification="_nOsNgCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhhqBSueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));
		return header;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhiRACueEeyJjNOKZ7e9aA" name="createFooter" specification="_nOs0kyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhiRASueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();
		footer.add(&quot;}\n&quot;);
		return footer;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhiRAiueEeyJjNOKZ7e9aA" name="visualization" specification="_nOtboyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhiRAyueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();
     String line = String.format(
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,
     	String.valueOf(workLoad.getMinPacketReceptionRate()),
     	String.valueOf(workLoad.getE2e()));
     content.add(line);
     var flowNames = workLoad.getFlowNames();
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {
         var flowName = flowNames[flowIndex];
         var nodesInFlow = workLoad.getNodesInFlow(flowName);
         var nNodesInFlow = (nodesInFlow.length);
         /* array of communications costs per link */
         var linkCostArray = workLoad.getLinkCommunicationCosts(flowName); 
         var totalCost = workLoad.getTotalCommunicationCost(flowName);
         var minCost = nNodesInFlow - 1 ;
         /*
          * nEdges in the flow is the minimum communication cost, 
          * i.e., min nTx to go E2E with no errors
          */
         line = String.format(
         		&quot;// Flow %s has a minimum communication cost of %d &quot;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, 
         		flowName, minCost, totalCost);
         content.add(line);
         line = String.format(
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, 
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), 
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); 
         String nodeName;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  
             nodeName = nodesInFlow[i];
             var nTx = linkCostArray[i];
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); 
             /* This version of the file has nTx in the edges of the flow */
         }
         nodeName = nodesInFlow[nNodesInFlow-1];
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow
         content.add(line);
     }
     return content;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhiRBCueEeyJjNOKZ7e9aA" name="createWarpFileContent" specification="_nOuCsyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhiRBSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();
     if (verbose) {
     	System.out.println(&quot;************************************&quot;);
     	System.out.println(&quot;Warp File Contents:&quot;);
     	System.out.println(wfFileContents);
     	System.out.println(&quot;************************************\n&quot;);
     }
     return wfFileContents;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nOsNgCueEeyJjNOKZ7e9aA" name="createHeader" method="_nhhqBCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ndHrFyueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nOs0kyueEeyJjNOKZ7e9aA" name="createFooter" method="_nhiRACueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ndHrGCueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nOtboyueEeyJjNOKZ7e9aA" name="visualization" method="_nhiRAiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ndHrGSueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nOuCsyueEeyJjNOKZ7e9aA" name="createWarpFileContent" method="_nhiRBCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nOuCtCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ndHEACueEeyJjNOKZ7e9aA" name="CommunicationGraph" method="_nhhp-yueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_ndHEAyueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ndHEBCueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ndHEASueEeyJjNOKZ7e9aA" name="fm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndHEAiueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndHEBSueEeyJjNOKZ7e9aA" type="_nOq_YCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ndHrECueEeyJjNOKZ7e9aA" name="CommunicationGraph" method="_nhhp_yueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_ndHrFCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ndHrFSueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ndHrESueEeyJjNOKZ7e9aA" name="fm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndHrEiueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndHrEyueEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ndHrFiueEeyJjNOKZ7e9aA" type="_nOq_YCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nOv34CueEeyJjNOKZ7e9aA" name="ConnectivityPoset">
              <ownedComment xmi:id="_niONgCueEeyJjNOKZ7e9aA">
                <body>ConnectivityPoset extends Poset by selecting
primary coordinator in the flow based on highest
global connectivity.

@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_ndISJSueEeyJjNOKZ7e9aA" general="_nPpPwCueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhiRBiueEeyJjNOKZ7e9aA" name="ConnectivityPoset" specification="_ndISICueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhiRByueEeyJjNOKZ7e9aA" name="workload" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhiRCCueEeyJjNOKZ7e9aA" type="_nOv34CueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(workload);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhiRCSueEeyJjNOKZ7e9aA" name="findCoordinator" specification="_nfRnMSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhiRCiueEeyJjNOKZ7e9aA" name="nodesInFlow" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhiRCyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;
		var maxConnections = 0;
		var size = nodesInFlow.size();
		for (Integer i = 0; i &lt; size; i++) {
			/* get the #connections for this node from the
			 * connectivity Map and see if it is the max so far
			 * if so, store its index in the flow
			 */
			var node = nodesInFlow.get(i);
			var numConnections = nodeConnectivityMap.get(node.getName());
			if (numConnections > maxConnections) {
				maxConnections = numConnections;
				coordinatorIndex = i;
			}
		}	
		/* return the index with the largest connectivity */
		return coordinatorIndex;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ndISICueEeyJjNOKZ7e9aA" name="ConnectivityPoset" visibility="package" method="_nhiRBiueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_ndISIiueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ndISIyueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ndISISueEeyJjNOKZ7e9aA" name="workload" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndISJCueEeyJjNOKZ7e9aA" type="_nOv34CueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nfRnMSueEeyJjNOKZ7e9aA" name="findCoordinator" visibility="protected" method="_nhiRCSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nfRnMiueEeyJjNOKZ7e9aA" name="nodesInFlow" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfSOQCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nOxGACueEeyJjNOKZ7e9aA" name="DeadlineComparator">
              <interfaceRealization xmi:id="_nfS1UiueEeyJjNOKZ7e9aA" client="_nOxGACueEeyJjNOKZ7e9aA" supplier="_ndI5MCueEeyJjNOKZ7e9aA" contract="_ndI5MCueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhi4ECueEeyJjNOKZ7e9aA" name="compare" specification="_nfUDcCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhi4ESueEeyJjNOKZ7e9aA" name="obj1" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhi4EiueEeyJjNOKZ7e9aA" name="obj2" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhi4EyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); 
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nfUDcCueEeyJjNOKZ7e9aA" name="compare" method="_nhi4ECueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nfUDcSueEeyJjNOKZ7e9aA" name="obj1" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfUDciueEeyJjNOKZ7e9aA" name="obj2" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfUDcyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nOy7MCueEeyJjNOKZ7e9aA" name="Description">
              <ownedComment xmi:id="_niONgSueEeyJjNOKZ7e9aA">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <generalization xmi:id="_nfUqgCueEeyJjNOKZ7e9aA" general="_nc5ooCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngYacCueEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngYacSueEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhi4FCueEeyJjNOKZ7e9aA" name="Description" specification="_nOziQCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhi4FSueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhi4FiueEeyJjNOKZ7e9aA" name="Description" specification="_nO0JUiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhi4FyueEeyJjNOKZ7e9aA" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhi4GCueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super();
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);
		for (String line : lines) {
			this.add(line+&quot;\n&quot;);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhi4GSueEeyJjNOKZ7e9aA" name="toString" specification="_nO0JVyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhi4GiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();
		for (String row: this) { 
			sb.append(row);
		}
		return sb.toString();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nOziQCueEeyJjNOKZ7e9aA" name="Description" method="_nhi4FCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nOziQSueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nO0JUCueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nO0JUSueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nO0JUiueEeyJjNOKZ7e9aA" name="Description" method="_nhi4FiueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nO0JVCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nO0JVSueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nO0JUyueEeyJjNOKZ7e9aA" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nO0JViueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nO0JVyueEeyJjNOKZ7e9aA" name="toString" method="_nhi4GSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nO0wYCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nO1-gCueEeyJjNOKZ7e9aA" name="Edge">
              <generalization xmi:id="_ndKuZCueEeyJjNOKZ7e9aA" general="_nSnrQCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngYaciueEeyJjNOKZ7e9aA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngYacyueEeyJjNOKZ7e9aA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngYadCueEeyJjNOKZ7e9aA" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngYadSueEeyJjNOKZ7e9aA" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngZBgCueEeyJjNOKZ7e9aA" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngZBgSueEeyJjNOKZ7e9aA" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngZBgiueEeyJjNOKZ7e9aA" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngZBgyueEeyJjNOKZ7e9aA" name="state" type="_nO3MoCueEeyJjNOKZ7e9aA" association="_niQCsCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngZBhCueEeyJjNOKZ7e9aA" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_nfVRkCueEeyJjNOKZ7e9aA" client="_nO1-gCueEeyJjNOKZ7e9aA" supplier="_nfGoESueEeyJjNOKZ7e9aA" contract="_nfGoESueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhi4GyueEeyJjNOKZ7e9aA" name="Edge" specification="_nO4awCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhi4HCueEeyJjNOKZ7e9aA" type="_nO1-gCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super();
		this.flow = UNKNOWN;
		this.src = UNKNOWN;
		this.snk = UNKNOWN;
		this.instance = 0;
		this.coordinator = UNKNOWN;
		this.state = EdgeState.NOT_READY;
		this.numTx = 0;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhi4HSueEeyJjNOKZ7e9aA" name="Edge" specification="_nO4axCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhi4HiueEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhi4HyueEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhi4ICueEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhi4ISueEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhi4IiueEeyJjNOKZ7e9aA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhi4IyueEeyJjNOKZ7e9aA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhi4JCueEeyJjNOKZ7e9aA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhi4JSueEeyJjNOKZ7e9aA" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhi4JiueEeyJjNOKZ7e9aA" type="_nO1-gCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);
		this.flow = flow;
		this.src =src;
		this.snk = snk;
		this.instance = 0;
		this.coordinator = UNKNOWN;
		this.state = EdgeState.NOT_READY;	
		this.numTx = numTx;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhjfICueEeyJjNOKZ7e9aA" name="compareTo" specification="_ndKHUCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhjfISueEeyJjNOKZ7e9aA" name="edge" type="_nO1-gCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhjfIiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhjfIyueEeyJjNOKZ7e9aA" name="toString" specification="_nO5o4CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhjfJCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, 
 			this.flow, this.src, this.snk);
     return result;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhjfJSueEeyJjNOKZ7e9aA" name="print" specification="_nO6P8yueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhjfJiueEeyJjNOKZ7e9aA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);
		this.print();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhjfJyueEeyJjNOKZ7e9aA" name="print" specification="_nO63AyueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>super.print();
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nO4awCueEeyJjNOKZ7e9aA" name="Edge" visibility="package" method="_nhi4GyueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nO4awSueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nO4awiueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nO4awyueEeyJjNOKZ7e9aA" type="_nO1-gCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nO4axCueEeyJjNOKZ7e9aA" name="Edge" visibility="package" method="_nhi4HSueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nO5B2CueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nO5B2SueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nO5B0CueEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nO5B0SueEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nO5B0iueEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nO5B0yueEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nO5B1CueEeyJjNOKZ7e9aA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nO5B1SueEeyJjNOKZ7e9aA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nO5B1iueEeyJjNOKZ7e9aA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nO5B1yueEeyJjNOKZ7e9aA" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nO5B2iueEeyJjNOKZ7e9aA" type="_nO1-gCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nO5o4CueEeyJjNOKZ7e9aA" name="toString" method="_nhjfIyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nO5o4SueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nO6P8yueEeyJjNOKZ7e9aA" name="print" method="_nhjfJSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nO6P9CueEeyJjNOKZ7e9aA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nO63AyueEeyJjNOKZ7e9aA" name="print" method="_nhjfJyueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_ndKHUCueEeyJjNOKZ7e9aA" name="compareTo" method="_nhjfICueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ndKHUSueEeyJjNOKZ7e9aA" name="edge" type="_nO1-gCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndKuYCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_nO3MoCueEeyJjNOKZ7e9aA" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_nO3zsCueEeyJjNOKZ7e9aA" name="RELEASED"/>
                <ownedLiteral xmi:id="_nO3zsSueEeyJjNOKZ7e9aA" name="EXECUTING"/>
                <ownedLiteral xmi:id="_nO3zsiueEeyJjNOKZ7e9aA" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nO96UCueEeyJjNOKZ7e9aA" name="FileManager">
              <ownedComment xmi:id="_niQpwSueEeyJjNOKZ7e9aA">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ngZokCueEeyJjNOKZ7e9aA" name="COURSE_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngZokSueEeyJjNOKZ7e9aA" value="&quot;// Course CS2820 Authentication Tag&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngZokiueEeyJjNOKZ7e9aA" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngZokyueEeyJjNOKZ7e9aA" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhjfKCueEeyJjNOKZ7e9aA" name="FileManager" specification="_nO-hYCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhjfKSueEeyJjNOKZ7e9aA" type="_nO96UCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the base directory
		// constructor for this class	
		verbose = false; // initialize verbose to false
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhkGMCueEeyJjNOKZ7e9aA" name="FileManager" specification="_nO_IcCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhkGMSueEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhkGMiueEeyJjNOKZ7e9aA" type="_nO96UCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the base directory
		// constructor for this class
		this.verbose = verbose; // initialize verbose as specified

	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhkGMyueEeyJjNOKZ7e9aA" name="getDocumentsDirectory" specification="_nO_IdSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhkGNCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS
		String documentsDirectory;
		if ( OSValidator.isWindows() ) {
			documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();
		} else if ( OSValidator.isMac() ) {
			documentsDirectory = System.getProperty(&quot;user.home&quot;)+File.separator+&quot;Documents&quot;;
		} else { // for all other Unix systems
			documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not MACOS)
		}
		return documentsDirectory;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhkGNSueEeyJjNOKZ7e9aA" name="getCurrentDirectory" specification="_nO_IdyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhkGNiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhkGNyueEeyJjNOKZ7e9aA" name="createFile" specification="_nO_vgSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhkGOCueEeyJjNOKZ7e9aA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhkGOSueEeyJjNOKZ7e9aA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhkGOiueEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhkGOyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* we don't actually create the file...it will be created when written to
		 * this routine really just creates the file name ;-)
		 */
		Integer suffixIndex = file.lastIndexOf('.');
		String fileString = file;
		if (suffixIndex > 0) {  // if a suffix exists, index will be > 0
			fileString = file.substring(0,suffixIndex); // get the file string sans the suffix
		}
		/* fileString has no suffix at this point (removed if it existed)
		 * Now add file name extension and suffix
		 */
		fileString = fileString + nameExtension + suffix;

		if (verbose) {
			System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);
		}
		return fileString; 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhkGPCueEeyJjNOKZ7e9aA" name="createFile" specification="_nPAWkCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhkGPSueEeyJjNOKZ7e9aA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhkGPiueEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhkGPyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');
		String fileString = file;
		if (suffixIndex > 0) {  // if a suffix exists, index will be > 0
			fileString = file.substring(0,suffixIndex-1); // get the file string sans the suffix
		}
		// fileString has no suffix at this point (removed if it existed)
		// Now add file name extension and suffix
		fileString = fileString + suffix;
		// we don't actually create the file...it will be created when written to
		// this routine really just creates the file name ;-)
		if (verbose) {
			System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);
		}
		return fileString; 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhkGQCueEeyJjNOKZ7e9aA" name="createDirectory" specification="_nPAWlCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhkGQSueEeyJjNOKZ7e9aA" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhkGQiueEeyJjNOKZ7e9aA" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhkGQyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory; 
		if (subDirectory.startsWith(&quot;/&quot;)) {  // check if full path provided
			newDirectory = subDirectory ; // if subDirectory is a full path, use it.
		} else { // subDirectory has relative path, so just append
			newDirectory = directory + File.separator + subDirectory;
		}
		try {
			Path path = Paths.get(newDirectory);
			Files.createDirectories(path);
			if (verbose) {
				System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);
			}
		} catch (IOException e) {
			System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());
			newDirectory = directory;  // in case of error, just use the initial directory
		}
		return newDirectory;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhktQCueEeyJjNOKZ7e9aA" name="writeFile" specification="_nPA9oiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhktQSueEeyJjNOKZ7e9aA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhktQiueEeyJjNOKZ7e9aA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Authentication tag = new Authentication(COURSE_TAG);
		Path fileName = Path.of(file);
		try {
			Files.writeString(fileName, tag.sign(fileContents));
		} catch (IOException e) {
			// handle error
			System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());
		} // the file will be closed automatically upon exit of this try block
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhktQyueEeyJjNOKZ7e9aA" name="readFile" specification="_nPBksCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhktRCueEeyJjNOKZ7e9aA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhktRSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;
		Path fileName = Path.of(file);
		String contents = null;
		try {
			contents = Files.readString(fileName);
		} catch (IOException e) {
			// handle error
			System.err.println(&quot;Error on reading file&quot; + file +&quot;: &quot; + e.getMessage());
		} // the file will be closed automatically upon exit of this try block
		return contents;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nO-hYCueEeyJjNOKZ7e9aA" name="FileManager" method="_nhjfKCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nO-hYSueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nO-hYiueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_niQpwiueEeyJjNOKZ7e9aA">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_nO-hYyueEeyJjNOKZ7e9aA" type="_nO96UCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nO_IcCueEeyJjNOKZ7e9aA" name="FileManager" method="_nhkGMCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nO_IciueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nO_IcyueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nO_IcSueEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nO_IdCueEeyJjNOKZ7e9aA" type="_nO96UCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nO_IdSueEeyJjNOKZ7e9aA" name="getDocumentsDirectory" method="_nhkGMyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nO_IdiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nO_IdyueEeyJjNOKZ7e9aA" name="getCurrentDirectory" method="_nhkGNSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nO_vgCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nO_vgSueEeyJjNOKZ7e9aA" name="createFile" method="_nhkGNyueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niQpwyueEeyJjNOKZ7e9aA">
                  <body>Build the name extension used for all files created by this tool.
	 * The nameExtension will be added to the base input file name
	 * so that all of the output files can be associated with the input file
	 * The file naming pattern is:
	 * baseFileNameFileType-NonDefaultParameterList
	 * where FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray
	 * Default parameters are not identified in the NameExtension
	 * All parameters used to create the file, should be listed near the top
	 * of the file in the Parameter Section, followed by the file contents.
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_nO_vgiueEeyJjNOKZ7e9aA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nO_vgyueEeyJjNOKZ7e9aA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nO_vhCueEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nO_vhSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPAWkCueEeyJjNOKZ7e9aA" name="createFile" method="_nhkGPCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPAWkSueEeyJjNOKZ7e9aA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPAWkiueEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPAWkyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPAWlCueEeyJjNOKZ7e9aA" name="createDirectory" method="_nhkGQCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPAWlSueEeyJjNOKZ7e9aA" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPA9oCueEeyJjNOKZ7e9aA" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPA9oSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPA9oiueEeyJjNOKZ7e9aA" name="writeFile" method="_nhktQCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPA9oyueEeyJjNOKZ7e9aA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPA9pCueEeyJjNOKZ7e9aA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPBksCueEeyJjNOKZ7e9aA" name="readFile" method="_nhktQyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPBksSueEeyJjNOKZ7e9aA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPBksiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nPCLwCueEeyJjNOKZ7e9aA" name="Flow">
              <ownedComment xmi:id="_niQpxCueEeyJjNOKZ7e9aA">
                <body>Represents a Flow which is a chain of nodes and edges that carries data between sensors, controllers and actuators
@author sgoddard
 *</body>
              </ownedComment>
              <generalization xmi:id="_ndRcECueEeyJjNOKZ7e9aA" general="_nSnrQCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngaPoSueEeyJjNOKZ7e9aA" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngaPoiueEeyJjNOKZ7e9aA" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngaPoyueEeyJjNOKZ7e9aA" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngaPpCueEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nga2sCueEeyJjNOKZ7e9aA" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nga2sSueEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nga2siueEeyJjNOKZ7e9aA" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nga2syueEeyJjNOKZ7e9aA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nga2tCueEeyJjNOKZ7e9aA" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nga2tSueEeyJjNOKZ7e9aA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nga2tiueEeyJjNOKZ7e9aA" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nga2tyueEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngbdwCueEeyJjNOKZ7e9aA" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngbdwSueEeyJjNOKZ7e9aA" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngbdwyueEeyJjNOKZ7e9aA" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngcE0SueEeyJjNOKZ7e9aA" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngcE0yueEeyJjNOKZ7e9aA" name="nodes" visibility="package" type="_nc5ooCueEeyJjNOKZ7e9aA" association="_nixnISueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngdS8CueEeyJjNOKZ7e9aA" name="linkTxAndTotalCost" visibility="package" type="_nc5ooCueEeyJjNOKZ7e9aA" association="_nixnJCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngd6ACueEeyJjNOKZ7e9aA" name="edges" visibility="package" type="_nc5ooCueEeyJjNOKZ7e9aA" association="_niyOMSueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngehESueEeyJjNOKZ7e9aA" name="nodePredecessor" visibility="package" type="_nPdpkCueEeyJjNOKZ7e9aA" association="_niyONCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngehEyueEeyJjNOKZ7e9aA" name="edgePredecessor" visibility="package" type="_nO1-gCueEeyJjNOKZ7e9aA" association="_niy1QSueEeyJjNOKZ7e9aA"/>
              <interfaceRealization xmi:id="_nfXGwCueEeyJjNOKZ7e9aA" client="_nPCLwCueEeyJjNOKZ7e9aA" supplier="_nfGoESueEeyJjNOKZ7e9aA" contract="_nfGoESueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhktRiueEeyJjNOKZ7e9aA" name="Flow" specification="_nPDZ4CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhktRyueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhktSCueEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhktSSueEeyJjNOKZ7e9aA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhktSiueEeyJjNOKZ7e9aA" type="_nPCLwCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);
 	this.index = index;
     /*
      *  Default numTxPerLink is 1 transmission per link. Will be updated based
      *  on flow updated based on flow length and reliability parameters
      */
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; 
     this.nodes = new ArrayList&lt;>();
     this.edges  = new ArrayList&lt;>();
     this.linkTxAndTotalCost = new ArrayList&lt;>();
     this.edges = new ArrayList&lt;>();	
     this.nodePredecessor = null;
     this.edgePredecessor = null;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhktSyueEeyJjNOKZ7e9aA" name="Flow" specification="_nPEA9iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhktTCueEeyJjNOKZ7e9aA" type="_nPCLwCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super();
 	this.index = DEFAULT_INDEX;
 	/*
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based
 	 *  on flow updated based on flow length and reliability parameters
 	 */
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; 
 	this.nodes = new ArrayList&lt;>();
 	this.linkTxAndTotalCost = new ArrayList&lt;>();
 	this.edges = new ArrayList&lt;>();
 	this.nodePredecessor = null;
     this.edgePredecessor = null;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhktTSueEeyJjNOKZ7e9aA" name="getInitialPriority" specification="_nPEoAyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhktTiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhktTyueEeyJjNOKZ7e9aA" name="getIndex" specification="_nPEoBSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhktUCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhlUUCueEeyJjNOKZ7e9aA" name="getNumTxPerLink" specification="_nPEoByueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhlUUSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhlUUiueEeyJjNOKZ7e9aA" name="getNodes" specification="_nPFPESueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhlUUyueEeyJjNOKZ7e9aA" type="_nc5ooCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return nodes;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhlUVCueEeyJjNOKZ7e9aA" name="getEdges" specification="_nPF2ISueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhlUVSueEeyJjNOKZ7e9aA" type="_nc5ooCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return edges;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhlUViueEeyJjNOKZ7e9aA" name="addEdge" specification="_ndQN8CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhlUVyueEeyJjNOKZ7e9aA" name="edge" type="_nO1-gCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */
		edge.setPredecessor(edgePredecessor);
		edges.add(edge);
		/* update predecessor for next edge added */
		edgePredecessor = edge;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhl7YCueEeyJjNOKZ7e9aA" name="addNode" specification="_ndQN8iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhl7YSueEeyJjNOKZ7e9aA" name="node" type="_nPdpkCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */
		node.setPredecessor(nodePredecessor);
		nodes.add(node);
		/* update predecessor for next edge added */
		nodePredecessor = node;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhl7YiueEeyJjNOKZ7e9aA" name="getLinkTxAndTotalCost" specification="_nPGdMSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhl7YyueEeyJjNOKZ7e9aA" type="_nc5ooCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhl7ZCueEeyJjNOKZ7e9aA" name="setInitialPriority" specification="_nPHrUCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhl7ZSueEeyJjNOKZ7e9aA" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhl7ZiueEeyJjNOKZ7e9aA" name="setIndex" specification="_nPHrUiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhl7ZyueEeyJjNOKZ7e9aA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhl7aCueEeyJjNOKZ7e9aA" name="setNumTxPerLink" specification="_nPISYCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhl7aSueEeyJjNOKZ7e9aA" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhl7aiueEeyJjNOKZ7e9aA" name="setNodes" specification="_nfYU4SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhl7ayueEeyJjNOKZ7e9aA" name="nodes" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>this.nodes = nodes;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhmicCueEeyJjNOKZ7e9aA" name="setLinkTxAndTotalCost" specification="_nfY78SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhmicSueEeyJjNOKZ7e9aA" name="linkTxAndTotalCost" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhmiciueEeyJjNOKZ7e9aA" name="compareTo" specification="_ndQ1ACueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhmicyueEeyJjNOKZ7e9aA" name="flow" type="_nPCLwCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhmidCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhmidSueEeyJjNOKZ7e9aA" name="toString" specification="_nPI5cCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhmidiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nPDZ4CueEeyJjNOKZ7e9aA" name="Flow" visibility="package" method="_nhktRiueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nPEA8yueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nPEA9CueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_niQpxSueEeyJjNOKZ7e9aA">
                  <body>Constructor that initializes a flow and sets the name, priority, and index according to given parameters
     * @param name Flow's name
     * @param priority Flow's system-wide priority
     * @param index Flow's index</body>
                </ownedComment>
                <ownedParameter xmi:id="_nPEA8CueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPEA8SueEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPEA8iueEeyJjNOKZ7e9aA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPEA9SueEeyJjNOKZ7e9aA" type="_nPCLwCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nPEA9iueEeyJjNOKZ7e9aA" name="Flow" visibility="package" method="_nhktSyueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nPEoACueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nPEoASueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_niQpxiueEeyJjNOKZ7e9aA">
                  <body>Constructor for a Flow without parameters, initializes a Flow with default values</body>
                </ownedComment>
                <ownedParameter xmi:id="_nPEoAiueEeyJjNOKZ7e9aA" type="_nPCLwCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nPEoAyueEeyJjNOKZ7e9aA" name="getInitialPriority" method="_nhktTSueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niRQ0CueEeyJjNOKZ7e9aA">
                  <body>@return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_nPEoBCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPEoBSueEeyJjNOKZ7e9aA" name="getIndex" method="_nhktTyueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niRQ0SueEeyJjNOKZ7e9aA">
                  <body>@return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_nPEoBiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPEoByueEeyJjNOKZ7e9aA" name="getNumTxPerLink" method="_nhlUUCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niRQ0iueEeyJjNOKZ7e9aA">
                  <body>@return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_nPFPECueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPFPESueEeyJjNOKZ7e9aA" name="getNodes" method="_nhlUUiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niRQ0yueEeyJjNOKZ7e9aA">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_nfXt0CueEeyJjNOKZ7e9aA" type="_nc5ooCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nPF2ISueEeyJjNOKZ7e9aA" name="getEdges" method="_nhlUVCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niRQ1CueEeyJjNOKZ7e9aA">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_nfXt0SueEeyJjNOKZ7e9aA" type="_nc5ooCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nPGdMSueEeyJjNOKZ7e9aA" name="getLinkTxAndTotalCost" method="_nhl7YiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niRQ1yueEeyJjNOKZ7e9aA">
                  <body>@return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_nfYU4CueEeyJjNOKZ7e9aA" type="_nc5ooCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nPHrUCueEeyJjNOKZ7e9aA" name="setInitialPriority" method="_nhl7ZCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niRQ2CueEeyJjNOKZ7e9aA">
                  <body>@param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_nPHrUSueEeyJjNOKZ7e9aA" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPHrUiueEeyJjNOKZ7e9aA" name="setIndex" method="_nhl7ZiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niRQ2SueEeyJjNOKZ7e9aA">
                  <body>@param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_nPHrUyueEeyJjNOKZ7e9aA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPISYCueEeyJjNOKZ7e9aA" name="setNumTxPerLink" method="_nhl7aCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niRQ2iueEeyJjNOKZ7e9aA">
                  <body>@param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_nPISYSueEeyJjNOKZ7e9aA" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPI5cCueEeyJjNOKZ7e9aA" name="toString" method="_nhmidSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPI5cSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ndQN8CueEeyJjNOKZ7e9aA" name="addEdge" method="_nhlUViueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niRQ1SueEeyJjNOKZ7e9aA">
                  <body>Add and edge to the flow.
	 * @param edge An edge to add</body>
                </ownedComment>
                <ownedParameter xmi:id="_ndQN8SueEeyJjNOKZ7e9aA" name="edge" type="_nO1-gCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ndQN8iueEeyJjNOKZ7e9aA" name="addNode" method="_nhl7YCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niRQ1iueEeyJjNOKZ7e9aA">
                  <body>Add and edge to the flow.
	 * @param node A node to add</body>
                </ownedComment>
                <ownedParameter xmi:id="_ndQN8yueEeyJjNOKZ7e9aA" name="node" type="_nPdpkCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ndQ1ACueEeyJjNOKZ7e9aA" name="compareTo" method="_nhmiciueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ndQ1ASueEeyJjNOKZ7e9aA" name="flow" type="_nPCLwCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndQ1AiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nfYU4SueEeyJjNOKZ7e9aA" name="setNodes" method="_nhl7aiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niRQ2yueEeyJjNOKZ7e9aA">
                  <body>@param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_nfYU4iueEeyJjNOKZ7e9aA" name="nodes" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nfY78SueEeyJjNOKZ7e9aA" name="setLinkTxAndTotalCost" method="_nhmicCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niRQ3CueEeyJjNOKZ7e9aA">
                  <body>@param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_nfY78iueEeyJjNOKZ7e9aA" name="linkTxAndTotalCost" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nPMj0CueEeyJjNOKZ7e9aA" name="FlowMap">
              <ownedComment xmi:id="_niRQ3SueEeyJjNOKZ7e9aA">
                <body>FlowMap creates a mapping from flow name to 
flow object (&lt;name, Flow>).

@author sgoddard2
 *</body>
              </ownedComment>
              <generalization xmi:id="_ndTRQCueEeyJjNOKZ7e9aA" general="_nN2gACueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngfIICueEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngfIISueEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nPNK4CueEeyJjNOKZ7e9aA" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_niRQ3iueEeyJjNOKZ7e9aA">
                <body>FlowNodeToActivationMap creates a mapping from flow node  
to an activation (&lt;Node, Activation>).

@author sgoddard2
 *</body>
              </ownedComment>
              <generalization xmi:id="_ndT4UCueEeyJjNOKZ7e9aA" general="_nN2gACueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngfvMCueEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngfvMSueEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nPNx8CueEeyJjNOKZ7e9aA" name="GraphViz">
              <ownedComment xmi:id="_niRQ3yueEeyJjNOKZ7e9aA">
                <body>@author sgoddard2
Copyright Â© 2020 Steve Goddard. All rights reserved.
 *</body>
              </ownedComment>
              <generalization xmi:id="_ndVGdCueEeyJjNOKZ7e9aA" general="_nRRncCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngfvMiueEeyJjNOKZ7e9aA" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngfvMyueEeyJjNOKZ7e9aA" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngfvNCueEeyJjNOKZ7e9aA" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nggWQCueEeyJjNOKZ7e9aA" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nggWQSueEeyJjNOKZ7e9aA" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nggWQyueEeyJjNOKZ7e9aA" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nggWRSueEeyJjNOKZ7e9aA" name="wfm" visibility="package" type="_nO96UCueEeyJjNOKZ7e9aA" association="_niy1RCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngg9USueEeyJjNOKZ7e9aA" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngg9UyueEeyJjNOKZ7e9aA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngg9VSueEeyJjNOKZ7e9aA" name="gv" visibility="package" type="_nPNx8CueEeyJjNOKZ7e9aA" association="_nizcUSueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhnwkCueEeyJjNOKZ7e9aA" name="GraphViz" specification="_ndUfYCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhnwkSueEeyJjNOKZ7e9aA" name="wfm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhnwkiueEeyJjNOKZ7e9aA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhnwkyueEeyJjNOKZ7e9aA" type="_nPNx8CueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor
     this.wfm = wfm; // used to access the basic WARP file management functions
     this.graphFile = graphFile;
     this.gv = this;
     verbose = false;
     createGraphVizContent();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhoXoCueEeyJjNOKZ7e9aA" name="GraphViz" specification="_ndUfZiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhoXoSueEeyJjNOKZ7e9aA" name="wfm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhoXoiueEeyJjNOKZ7e9aA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhoXoyueEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhoXpCueEeyJjNOKZ7e9aA" type="_nPNx8CueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor
     this.wfm = wfm; // used to access the basic WARP file management functions
     this.graphFile = graphFile;
     this.gv = this;
     this.verbose = verbose;
     createGraphVizContent();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhoXpSueEeyJjNOKZ7e9aA" name="visualization" specification="_nPOZACueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhoXpiueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhoXpyueEeyJjNOKZ7e9aA" name="initializeGraphVizContent" specification="_nPPAEyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhoXqCueEeyJjNOKZ7e9aA" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);
     /* remove 'strict' if multiple edges in the same direction are to be shown */
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.
     /* 
      * create a title caption for the rendered graph in the .gv file
      * label string is in html format, so need an end delimeter after adding flows
      */
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhoXqSueEeyJjNOKZ7e9aA" name="finalizeGraphVizContent" specification="_nPPAFSueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>/* 
      * wrap up the gv file content by finalizing title caption
      * then add it to the file contents and terminate the graph viz structure
      */
     gvTitleCaption += &quot;>\n&quot;;
     /* 
      * end the gv file by adding the caption for rendering and the last line 
      * to the contents string
      */
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nho-sCueEeyJjNOKZ7e9aA" name="getGraphVizContent" specification="_nPPnICueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nho-sSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nho-siueEeyJjNOKZ7e9aA" name="createGraphVizContent" specification="_nPPnIiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nho-syueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*
 	 * GraphVizListener reads the graphFile string and calls the functions
 	 * in this class, as it walks the input graphFile structure to build
 	 * the GraphViz contents.
 	 */
     GraphVizListener.buildGraphViz(gv); 
     if (verbose) {
     	System.out.println(&quot;************************************&quot;);
     	System.out.println(&quot;GraphViz File Contents:&quot;);
     	System.out.println(getGraphVizContent());
     	System.out.println(&quot;************************************\n&quot;);
     }
     return getGraphVizContent();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nho-tCueEeyJjNOKZ7e9aA" name="addFlowToGraphViz" specification="_nPPnJCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nho-tSueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */
     gvFileContents = gvFileContents + &quot;   &quot;;  
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nho-tiueEeyJjNOKZ7e9aA" name="addSrcNodeToGraphViz" specification="_nPQOMCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nho-tyueEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);
 	addNodeName(fileContents,titleCaption);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nho-uCueEeyJjNOKZ7e9aA" name="addSnkNodeToGraphViz" specification="_nPQOMiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nho-uSueEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);
 	addNodeName(fileContents,titleCaption);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nho-uiueEeyJjNOKZ7e9aA" name="finalizeCurrentFlowInGraphViz" specification="_nPQONCueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */
     gvFileContents = gvFileContents + &quot;; \n&quot; ;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nho-uyueEeyJjNOKZ7e9aA" name="addNodeName" specification="_nPQ1QCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nho-vCueEeyJjNOKZ7e9aA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nho-vSueEeyJjNOKZ7e9aA" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */
     gvFileContents += fileContents;  
     /* add the node name and edge to this line of the rendered graph caption */
     gvTitleCaption += titleCaption;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nPOZACueEeyJjNOKZ7e9aA" name="visualization" method="_nhoXpSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ndVGcyueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nPPAEyueEeyJjNOKZ7e9aA" name="initializeGraphVizContent" method="_nhoXpyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPPAFCueEeyJjNOKZ7e9aA" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPPAFSueEeyJjNOKZ7e9aA" name="finalizeGraphVizContent" method="_nhoXqSueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nPPnICueEeyJjNOKZ7e9aA" name="getGraphVizContent" method="_nho-sCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niRQ4CueEeyJjNOKZ7e9aA">
                  <body>public function to return the string gvFileContents.
     * designed to be called after finalizeGraphVizContent() is called by the listener
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_nPPnISueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPPnIiueEeyJjNOKZ7e9aA" name="createGraphVizContent" method="_nho-siueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPPnIyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPPnJCueEeyJjNOKZ7e9aA" name="addFlowToGraphViz" method="_nho-tCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPPnJSueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPQOMCueEeyJjNOKZ7e9aA" name="addSrcNodeToGraphViz" method="_nho-tiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPQOMSueEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPQOMiueEeyJjNOKZ7e9aA" name="addSnkNodeToGraphViz" method="_nho-uCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPQOMyueEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPQONCueEeyJjNOKZ7e9aA" name="finalizeCurrentFlowInGraphViz" method="_nho-uiueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nPQ1QCueEeyJjNOKZ7e9aA" name="addNodeName" visibility="private" method="_nho-uyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPQ1QSueEeyJjNOKZ7e9aA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPQ1QiueEeyJjNOKZ7e9aA" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ndUfYCueEeyJjNOKZ7e9aA" name="GraphViz" visibility="package" method="_nhnwkCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_ndUfYyueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ndUfZCueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ndUfYSueEeyJjNOKZ7e9aA" name="wfm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndUfYiueEeyJjNOKZ7e9aA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ndUfZSueEeyJjNOKZ7e9aA" type="_nPNx8CueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ndUfZiueEeyJjNOKZ7e9aA" name="GraphViz" visibility="package" method="_nhoXoCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_ndVGcCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ndVGcSueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ndUfZyueEeyJjNOKZ7e9aA" name="wfm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndUfaCueEeyJjNOKZ7e9aA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ndUfaSueEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ndVGciueEeyJjNOKZ7e9aA" type="_nPNx8CueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nPSqcCueEeyJjNOKZ7e9aA" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_niR34CueEeyJjNOKZ7e9aA">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.
GraphVizListener reads the graphFile string and calls the functions
in this class, as it walks the input graphFile structure to build
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_nfaxICueEeyJjNOKZ7e9aA" general="_ndYJwSueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_nghkYSueEeyJjNOKZ7e9aA" name="gv" visibility="package" type="_nPNx8CueEeyJjNOKZ7e9aA" association="_ni0DYCueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhplwCueEeyJjNOKZ7e9aA" name="GraphVizListener" specification="_ndZX4CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhplwSueEeyJjNOKZ7e9aA" name="gv" type="_nPNx8CueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhplwiueEeyJjNOKZ7e9aA" type="_nPSqcCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object
  // Read input file and build AST of graphFile
     try {
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);
     	var lexer = new WARPLexer(inputGraph);
     	var tokens = new CommonTokenStream(lexer);
     	var parser = new WARPParser(tokens);
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'
     	var warp = new ParseTreeWalker();
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens
     	warp.walk(this, warpTree);
     } catch (Exception e) {
     	e.printStackTrace();
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhplwyueEeyJjNOKZ7e9aA" name="buildGraphViz" specification="_ndZX5SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhplxCueEeyJjNOKZ7e9aA" name="gv" type="_nPNx8CueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>/*
 	 * Create the listener object, which will read the workLoad 
 	 * description and then buid the node and flow objects that
 	 * instantiates the workLoad. This object is not needed
 	 * after that.
 	 */
 	new GraphVizListener(gv); 
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhplxSueEeyJjNOKZ7e9aA" name="enterWarpName" specification="_ndZ-8iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhplxiueEeyJjNOKZ7e9aA" name="ctx" type="_ndZ-8CueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name
     gv.initializeGraphVizContent(graphName); // start creating the gv file content
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhplxyueEeyJjNOKZ7e9aA" name="exitWarp" specification="_ndbNEiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhplyCueEeyJjNOKZ7e9aA" name="ctx" type="_ndbNECueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhplySueEeyJjNOKZ7e9aA" name="enterFlowName" specification="_ndcbMSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhplyiueEeyJjNOKZ7e9aA" name="ctx" type="_ndb0IyueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();
     gv.addFlowToGraphViz(currentFlow);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhplyyueEeyJjNOKZ7e9aA" name="exitSrcNode" specification="_nddCQSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhplzCueEeyJjNOKZ7e9aA" name="ctx" type="_ndcbNiueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name
     gv.addSrcNodeToGraphViz(nodeName);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhqM0CueEeyJjNOKZ7e9aA" name="exitSnkNode" specification="_nddpVCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhqM0SueEeyJjNOKZ7e9aA" name="ctx" type="_nddpUiueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name
     gv.addSnkNodeToGraphViz(nodeName);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhqM0iueEeyJjNOKZ7e9aA" name="exitFlow" specification="_nde3cCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhqM0yueEeyJjNOKZ7e9aA" name="ctx" type="_ndeQYyueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ndZX4CueEeyJjNOKZ7e9aA" name="GraphVizListener" visibility="private" method="_nhplwCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_ndZX4iueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ndZX4yueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ndZX4SueEeyJjNOKZ7e9aA" name="gv" type="_nPNx8CueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndZX5CueEeyJjNOKZ7e9aA" type="_nPSqcCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ndZX5SueEeyJjNOKZ7e9aA" name="buildGraphViz" isStatic="true" method="_nhplwyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ndZX5iueEeyJjNOKZ7e9aA" name="gv" type="_nPNx8CueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ndZ-8iueEeyJjNOKZ7e9aA" name="enterWarpName" method="_nhplxSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ndamACueEeyJjNOKZ7e9aA" name="ctx" type="_ndZ-8CueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ndbNEiueEeyJjNOKZ7e9aA" name="exitWarp" method="_nhplxyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ndbNEyueEeyJjNOKZ7e9aA" name="ctx" type="_ndbNECueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ndcbMSueEeyJjNOKZ7e9aA" name="enterFlowName" method="_nhplySueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ndcbMiueEeyJjNOKZ7e9aA" name="ctx" type="_ndb0IyueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nddCQSueEeyJjNOKZ7e9aA" name="exitSrcNode" method="_nhplyyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nddCQiueEeyJjNOKZ7e9aA" name="ctx" type="_ndcbNiueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nddpVCueEeyJjNOKZ7e9aA" name="exitSnkNode" method="_nhqM0CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nddpVSueEeyJjNOKZ7e9aA" name="ctx" type="_nddpUiueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nde3cCueEeyJjNOKZ7e9aA" name="exitFlow" method="_nhqM0iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nde3cSueEeyJjNOKZ7e9aA" name="ctx" type="_ndeQYyueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nPVGsCueEeyJjNOKZ7e9aA" name="InputGraphFile">
              <ownedComment xmi:id="_niR34SueEeyJjNOKZ7e9aA">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ngiLcCueEeyJjNOKZ7e9aA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngiLcSueEeyJjNOKZ7e9aA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngiLciueEeyJjNOKZ7e9aA" name="wfm" visibility="private" type="_nO96UCueEeyJjNOKZ7e9aA" association="_ni0DYyueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngiLdCueEeyJjNOKZ7e9aA" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngiLdSueEeyJjNOKZ7e9aA" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngiygSueEeyJjNOKZ7e9aA" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngiygiueEeyJjNOKZ7e9aA" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhqM1CueEeyJjNOKZ7e9aA" name="InputGraphFile" specification="_ndhTsCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhqM1SueEeyJjNOKZ7e9aA" name="fm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhqM1iueEeyJjNOKZ7e9aA" type="_nPVGsCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>wfm = fm;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class
		verbose = false; // initialize verbose to false
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhqM1yueEeyJjNOKZ7e9aA" name="InputGraphFile" specification="_ndhTtSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhqM2CueEeyJjNOKZ7e9aA" name="fm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhqM2SueEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhqM2iueEeyJjNOKZ7e9aA" type="_nPVGsCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>wfm = fm;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class
		this.verbose = verbose; // initialize verbose as specified

	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhqM2yueEeyJjNOKZ7e9aA" name="setGraphFileName" specification="_nPWU0CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhqM3CueEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhqz4CueEeyJjNOKZ7e9aA" name="verifyGraphFileName" specification="_nPWU0iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhqz4SueEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */
		try {
			getInputGraphFileName(inputFile);
		} catch (Exception e) {
			// e.printStackTrace();
			System.err.println(&quot;Failed get an input file.&quot;);
			System.exit(-1);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhqz4iueEeyJjNOKZ7e9aA" name="readGraphFile" specification="_nPW74CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhqz4yueEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhqz5CueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits
		String inputFileName = getGraphFileName();
		graphFileContents = readGraphFileContents(inputFileName);
		return graphFileContents;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhqz5SueEeyJjNOKZ7e9aA" name="getInputGraphFileName" specification="_nPW74yueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhqz5iueEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhqz5yueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;
		String fileName = UNKNOWN;
		workingDirectory = wfm.getBaseDirectory();
		if (inputFile == null) { // if fileName is nil, then prompt for input file
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);
			System.out.print(&quot;Enter input file: &quot;);
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));
			try {
				fileName = bufferRead.readLine();
			} catch (IOException e) {
				// e.printStackTrace();
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());
			}
		} else {
			fileName = inputFile;
		}
		setGraphFileName(fileName);
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName
		if (tempFile.exists()) {  // see if the file exists
			if (verbose) {
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());
			}
		} else { // try the working directory
			setGraphFileName(workingDirectory + File.separator + fileName);
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName
			if (tempFile.exists()) {  // see if the file exists
				if (verbose) {
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());
				}
			} else {
				if (verbose) {
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());
				}
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);
				throw new RuntimeException();
			}
		}
		return fileName;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhqz6CueEeyJjNOKZ7e9aA" name="readGraphFileContents" specification="_nPXi8CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhqz6SueEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhqz6iueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);
		if (verbose) {
			System.out.println(&quot;************************************&quot;);
			System.out.println(&quot;Graph File Read:&quot;);
			System.out.println(graphFileContents);
			System.out.println(&quot;************************************\n&quot;);
		}
		return graphFileContents;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhqz6yueEeyJjNOKZ7e9aA" name="printVerboseMessage" specification="_nPXi8yueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhqz7CueEeyJjNOKZ7e9aA" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhqz7SueEeyJjNOKZ7e9aA" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhqz7iueEeyJjNOKZ7e9aA" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nPWU0CueEeyJjNOKZ7e9aA" name="setGraphFileName" visibility="private" method="_nhqM2yueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPWU0SueEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPWU0iueEeyJjNOKZ7e9aA" name="verifyGraphFileName" visibility="private" method="_nhqz4CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPWU0yueEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPW74CueEeyJjNOKZ7e9aA" name="readGraphFile" method="_nhqz4iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPW74SueEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPW74iueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPW74yueEeyJjNOKZ7e9aA" name="getInputGraphFileName" visibility="private" method="_nhqz5SueEeyJjNOKZ7e9aA" raisedException="_nfbYMCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPW75CueEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPW75SueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPXi8CueEeyJjNOKZ7e9aA" name="readGraphFileContents" visibility="private" method="_nhqz6CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPXi8SueEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPXi8iueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPXi8yueEeyJjNOKZ7e9aA" name="printVerboseMessage" visibility="private" method="_nhqz6yueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPXi9CueEeyJjNOKZ7e9aA" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPXi9SueEeyJjNOKZ7e9aA" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPXi9iueEeyJjNOKZ7e9aA" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ndhTsCueEeyJjNOKZ7e9aA" name="InputGraphFile" method="_nhqM1CueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_ndhTsiueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ndhTsyueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ndhTsSueEeyJjNOKZ7e9aA" name="fm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndhTtCueEeyJjNOKZ7e9aA" type="_nPVGsCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ndhTtSueEeyJjNOKZ7e9aA" name="InputGraphFile" method="_nhqM1yueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_ndhTuCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ndhTuSueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ndhTtiueEeyJjNOKZ7e9aA" name="fm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndhTtyueEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ndhTuiueEeyJjNOKZ7e9aA" type="_nPVGsCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nPYxECueEeyJjNOKZ7e9aA" name="InstructionTimeSlot">
              <generalization xmi:id="_ndih0CueEeyJjNOKZ7e9aA" general="_nQoHMCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngjZkCueEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngjZkSueEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhra8CueEeyJjNOKZ7e9aA" name="InstructionTimeSlot" specification="_nPZYICueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhra8SueEeyJjNOKZ7e9aA" type="_nPYxECueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhra8iueEeyJjNOKZ7e9aA" name="InstructionTimeSlot" specification="_nPZ_MCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhra8yueEeyJjNOKZ7e9aA" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhra9CueEeyJjNOKZ7e9aA" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhra9SueEeyJjNOKZ7e9aA" type="_nPYxECueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhra9iueEeyJjNOKZ7e9aA" name="InstructionTimeSlot" specification="_nPZ_NiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhra9yueEeyJjNOKZ7e9aA" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nhra-CueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhra-SueEeyJjNOKZ7e9aA" type="_nPYxECueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(rowArray);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nPZYICueEeyJjNOKZ7e9aA" name="InstructionTimeSlot" method="_nhra8CueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nPZYISueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nPZYIiueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nPZYIyueEeyJjNOKZ7e9aA" type="_nPYxECueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nPZ_MCueEeyJjNOKZ7e9aA" name="InstructionTimeSlot" visibility="package" method="_nhra8iueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nPZ_MyueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nPZ_NCueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nPZ_MSueEeyJjNOKZ7e9aA" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPZ_MiueEeyJjNOKZ7e9aA" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPZ_NSueEeyJjNOKZ7e9aA" type="_nPYxECueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nPZ_NiueEeyJjNOKZ7e9aA" name="InstructionTimeSlot" visibility="package" method="_nhra9iueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nPZ_OCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nPZ_OSueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nPZ_NyueEeyJjNOKZ7e9aA" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nPamQCueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPZ_OiueEeyJjNOKZ7e9aA" type="_nPYxECueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nPbNUCueEeyJjNOKZ7e9aA" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_nfdNYCueEeyJjNOKZ7e9aA" client="_nPbNUCueEeyJjNOKZ7e9aA" supplier="_ndI5MCueEeyJjNOKZ7e9aA" contract="_ndI5MCueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhra-iueEeyJjNOKZ7e9aA" name="compare" specification="_nfd0cCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhra-yueEeyJjNOKZ7e9aA" name="obj1" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhra_CueEeyJjNOKZ7e9aA" name="obj2" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhra_SueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);
		return result; // 0 => tie on release time
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nfd0cCueEeyJjNOKZ7e9aA" name="compare" method="_nhra-iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nfd0cSueEeyJjNOKZ7e9aA" name="obj1" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfd0ciueEeyJjNOKZ7e9aA" name="obj2" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfd0cyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nPcbcCueEeyJjNOKZ7e9aA" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_nfebgyueEeyJjNOKZ7e9aA" client="_nPcbcCueEeyJjNOKZ7e9aA" supplier="_ndI5MCueEeyJjNOKZ7e9aA" contract="_ndI5MCueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhra_iueEeyJjNOKZ7e9aA" name="compare" specification="_nffpoCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhra_yueEeyJjNOKZ7e9aA" name="obj1" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhrbACueEeyJjNOKZ7e9aA" name="obj2" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhrbASueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); 
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nffpoCueEeyJjNOKZ7e9aA" name="compare" method="_nhra_iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nffpoSueEeyJjNOKZ7e9aA" name="obj1" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nffpoiueEeyJjNOKZ7e9aA" name="obj2" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nffpoyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nPdpkCueEeyJjNOKZ7e9aA" name="Node">
              <generalization xmi:id="_ndk-EiueEeyJjNOKZ7e9aA" general="_nSnrQCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngjZkiueEeyJjNOKZ7e9aA" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngjZkyueEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngjZlCueEeyJjNOKZ7e9aA" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngjZlSueEeyJjNOKZ7e9aA" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngkAoCueEeyJjNOKZ7e9aA" name="edges" type="_nc5ooCueEeyJjNOKZ7e9aA" isReadOnly="true" association="_ni0qcSueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngkAoiueEeyJjNOKZ7e9aA" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ngkAoyueEeyJjNOKZ7e9aA" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_nfgQsyueEeyJjNOKZ7e9aA" client="_nPdpkCueEeyJjNOKZ7e9aA" supplier="_nfGoESueEeyJjNOKZ7e9aA" contract="_nfGoESueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhsCACueEeyJjNOKZ7e9aA" name="Node" specification="_nPe3sCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhsCASueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhsCAiueEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhsCAyueEeyJjNOKZ7e9aA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhsCBCueEeyJjNOKZ7e9aA" type="_nPdpkCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super();
 	setName(name);
 	setPriority(priority);
 	this.index = index;
 	this.channel = DEFAULT_CHANNEL;
 	this.edges = new ArrayList&lt;Edge>();
 	this.conflicts = new HashSet&lt;String>();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhsCBSueEeyJjNOKZ7e9aA" name="compareTo" specification="_ndjv8CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhsCBiueEeyJjNOKZ7e9aA" name="node" type="_nPdpkCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhsCByueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhsCCCueEeyJjNOKZ7e9aA" name="toString" specification="_nPfewCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhsCCSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhsCCiueEeyJjNOKZ7e9aA" name="addEdge" specification="_ndk-ECueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhsCCyueEeyJjNOKZ7e9aA" name="edge" type="_nO1-gCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>edges.add(edge);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhsCDCueEeyJjNOKZ7e9aA" name="addConflict" specification="_nPgF0iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhsCDSueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhsCDiueEeyJjNOKZ7e9aA" name="numEdges" specification="_nPgF1CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhsCDyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhsCECueEeyJjNOKZ7e9aA" name="print" specification="_nPgs4SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhsCESueEeyJjNOKZ7e9aA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);
		this.print();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhsCEiueEeyJjNOKZ7e9aA" name="print" specification="_nPhT8iueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>super.print();
		System.out.print(&quot;Edge info for this partiion\n&quot;);
		for (Edge edge: edges) {
			edge.print();
		}
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nPe3sCueEeyJjNOKZ7e9aA" name="Node" visibility="package" method="_nhsCACueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nPe3tCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nPe3tSueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nPe3sSueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPe3siueEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPe3syueEeyJjNOKZ7e9aA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPe3tiueEeyJjNOKZ7e9aA" type="_nPdpkCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nPfewCueEeyJjNOKZ7e9aA" name="toString" method="_nhsCCCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPfewSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPgF0iueEeyJjNOKZ7e9aA" name="addConflict" method="_nhsCDCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPgF0yueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPgF1CueEeyJjNOKZ7e9aA" name="numEdges" method="_nhsCDiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPgs4CueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPgs4SueEeyJjNOKZ7e9aA" name="print" method="_nhsCECueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPgs4iueEeyJjNOKZ7e9aA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPhT8iueEeyJjNOKZ7e9aA" name="print" method="_nhsCEiueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_ndjv8CueEeyJjNOKZ7e9aA" name="compareTo" method="_nhsCBSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ndkXACueEeyJjNOKZ7e9aA" name="node" type="_nPdpkCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndkXASueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ndk-ECueEeyJjNOKZ7e9aA" name="addEdge" method="_nhsCCiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ndk-ESueEeyJjNOKZ7e9aA" name="edge" type="_nO1-gCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nPjJICueEeyJjNOKZ7e9aA" name="NodeMap">
              <ownedComment xmi:id="_niR34iueEeyJjNOKZ7e9aA">
                <body>NodeMap creates a mapping from graph node name to 
node object (name, Node).

@author sgoddard2
 *</body>
              </ownedComment>
              <generalization xmi:id="_ndllICueEeyJjNOKZ7e9aA" general="_nN2gACueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngknsCueEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngknsSueEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nPjwMCueEeyJjNOKZ7e9aA" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_niR34yueEeyJjNOKZ7e9aA">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.

@author sgoddard2
 *</body>
              </ownedComment>
              <generalization xmi:id="_ndmMNyueEeyJjNOKZ7e9aA" general="_nQuN0CueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhspECueEeyJjNOKZ7e9aA" name="NonPreemptiveSchedule" specification="_ndmMMSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhspESueEeyJjNOKZ7e9aA" name="poset" type="_nPpPwCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhspEiueEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhspEyueEeyJjNOKZ7e9aA" type="_nPjwMCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ndmMMSueEeyJjNOKZ7e9aA" name="NonPreemptiveSchedule" visibility="package" method="_nhspECueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_ndmMNCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ndmMNSueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ndmMMiueEeyJjNOKZ7e9aA" name="poset" type="_nPpPwCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndmMMyueEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ndmMNiueEeyJjNOKZ7e9aA" type="_nPjwMCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nPkXQCueEeyJjNOKZ7e9aA" name="NotImplentedVisualization">
              <generalization xmi:id="_ndmzQSueEeyJjNOKZ7e9aA" general="_nRRncCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngknsiueEeyJjNOKZ7e9aA" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngknsyueEeyJjNOKZ7e9aA" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngkntCueEeyJjNOKZ7e9aA" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngkntSueEeyJjNOKZ7e9aA" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nglOwCueEeyJjNOKZ7e9aA" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nglOwSueEeyJjNOKZ7e9aA" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhspFCueEeyJjNOKZ7e9aA" name="NotImplentedVisualization" specification="_nPk-UCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhspFSueEeyJjNOKZ7e9aA" type="_nPkXQCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhspFiueEeyJjNOKZ7e9aA" name="NotImplentedVisualization" specification="_nPllYCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhspFyueEeyJjNOKZ7e9aA" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhspGCueEeyJjNOKZ7e9aA" type="_nPkXQCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhtQICueEeyJjNOKZ7e9aA" name="visualization" specification="_nPllZSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhtQISueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nPk-UCueEeyJjNOKZ7e9aA" name="NotImplentedVisualization" visibility="package" method="_nhspFCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nPk-USueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nPk-UiueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nPk-UyueEeyJjNOKZ7e9aA" type="_nPkXQCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nPllYCueEeyJjNOKZ7e9aA" name="NotImplentedVisualization" visibility="package" method="_nhspFiueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nPllYiueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nPllYyueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nPllYSueEeyJjNOKZ7e9aA" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nPllZCueEeyJjNOKZ7e9aA" type="_nPkXQCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nPllZSueEeyJjNOKZ7e9aA" name="visualization" method="_nhtQICueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ndmzQCueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nPmzgCueEeyJjNOKZ7e9aA" name="PeriodComparator">
              <interfaceRealization xmi:id="_nfiF4CueEeyJjNOKZ7e9aA" client="_nPmzgCueEeyJjNOKZ7e9aA" supplier="_ndI5MCueEeyJjNOKZ7e9aA" contract="_ndI5MCueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhtQIiueEeyJjNOKZ7e9aA" name="compare" specification="_nfis8CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhtQIyueEeyJjNOKZ7e9aA" name="obj1" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhtQJCueEeyJjNOKZ7e9aA" name="obj2" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhtQJSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); 
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nfis8CueEeyJjNOKZ7e9aA" name="compare" method="_nhtQIiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nfis8SueEeyJjNOKZ7e9aA" name="obj1" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfis8iueEeyJjNOKZ7e9aA" name="obj2" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfis8yueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nPpPwCueEeyJjNOKZ7e9aA" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_niR35CueEeyJjNOKZ7e9aA">
                <body>Poset is a partially ordered set of activations
that are partitions of the workload to be scheduled.
This version assumes each activation is a node
and each node has a list of edges associated with it.
Each node/activation in an edge is identified as either 
a transmitter or sender for that edge.

@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_nglOwiueEeyJjNOKZ7e9aA" name="activations" visibility="private" type="_nOVBICueEeyJjNOKZ7e9aA" association="_ni0qdCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_nglOxCueEeyJjNOKZ7e9aA" name="workload" visibility="private" type="_nR2PMCueEeyJjNOKZ7e9aA" association="_ni1RgSueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngl10SueEeyJjNOKZ7e9aA" name="flows" visibility="protected" type="_nPCLwCueEeyJjNOKZ7e9aA" association="_ni14kSueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_ngl10yueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ngl11CueEeyJjNOKZ7e9aA" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ngl10iueEeyJjNOKZ7e9aA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngl11iueEeyJjNOKZ7e9aA" name="nodes" visibility="private" type="_nPdpkCueEeyJjNOKZ7e9aA" association="_ni14lCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_ngl12CueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ngl12SueEeyJjNOKZ7e9aA" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ngl11yueEeyJjNOKZ7e9aA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngmc4SueEeyJjNOKZ7e9aA" name="nodeMap" visibility="private" type="_nPjJICueEeyJjNOKZ7e9aA" association="_ni2foSueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngmc4yueEeyJjNOKZ7e9aA" name="priorityQueue" visibility="private" type="_nQbS5CueEeyJjNOKZ7e9aA" association="_ni2fpCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngnD8iueEeyJjNOKZ7e9aA" name="nodeConnectivityMap" visibility="protected" type="_nc4agCueEeyJjNOKZ7e9aA" association="_ni3GsSueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngnrASueEeyJjNOKZ7e9aA" name="activationMap" visibility="package" type="_nPNK4CueEeyJjNOKZ7e9aA" association="_ni3GtCueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhtQJiueEeyJjNOKZ7e9aA" name="Poset" specification="_ndoBYSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhtQJyueEeyJjNOKZ7e9aA" name="workload" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhtQKCueEeyJjNOKZ7e9aA" type="_nPpPwCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;
		this.activations = new Activations();
		this.activationMap = new FlowNodeToActivationMap();
		/* init map to return a null activation if null key intered */
		this.activationMap.put(null, null);
		flows = workload.getFlows().values();
		nodeMap = workload.getNodes();
		nodes = nodeMap.values();
		priorityQueue = new 
				SchedulableObjectQueue&lt;Activation>(new 
						PriorityComparator&lt;Activation>());
		/* get global node connectivity */
		nodeConnectivityMap = getNodeConnectivity();
		buildPosetOfActivations();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhtQKSueEeyJjNOKZ7e9aA" name="getNodeConnectivity" specification="_nPrE8CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhtQKiueEeyJjNOKZ7e9aA" type="_nc4agCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();
		
		for (Flow flow: flows) {
			var nodesInFlow = flow.getNodes();
			var size = nodesInFlow.size();
			for (Integer i =0 ; i &lt; size; i++) {
				var nodeName = nodesInFlow.get(i).getName();
				var connectivity = map.get(nodeName);
				var connections = 2; // default # of connections
				if (i == 0 || i == size-1) {
					/* src or snk => connections = 1 */
					connections = 1;
				}
				if (connectivity != null) {
					connectivity += connections;
					map.put(nodeName,connectivity);
				} else {
					map.put(nodeName,connections); // initial connection
				}
			}
		}
		return map;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhtQKyueEeyJjNOKZ7e9aA" name="getNodeNames" specification="_nPsTECueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhtQLCueEeyJjNOKZ7e9aA" type="_nc5ooCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();
		var nodeNames = new ArrayList&lt;String>(keys.size());
		nodeNames.addAll(keys);
		return nodeNames;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhtQLSueEeyJjNOKZ7e9aA" name="getNodesNamesOrderedAlphabetically" specification="_nPthMCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhtQLiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nhtQLyueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodesOrderedAlphabetically();
		return nodeNames;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhtQMCueEeyJjNOKZ7e9aA" name="buildPosetOfActivations" specification="_nPuIQCueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */

		/*
		 * (1) Create edges, setting priority and release time
		 * 		add edges to node respective node lists as edge is created
		 * (2) Create conflict set for each node (adjacent nodes)
		 * (3) Create activations by selecting coordinators within 
		 * 		each flow and adding that coordinator's edges and
		 * 		release times to an activation with the coordinator's name
		 * 		(each activation will have one coordinator and the
		 * 			number of activations &lt;= number nodes)
		 * (4) Order the activations
		 */

		createEdgeLists(); // (1)
		createConflictLists(); // (2)
		createInitialActivations(); // (3)
		orderActivations(); // (4)
		/* At this point, each flow has been partitioned 
		 */
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nht3MCueEeyJjNOKZ7e9aA" name="createEdgeLists" specification="_nPuIQSueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */
		var maxFlowLength = workload.maxFlowLength();
		for (Flow flow: flows) {
			var flowNodes = flow.getNodes();
			var numTxArray = workload.getLinkCommunicationCosts(flow.getName());
			var flowPhase = flow.getPhase();
			var flowPriority = flow.getPriority();
			var period = flow.getPeriod();
			var deadline = flow.getDeadline();
			Edge edge = null;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {
				/* Create edges, setting priority and release time */
				/* This version adds edges to the main node in NodeMap.
				 * This allows creation of large partitions, with at most one per node.
				 * An alternative, we can have a lot of small partitions that can be
				 * combined later, which may create more parallelism.
				 * So, both the global NodeMap nodes and the nodes in the
				 * flows are updated with the same edge information. 
				 * This let's us play with partition creation options later.
				 */
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); 
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());
				var flowSrc = flowNodes.get(i);  // node in the flow
				var flowSnk = flowNodes.get(i+1);
				var src = srcNode.getName();
				var snk = snkNode.getName();

				/*
				 * Edge priority within a flow is based on position
				 * in flow. Each Flow has its own priority. This 
				 * creates a 2-dimensional priority. Thus, we
				 * can keep a total ordering of edges if we fold the
				 * table into a single row where we assume each new flow
				 * starts maxFlowSize away from the previous flow nodes:
				 * edgePriority = flowPriority*maxFlowLength + edgePosition
				 */
				// var flowPriority = flow.getPriority();
				var priority = (flowPriority * maxFlowLength) + i;
				//var period = flow.getPeriod();
				// var deadline = flow.getDeadline();
				/* edge phase = flow phase + edge position in flow */
				var phase = flowPhase + i; 
				var numTx = numTxArray[i];
				edge = new Edge(flow.getName(),src,snk,priority, 
						period, deadline, phase, numTx);
				/* Add edge to the nodes in the NodeMap */
				srcNode.addEdge(edge);
				snkNode.addEdge(edge);
				/* Add edge to the nodes in the flow */
				flowSrc.addEdge(edge);
				flowSnk.addEdge(edge);
				/* Add the edege to the flow */
				flow.addEdge(edge);

			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nht3MSueEeyJjNOKZ7e9aA" name="createConflictLists" specification="_nPuvUCueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>/* create conflict lists at global and
		 * local levels (i.e., NodeMap and Flow)
		 */
		createGlobalConflictLists();
		createLocalConflictLists();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nht3MiueEeyJjNOKZ7e9aA" name="createGlobalConflictLists" specification="_nPuvUSueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>for (Node node: nodes) {
			for (Edge edge: node.getEdges()) {
				/* get src and snk nodes and names */
				var src = edge.getSrc();
				var snk = edge.getSnk();
				var srcNode = nodeMap.get(src);
				var snkNode = nodeMap.get(snk);
				/* 
				 * conflict list is a set, so just add
				 * don't need to worry about duplicates
				 * as Set ensures that doesn't happen.
				 */
				srcNode.addConflict(snk);
				snkNode.addConflict(src);
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nht3MyueEeyJjNOKZ7e9aA" name="createLocalConflictLists" specification="_nPvWYCueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>for (Flow flow: flows) {
			var flowNodes = flow.getNodes();
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {
				var srcNode = flowNodes.get(i); 
				var snkNode = flowNodes.get(i+1);
				var src = srcNode.getName();
				var snk = snkNode.getName();
				/* 
				 * conflict list is a set, so just add
				 * don't need to worry about duplicates
				 * as Set ensures that doesn't happen.
				 */
				srcNode.addConflict(snk);
				snkNode.addConflict(src);
			}
		}


	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nht3NCueEeyJjNOKZ7e9aA" name="findCoordinator" specification="_nfjUAiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nht3NSueEeyJjNOKZ7e9aA" name="nodesInFlow" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nht3NiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();
		var coordinatorIndex = 0;
		var maxEdges = 0;
		for (Integer i = 0; i &lt; size; i++) {
			var node = nodesInFlow.get(i);
			var numEdges = node.numEdges();
			if (numEdges > maxEdges) {
				maxEdges = numEdges;
				coordinatorIndex = i;
			}
		}
		return coordinatorIndex;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nht3NyueEeyJjNOKZ7e9aA" name="buildTxArray" specification="_nfj7EyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nht3OCueEeyJjNOKZ7e9aA" name="nodesInFlow" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nht3OSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nht3OiueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();
		var txArray = new Integer[size];
		for (Integer i = 0; i &lt; size; i++) {
			var node = nodesInFlow.get(i);
			txArray[i] = getMaxTx(node);
		}
		return txArray;
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nht3OyueEeyJjNOKZ7e9aA" name="createInitialActivations" specification="_nPv9cCueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>for (Flow flow: flows) {
			var nodesInFlow = flow.getNodes();
			Integer coordinatorIndex = 0;
			/* Find the node with max edges connected.
			 * This will be the first coordinator selected
			 * for this flow.
			 */
			coordinatorIndex = findCoordinator(nodesInFlow);
			var txArray = buildTxArray(nodesInFlow);
			/* if coordinatorIndex is odd, then other coordinators
			 * are also odd numbers, even otherwise. 
			 * */
			Integer startIndex = 0; // for even coordinatorIndex
			if ((coordinatorIndex % 2) == 1) {
				/* coordinatorIndex is odd, so start at 1 */
				startIndex = 1;
			}
			if (startIndex >= nodesInFlow.size()) {
				/* create a partition the single partition */
			}
			var activationPhaseOffset = 0;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {
				var node = nodesInFlow.get(i);
				/* create a partition consisting of node i */
				String name = flow.getName() + &quot;:&quot; + node.getName();
				Activation partition = getActivation(name, node);
				/* Update phase for each edge in new partition based on 
				 * the current offset, which increases after each
				 * partition created.
				 * */
				partition.increaseEdgePhases(activationPhaseOffset);
				activations.put(name,partition);
				/* increase offset for next partition based on the 
				 * max numTx in this partition/node 
				 * But need to account for phase already assumes
				 * 1 Tx already
				 * */
				activationPhaseOffset += txArray[i]-1;  // adjust by one
			} 
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nht3PCueEeyJjNOKZ7e9aA" name="getMaxTx" specification="_ndoodCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nht3PSueEeyJjNOKZ7e9aA" name="node" type="_nPdpkCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nht3PiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;
		for (Edge edge: node.getEdges()) {
			result = Math.max(result, edge.getNumTx());
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nht3PyueEeyJjNOKZ7e9aA" name="getActivation" specification="_ndpPgSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nht3QCueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nht3QSueEeyJjNOKZ7e9aA" name="node" type="_nPdpkCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nht3QiueEeyJjNOKZ7e9aA" type="_nN7_kCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);
		if (newPartition == null) {
			// no partition by that name exists, so create one
			newPartition = new Activation(name);
			activationMap.put(node,newPartition);
		}
		/* add the node as the coordinator */
		newPartition.addCoordinator(node.getName());
		/* set the conflicts */
		newPartition.setConflicts(node.getConflicts());
		/* add the edges associated with this coordinator */
		newPartition.addEdges(node.getEdges());
		/* set the predecessor as the node's predecessor */
		var nodePred = node.getPredecessor();
		var pred = activationMap.get(nodePred);
		if (nodePred != null &amp;&amp; pred == null) {
			/* try next node up the flow */
			nodePred = nodePred.getPredecessor();
			pred = activationMap.get(nodePred);
		}
		newPartition.setPredecessor(pred);
		return newPartition;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhueQCueEeyJjNOKZ7e9aA" name="getHyperPeriod" specification="_nPv9cSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhueQSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhueQiueEeyJjNOKZ7e9aA" name="getMaxPhase" specification="_nPwkgSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhueQyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhueRCueEeyJjNOKZ7e9aA" name="orderActivations" specification="_nPxLkCueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue
		/* Update the release time and priority of each partition activation */
		for (Activation activation: activations.values()) {
			activation.updatePriorityAndRelease(currentTime);
		}
		/* create a queue sorted first by release times and then priorities */
		priorityQueue = new 
				SchedulableObjectQueue&lt;Activation>(new 
						PriorityComparator&lt;Activation>(),activations.values());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhueRSueEeyJjNOKZ7e9aA" name="getNextActivation" specification="_nPxLkSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhueRiueEeyJjNOKZ7e9aA" type="_nN7_kCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhueRyueEeyJjNOKZ7e9aA" name="addActivation" specification="_ndpPhiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhueSCueEeyJjNOKZ7e9aA" name="activation" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>priorityQueue.add(activation);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhueSSueEeyJjNOKZ7e9aA" name="findBaseStation" specification="_nPxLkiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhueSiueEeyJjNOKZ7e9aA" type="_nPdpkCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;
		Iterator&lt;Flow> iterator = flows.iterator();
		Flow flow = iterator.next();
		var nodes = flow.getNodes();
		var srcBaseStation = nodes.get(0);
		var srcBaseStationName = srcBaseStation.getName();
		var snkBaseStation = nodes.get(nodes.size()-1);
		var snkBaseStationName = snkBaseStation.getName(); 
		var found = false;
 
     while (!found &amp;&amp; iterator.hasNext()) {
     	flow = iterator.next();
 		nodes = flow.getNodes();
     	var src = nodes.get(0);
			var srcName = src.getName();
			var snk = nodes.get(nodes.size()-1);
			var snkName = snk.getName();
			if (!srcBaseStationName.equals(srcName) &amp;&amp; 
					snkBaseStationName.equals(snkName)) {
				baseStation = snkBaseStation;
				found = true;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; 
					!snkBaseStationName.equals(snkName)) {
				baseStation = srcBaseStation;
				found = true;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;
					snkBaseStationName.equals(srcName)) {
				baseStation = snkBaseStation;
				found = true;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; 
					!snkBaseStationName.equals(srcName)) {
				baseStation = srcBaseStation;
				found = true;
			}
     }
     if (!found) {
     	/* initial snk and src tie for base station. That is
     	 * each is always a flow src with the other a snk or
     	 * vice versa. 
     	 * So pick initial snk as the base station */
     	baseStation = snkBaseStation;
     }
		return baseStation;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nPrE8CueEeyJjNOKZ7e9aA" name="getNodeConnectivity" visibility="private" method="_nhtQKSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nfjUACueEeyJjNOKZ7e9aA" type="_nc4agCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nPsTECueEeyJjNOKZ7e9aA" name="getNodeNames" method="_nhtQKyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nfjUASueEeyJjNOKZ7e9aA" type="_nc5ooCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nPthMCueEeyJjNOKZ7e9aA" name="getNodesNamesOrderedAlphabetically" method="_nhtQLSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPthMSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nPthMiueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPuIQCueEeyJjNOKZ7e9aA" name="buildPosetOfActivations" method="_nhtQMCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nPuIQSueEeyJjNOKZ7e9aA" name="createEdgeLists" visibility="private" method="_nht3MCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nPuvUCueEeyJjNOKZ7e9aA" name="createConflictLists" visibility="private" method="_nht3MSueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nPuvUSueEeyJjNOKZ7e9aA" name="createGlobalConflictLists" visibility="private" method="_nht3MiueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nPvWYCueEeyJjNOKZ7e9aA" name="createLocalConflictLists" visibility="private" method="_nht3MyueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nPv9cCueEeyJjNOKZ7e9aA" name="createInitialActivations" visibility="private" method="_nht3OyueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nPv9cSueEeyJjNOKZ7e9aA" name="getHyperPeriod" method="_nhueQCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPwkgCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPwkgSueEeyJjNOKZ7e9aA" name="getMaxPhase" method="_nhueQiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nPwkgiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nPxLkCueEeyJjNOKZ7e9aA" name="orderActivations" method="_nhueRCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nPxLkSueEeyJjNOKZ7e9aA" name="getNextActivation" method="_nhueRSueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niSe8iueEeyJjNOKZ7e9aA">
                  <body>getNextActivation returns the highest priority
	 * partition that has been released at or before input
	 * parameter time.
	 * 
	 * @param time
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_ndpPhSueEeyJjNOKZ7e9aA" type="_nN7_kCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nPxLkiueEeyJjNOKZ7e9aA" name="findBaseStation" visibility="protected" method="_nhueSSueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niSe9CueEeyJjNOKZ7e9aA">
                  <body>findBaseStation is used by algorithms that generate the
	 * partially ordered set of activations using a base station. 
	 * This method searches the set of flows to find the node that
	 * is always one of the src or snk nodes. In the case of a tie
	 * where there are two candidates the initial snk node is
	 * returned. If there are multiple base stations, only the fist
	 * one found is returned.
	 * 
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_ndp2kCueEeyJjNOKZ7e9aA" type="_nPdpkCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ndoBYSueEeyJjNOKZ7e9aA" name="Poset" visibility="package" method="_nhtQJiueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_ndoocSueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ndoociueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_niSe8CueEeyJjNOKZ7e9aA">
                  <body>Partition types:
	 *  
	 *  by node--each node is a partition using only one channel
	 *  by channel
	 *  	by node then identify when a coordinator and when not
	 *  	by flow and coordinator in that flow
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_ndoocCueEeyJjNOKZ7e9aA" name="workload" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndoocyueEeyJjNOKZ7e9aA" type="_nPpPwCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ndoodCueEeyJjNOKZ7e9aA" name="getMaxTx" visibility="private" method="_nht3PCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ndoodSueEeyJjNOKZ7e9aA" name="node" type="_nPdpkCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndpPgCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ndpPgSueEeyJjNOKZ7e9aA" name="getActivation" visibility="private" method="_nht3PyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ndpPgiueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ndpPgyueEeyJjNOKZ7e9aA" name="node" type="_nPdpkCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndpPhCueEeyJjNOKZ7e9aA" type="_nN7_kCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ndpPhiueEeyJjNOKZ7e9aA" name="addActivation" method="_nhueRyueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niSe8yueEeyJjNOKZ7e9aA">
                  <body>addElemement adds the partitionElement to the priority queue
	 * 
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_ndpPhyueEeyJjNOKZ7e9aA" name="activation" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nfjUAiueEeyJjNOKZ7e9aA" name="findCoordinator" visibility="protected" method="_nht3NCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niSe8SueEeyJjNOKZ7e9aA">
                  <body>*
	 * @param nodesInFlow
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_nfj7ECueEeyJjNOKZ7e9aA" name="nodesInFlow" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfj7ESueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nfj7EyueEeyJjNOKZ7e9aA" name="buildTxArray" visibility="private" method="_nht3NyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nfkiICueEeyJjNOKZ7e9aA" name="nodesInFlow" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfkiISueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nfkiIiueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nP1dACueEeyJjNOKZ7e9aA" name="PreemptiveSchedule">
              <ownedComment xmi:id="_niSe9SueEeyJjNOKZ7e9aA">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, 
priority schedule for the Poset using numChannels. 

@author sgoddard2
 *</body>
              </ownedComment>
              <generalization xmi:id="_ndvWIyueEeyJjNOKZ7e9aA" general="_nQuN0CueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhueSyueEeyJjNOKZ7e9aA" name="PreemptiveSchedule" specification="_ndrEsCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhueTCueEeyJjNOKZ7e9aA" name="poset" type="_nPpPwCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhueTSueEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhueTiueEeyJjNOKZ7e9aA" type="_nP1dACueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhvFUCueEeyJjNOKZ7e9aA" name="continueSearch" specification="_ndrrwCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhvFUSueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhvFUiueEeyJjNOKZ7e9aA" name="activation" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhvFUyueEeyJjNOKZ7e9aA" type="_nflJMCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhvFVCueEeyJjNOKZ7e9aA" name="toProgram" specification="_nP2rICueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhvFVSueEeyJjNOKZ7e9aA" type="_nQTXECueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	
		
//TODO write code to support preemption
		
		return program;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhvFViueEeyJjNOKZ7e9aA" name="findPreeptiveChannelAndTime" specification="_nds54CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhvFVyueEeyJjNOKZ7e9aA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhvFWCueEeyJjNOKZ7e9aA" name="schedulableObject" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhvFWSueEeyJjNOKZ7e9aA" type="_nflJMCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;
		var time = startTime;
		var result = findMaxTimeAvailable(time, schedulableObject);
		var channelConsidered = result.channel;
		var timeAvailable = result.time;
		
		
		if (channelConsidered == numChannels) {
			/* no available time slots near this time, even for preemption */
			return findChannelAndTime(time+1,schedulableObject);
		} else {
			/* can use timeAvailable.time here on timeAvailable.channel
			 * then must find additional time on same channel until 
			 * done
			 */
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);
			var duration = schedulableObject.getExecutionDuration();
			var timeRemaining = duration-timeAvailable;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);
			var numStartTimes = additionalScheduleTimes.size();
			var lastStartTime = endScheduleTime; 
			if (numStartTimes > 0 ) {
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();
			}
			if (lastStartTime &lt; endScheduleTime) {
				// schedulableObject.addAdditionalStartTime(nextStartTime);
				channel = channelConsidered;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);
			} else {
				time = lastStartTime;
			}
		}
		return new ScheduleLocation(channel, time);	
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhvFWiueEeyJjNOKZ7e9aA" name="findAdditionalTime" specification="_nds54yueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhvFWyueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhvFXCueEeyJjNOKZ7e9aA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhvFXSueEeyJjNOKZ7e9aA" name="a1" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhvFXiueEeyJjNOKZ7e9aA" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhvFXyueEeyJjNOKZ7e9aA" type="_nc5ooCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>var time = startTime;
		var results = new ArrayList&lt;ScheduleTime>();
		
		// if (timeRemaining &lt;= )
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {
			time ++; 
		}
		if (time >= endScheduleTime) {
			/* no conflict time available */
			results.add(new ScheduleTime(time,time));
			return results;
		} 
		
		if (isAvailable(a1, channel, time, timeRemaining)) {
			results.add(new ScheduleTime(time,time+timeRemaining-1));
		} else {
			var timeAvailable = availableTime(a1,  channel, time);
			if (timeAvailable > 0) {
				/* found at least one time slot available */
//				a1.addAdditionalStartTime(time);
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));
			} else {
				/* look ahead in time by one unit */
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));
			}
			
		}
		
		return results;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhvFYCueEeyJjNOKZ7e9aA" name="findMaxTimeAvailable" specification="_ndtg8SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhvFYSueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhvFYiueEeyJjNOKZ7e9aA" name="schedulableObject" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhvFYyueEeyJjNOKZ7e9aA" type="_nflJMCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;
		var bestChannel = numChannels;
		
		for (int channel = 0; channel &lt; numChannels ; channel++) {
			var timeAvailable = availableTime(schedulableObject,channel,time);
			if (timeAvailable > maxTime) {
				maxTime = timeAvailable;
				bestChannel = channel;
			}
		}
// TEMP
		if (maxTime > 0) {
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);
		}
// TEMP
		return new ScheduleLocation(bestChannel,maxTime);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhvFZCueEeyJjNOKZ7e9aA" name="availableTime" specification="_nduIACueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhvFZSueEeyJjNOKZ7e9aA" name="a1" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhvFZiueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhvFZyueEeyJjNOKZ7e9aA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhvFaCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;
		
		while (isAvailable(a1,channel,start+result,1)) {
			result++;
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhvFaSueEeyJjNOKZ7e9aA" name="addToSchedule" specification="_nduIBSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhvFaiueEeyJjNOKZ7e9aA" name="next" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhvFayueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhvFbCueEeyJjNOKZ7e9aA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhvFbSueEeyJjNOKZ7e9aA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhvFbiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;
		var combineTime = endScheduleTime;
		
		var nextScheduleTime = next.getNextScheduleTime(startTime);
		var nextStartTime = nextScheduleTime.getStartTime();
		var nextEndTime = nextScheduleTime.getEndTime();
		
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {
			/* can't schedule this activation */
			return false;
		}
		
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {
			/* add the next slice of execution to the schedule */
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);
		}
		if (!success) {
			return false;
		}
		
		/* Successful adding next to later points in the schedule.
		 * So, now we see if this is the last
		 * 
		 */
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {
			/* this is the last slice of execution, so wrap things up */
			next.setEndTime(endTime);
			var responseTime = endTime - next.getReleaseTime();
			if (responseTime > next.getDeadline()) {
				return false; // unable to schedule this entry
			}
			/* Add the endTime to the elements endTimes Q
			 * so that we can track predecessor endTimes
			 * and make sure successors don't start before 
			 * predecessors
			 */
			next.addToEndTimes(endTime); 
			/* remove predecessor end time that matches this start time */
			var pred = next.getPredecessor();
			if (pred != null) {
				pred.pollEndTimes(); 
			}
		}
		/* Create a new entry, based on next, to be entered
		 * into the scheduling tale
		 */
		var entry = new Activation(next, startTime);
		/* Check to see we need to combine this activation with
		 * an existing activation in any of the slots. If so,
		 * save that time so we can update the actual start time
		 */
		Activation currentEntry = null;
		for (int i = startTime; i &lt;= endTime; i++) {
			currentEntry = schedule.get(channel,i);
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {
				/* found an entry to combine, record the time,
				 * update the combined duration and new
				 * endTime, then exit the loop
				 */
				combineTime = i;
				// currentEntry = entry;
				break;
			}
		}
		entry.setStartTime(startTime); // set start time for this entry
		entry.setEndTime(endTime); // set end time for this entry
		if (combineTime &lt; endScheduleTime) {
			/* change entry to point to combinedActivation
			 * and set startTime to the beginning of the 
			 * combined entries */
			var combinedActivation = new CombinedActivation(currentEntry, entry);
			entry = combinedActivation;
			startTime = entry.getStartTime();
		}
		for (int i = startTime; i &lt;= endTime; i++) {
			/* Add this object to the schedule for the
			 * from startTime to endTime.
			 */
			schedule.set(channel, i, entry);
		}
		
		return success;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhvsYCueEeyJjNOKZ7e9aA" name="addToSchedule" specification="_nduvEyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhvsYSueEeyJjNOKZ7e9aA" name="next" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhvsYiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);
		if (channel == numChannels) {
			return false;
		}
		
		/* found a time and channel  that are valid */
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()
		var success = false; 
		
// PREEMPT
		var timeAvailable = availableTime(next, channel, startTime);
		var duration = next.getExecutionDuration();
		
		if (timeAvailable == 0 ) {
			/* then currentEntry at this location in the schedule
			 * is not null and we can combine, but best to check
			 */
			var currentEntry = schedule.get(channel,startTime);
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {
				/* no conflict with this entry, and can
				 * combine so check for combined entry time
				 *  to see if we can combine activations
				 */
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);
				var combinedEntry = new CombinedActivation(currentEntry,next);
				var searchTime = currentEntry.getEndTime()+1;
				var searchLength = combinedDuration - duration;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {
					timeAvailable = combinedDuration;
					duration = combinedDuration;
				}
			}
		}
			if (duration &lt;= timeAvailable) {
				/* can execute without preemption */
				var endTime = startTime+duration-1;
				success = addToSchedule(next,channel,startTime,endTime);
			} else {
				/* Recursively add 'slices' to the schedule.
				 * success == true => all slices added successfully
				 * otherwise, none of the slices were added
				 */
				var endTime = startTime + timeAvailable-1;
				success = addToSchedule(next,channel,startTime,endTime);
			}
		return success;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nP2rICueEeyJjNOKZ7e9aA" name="toProgram" method="_nhvFVCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ndsS0iueEeyJjNOKZ7e9aA" type="_nQTXECueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ndrEsCueEeyJjNOKZ7e9aA" name="PreemptiveSchedule" visibility="package" method="_nhueSyueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_ndrEsyueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ndrEtCueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ndrEsSueEeyJjNOKZ7e9aA" name="poset" type="_nPpPwCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ndrEsiueEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ndrEtSueEeyJjNOKZ7e9aA" type="_nP1dACueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ndrrwCueEeyJjNOKZ7e9aA" name="continueSearch" visibility="protected" method="_nhvFUCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ndrrwSueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ndrrwiueEeyJjNOKZ7e9aA" name="activation" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nflwQSueEeyJjNOKZ7e9aA" type="_nflJMCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nds54CueEeyJjNOKZ7e9aA" name="findPreeptiveChannelAndTime" visibility="private" method="_nhvFViueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nds54SueEeyJjNOKZ7e9aA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nds54iueEeyJjNOKZ7e9aA" name="schedulableObject" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nflwQiueEeyJjNOKZ7e9aA" type="_nflJMCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nds54yueEeyJjNOKZ7e9aA" name="findAdditionalTime" visibility="private" method="_nhvFWiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nds55CueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nds55SueEeyJjNOKZ7e9aA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nds55iueEeyJjNOKZ7e9aA" name="a1" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nds55yueEeyJjNOKZ7e9aA" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nfmXUCueEeyJjNOKZ7e9aA" type="_nc5ooCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ndtg8SueEeyJjNOKZ7e9aA" name="findMaxTimeAvailable" visibility="private" method="_nhvFYCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ndtg8iueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ndtg8yueEeyJjNOKZ7e9aA" name="schedulableObject" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfmXUSueEeyJjNOKZ7e9aA" type="_nflJMCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nduIACueEeyJjNOKZ7e9aA" name="availableTime" visibility="private" method="_nhvFZCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nduIASueEeyJjNOKZ7e9aA" name="a1" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nduIAiueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nduIAyueEeyJjNOKZ7e9aA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nduIBCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nduIBSueEeyJjNOKZ7e9aA" name="addToSchedule" visibility="private" method="_nhvFaSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nduIBiueEeyJjNOKZ7e9aA" name="next" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nduIByueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nduvECueEeyJjNOKZ7e9aA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nduvESueEeyJjNOKZ7e9aA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nduvEiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nduvEyueEeyJjNOKZ7e9aA" name="addToSchedule" visibility="protected" method="_nhvsYCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nduvFCueEeyJjNOKZ7e9aA" name="next" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nduvFSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nP7joCueEeyJjNOKZ7e9aA" name="PriorityComparator">
              <interfaceRealization xmi:id="_nfmXUiueEeyJjNOKZ7e9aA" client="_nP7joCueEeyJjNOKZ7e9aA" supplier="_ndI5MCueEeyJjNOKZ7e9aA" contract="_ndI5MCueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhvsYyueEeyJjNOKZ7e9aA" name="compare" specification="_nfm-YSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhvsZCueEeyJjNOKZ7e9aA" name="obj1" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhvsZSueEeyJjNOKZ7e9aA" name="obj2" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhvsZiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);
		if (result == 0) {
			// tied for priority, so break tie on release time
			result = obj1.releaseTimeComparison(obj2);
		}
		return result; // 0 => tie on priority and release time
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nfm-YSueEeyJjNOKZ7e9aA" name="compare" method="_nhvsYyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nfm-YiueEeyJjNOKZ7e9aA" name="obj1" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfm-YyueEeyJjNOKZ7e9aA" name="obj2" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfm-ZCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nP8xwCueEeyJjNOKZ7e9aA" name="Program">
              <ownedComment xmi:id="_niSe9iueEeyJjNOKZ7e9aA">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ngoSECueEeyJjNOKZ7e9aA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngoSESueEeyJjNOKZ7e9aA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngoSEiueEeyJjNOKZ7e9aA" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngoSEyueEeyJjNOKZ7e9aA" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngo5ICueEeyJjNOKZ7e9aA" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngo5ISueEeyJjNOKZ7e9aA" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngo5IiueEeyJjNOKZ7e9aA" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngo5IyueEeyJjNOKZ7e9aA" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngo5JiueEeyJjNOKZ7e9aA" name="workLoad" visibility="package" type="_nR2PMCueEeyJjNOKZ7e9aA" association="_ni3twCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngpgMSueEeyJjNOKZ7e9aA" name="scheduleBuilt" visibility="package" type="_nQTXECueEeyJjNOKZ7e9aA" association="_ni3twyueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngpgMyueEeyJjNOKZ7e9aA" name="SchedulerSelected" visibility="package" type="_nfozkCueEeyJjNOKZ7e9aA" association="_ni4U0CueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngpgNSueEeyJjNOKZ7e9aA" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngqHQSueEeyJjNOKZ7e9aA" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngqHQyueEeyJjNOKZ7e9aA" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngquUSueEeyJjNOKZ7e9aA" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngquUyueEeyJjNOKZ7e9aA" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngquVSueEeyJjNOKZ7e9aA" name="channelsAvailable" visibility="package" type="_nOW2UCueEeyJjNOKZ7e9aA" association="_ni4U0yueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngrVYSueEeyJjNOKZ7e9aA" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngrVYyueEeyJjNOKZ7e9aA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngrVZSueEeyJjNOKZ7e9aA" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngr8cSueEeyJjNOKZ7e9aA" name="latencyReport" visibility="private" type="_nOy7MCueEeyJjNOKZ7e9aA" association="_ni474CueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngr8cyueEeyJjNOKZ7e9aA" name="deadlineMisses" visibility="private" type="_nOy7MCueEeyJjNOKZ7e9aA" association="_ni474yueEeyJjNOKZ7e9aA"/>
              <interfaceRealization xmi:id="_ndznkCueEeyJjNOKZ7e9aA" client="_nP8xwCueEeyJjNOKZ7e9aA" supplier="_nQ_6oSueEeyJjNOKZ7e9aA" contract="_nQ_6oSueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhvsaSueEeyJjNOKZ7e9aA" name="Program" specification="_nfpaoCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhvsaiueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhvsayueEeyJjNOKZ7e9aA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhvsbCueEeyJjNOKZ7e9aA" name="choice" type="_nfozkCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhvsbSueEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhvsbiueEeyJjNOKZ7e9aA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhvsbyueEeyJjNOKZ7e9aA" type="_nP8xwCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);
     buildProgram(choice);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhvscCueEeyJjNOKZ7e9aA" name="Program" specification="_nfqBtyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhwTcCueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhwTcSueEeyJjNOKZ7e9aA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhwTciueEeyJjNOKZ7e9aA" name="choice" type="_nfozkCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhwTcyueEeyJjNOKZ7e9aA" type="_nP8xwCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);
     buildProgram(choice);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhwTdCueEeyJjNOKZ7e9aA" name="setDefaultParameters" specification="_nd01sCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhwTdSueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhwTdiueEeyJjNOKZ7e9aA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhwTdyueEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhwTeCueEeyJjNOKZ7e9aA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built
     this.scheduleBuilt = new ProgramSchedule();
     this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected
     workLoad.setFlowsInPriorityOrder();
     this.schedulerName = &quot;Priority&quot;;
     this.schChoice = &quot;Priority&quot;;
     this.nTransmissions = 0;
     this.realTimeHARTflag = false;
     this.optimizationRequested = true;
     this.nChannels = nChannels;
     this.verbose = verbose;
     this.channelsAvailable = new Channels(nChannels, verbose);
     this.reportLatency = reportLatency;
     this.latencyReport = new Description();
     this.deadlineMisses = new Description();   
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhwTeSueEeyJjNOKZ7e9aA" name="toWorkLoad" specification="_nQBDMCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhwTeiueEeyJjNOKZ7e9aA" type="_nR2PMCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return workLoad;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhwTeyueEeyJjNOKZ7e9aA" name="buildProgram" specification="_nfqowyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhwTfCueEeyJjNOKZ7e9aA" name="choice" type="_nfozkCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>/* Switch on the scheduler choice.
 	 * If it is POSET-based scheduler, create the POSET
 	 * that matches the name and then use the newer
 	 * schedule object to convert the POSET to a program.
 	 * If it is an original scheduler choice, build
 	 * set the scheduler type and build the schedule
 	 * and WARP program by calling buildOriginalProgram();
 	 */
 	switch (choice) { // select the requested scheduler
 	case WARP_POSET_PRIORITY: 	// fall through
		case WARP_POSET_RM: 		// fall through
		case WARP_POSET_DM:		// fall through
			setScheduleSelected (choice);
			var poset1 = new WarpPoset(workLoad);
			var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);
	    	var newProgram = schedule1.toProgram();
	    	setSchedule(newProgram); // store the schedule built
	    	break;
		case CONNECTIVITY_POSET_PRIORITY: 	// fall through
		case CONNECTIVITY_POSET_RM: 		// fall through
		case CONNECTIVITY_POSET_DM:		// fall through
		case POSET_PRIORITY: 	// fall through
		case POSET_RM: 		// fall through
		case POSET_DM:
			setScheduleSelected (choice);
			// var poset = new BasicPoset(workLoad);
			var poset2 = new ConnectivityPoset(workLoad);
			var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);
	    	newProgram = schedule2.toProgram();
	    	setSchedule(newProgram); // store the schedule built
	    	break;
////		case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: 	// fall through
////		case CONNECTIVITY_POSET_PREEMPTIVE_RM: 		// fall through
////		case CONNECTIVITY_POSET_PREEMPTIVE_DM:		// fall through
//	    	var poset3 = new ConnectivityPoset(workLoad);
//	    	var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);
//	    	newProgram = schedule3.toProgram();
//	    	setSchedule(newProgram); // store the schedule built
//	    	break;
		case PRIORITY:	
			selectPriority();
			buildOriginalProgram();  // build the requested schedule
			break;
		case RM:	
			selectRM();
			buildOriginalProgram();  // build the requested schedule
			break;
		case DM:	
			selectDM();
			buildOriginalProgram();  // build the requested schedule
			break;
		case RTHART: 
			selectRtHART();
			buildOriginalProgram();  // build the requested schedule
			break;
		default:
			selectPriority();
			buildOriginalProgram();  // build the requested schedule
			break; // break from switch
		}
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhwTfSueEeyJjNOKZ7e9aA" name="buildOriginalProgram" specification="_nQBDMSueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>// builds a Priority schedule
 	
 	if (verbose) {
 		var scheduleDetails = String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;, workLoad.getName());
 		scheduleDetails = String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;,getSchedulerName());
 		scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,String.valueOf(workLoad.getMinPacketReceptionRate()));
 		scheduleDetails = String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;,String.valueOf(workLoad.getE2e()));
 		scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;,getNumChannels());
 		// The following parameters are only output when special schedules are requested
 		if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed
 			scheduleDetails = String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;,getNumTransmissions());
 		}
 		if (getOptimizationFlag()) { // only specify when optimization not requested
 			scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;
 		}
 		System.out.println(scheduleDetails);
 	}
 	var nTx = 0;// support nTx per transmission, which is set based on input parameter if nTransmissions == n 0 else flow.nTXperLink
 	var nTransmissions = getNumTransmissions();
 	Boolean realtimeHART = getRealTimeHartFlag();
 	var optimizationRequested = getOptimizationFlag();
 	var schedule = new ProgramSchedule();  // create an empty schedule
 	var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep
 	var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();
 	var orderedNodes = workLoad.getNodesOrderedAlphabetically();  // create an array of node names sorted alphabetically
 	var nodeIndex = new NodeIndexMap(); // create a new mapping from node names to index in schedule table
 	var nNodes = orderedNodes.length;
 	for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping
 		var name = orderedNodes[index];
 		nodeIndex.put(name,index); // add name, index mapping to NodeIndex map
 	}
 	var hyperPeriod = workLoad.getHyperPeriod();
 	for (int i = 0; i &lt; hyperPeriod; i++) {  // This loop makes sure the schedule is full up to the period and the channels entries are all initialized
 		var newInstructionTimeSlot = new InstructionTimeSlot(nNodes,SLEEP_INSTRUCTION);  // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION
 		schedule.add(newInstructionTimeSlot);
 		channelsAvailable.addNewChannelSet() ;// initially, all channels are available in each time slot
 	}
 	// create an instance of the Warp DSL class for parsing instructions
 	var dsl = new WarpDSL();
 	
 	for (String flowName: prioritizedFlows) {  // loop through all of the nodes in priority order
 		var nodesInFlow = workLoad.getNodesInFlow(flowName);
 		var nNodesInFlow = nodesInFlow.length; 
 		var e2eFlag = false; // default is to not use e2e to achieve E2E
 		if (nTransmissions == 0) {  // use nTx from flow.nTXperLink for realtimeHart and the linkTX array otherwise
 			e2eFlag = true; // need to meet e2e to hit E2E for flow
 			if (realtimeHART) {
 				nTx = workLoad.getFlowTxPerLink(flowName);  
 			} // else we will computer nTx from the linkTx array for the flow as we go

 		} else {
 			nTx = nTransmissions;
 		}
 		var snk = &quot;&quot;;
 		var linkTxCosts = workLoad.getLinkCommunicationCosts(flowName);
 		if (verbose) {
 			var totalCost = workLoad.getTotalCommunicationCost(flowName);
 			var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost, i.e., min nTx to go E2E with no errors
 			System.out.printf(&quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;, flowName, minCost, totalCost);
 		}
 		if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx is dependent on reliability target
 			nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow
 		}
 		var previousNodeInstruction = new Integer[nTx];  // set instruction location in schedule for previous slots to 0
 		Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0		
 		var flowPhase = workLoad.getFlowPhase(flowName);  // used to compute latency after done scheduling this flow
 		var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this flow
 		var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for this flow
 		var flowPeriod = workLoad.getFlowPeriod(flowName);
 		var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src node can first transmit
 		for (int instance = 0; instance &lt; hyperPeriod/flowPeriod; instance++) {
 			for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow-1; flowNodeIndex++)  { // don't push for last node, so stop at node n-1, which is 2 less than count
 				var currentNodeName = nodesInFlow[flowNodeIndex];   // get name of current node in the flow (aka source of data)
 				if (e2eFlag) {
 					nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link
 				}
 				var currentNodeInstruction = new Integer[nTx];  // store instruction location in schedule for previous node
 				Arrays.fill(currentNodeInstruction, 0);  // initialize the currentNondeInstruction
 				for (int index = 0; index &lt; nTx; index++) {  // repeat instruction nTx times so that this flow meets desired reliability
 					var instructionNodeName = currentNodeName; // name of node for which we write an instruction in its program
 					var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the priorSrcInstruction during optimization
 					var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or not
 					snk = nodesInFlow[flowNodeIndex+1]; // should get a valid sink node, set name to UNKNOWN if we don't
 					// when not optimizing instructionNodeName is current node, but we might update a different node's instruction to optimize
 					var phase = instance*flowPeriod + flowPhase;   // update phase for the instance of the flow release, which happens once every period in the hyperPeriod
 					var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure precedence constraints on flow are preserved
 					Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule, firstPossibleSlot , flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART , optimizationRequested, nodeIndex.get(currentNodeName), nodeIndex.get(snk));
 					if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current schedule length. Increase schedule and channelsAvailable tables
 						for (int i = schedule.size(); i &lt;= instructionIndex; i++) {
 							var newInstructionTimeSlot = new InstructionTimeSlot(nNodes,SLEEP_INSTRUCTION);  // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION
 							schedule.add(newInstructionTimeSlot);
 							channelsAvailable.addNewChannelSet(); // need make sure we have channels available for all slots. instructionIndex may be > initialized size of array because of phases...
 						}
 					}
 					String channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));

 					// Now check if we have a valid channel. If not we need to find a new time slot further down the schedule.
 					// So, initialize the search to start at the current slot and then increase by one each time we loop if the current slot
 					// Now check if we have a valid channel. If not we need to find a new time slot further down the schedule.
 					// So, initialize the search to start at the current slot and then increase by one each time we loop if the current slot
 					while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no channel was available. In that case, we need to find a new slot for this instruction after the last index found
 						var startSearchIndex = instructionIndex+1;
 						instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex , flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART , optimizationRequested, nodeIndex.get(currentNodeName), nodeIndex.get(snk));
 						if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current schedule lenght. Increase schedule and channelsAvailable tables
 							for (int i = schedule.size(); i &lt;= instructionIndex; i++) {
 								var newInstructionTimeSlot = new InstructionTimeSlot(nNodes,SLEEP_INSTRUCTION);  // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION
 								schedule.add(newInstructionTimeSlot);
 								channelsAvailable.addNewChannelSet(); // need make sure we have channels available for all slots. instructionIndex may be > initialized size of array because of phases...
 							}
 						}
 						channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));
 					}
 					workLoad.setNodeChannel(instructionNodeName,Integer.valueOf(channel));
 					if (realtimeHART) {
 						newInstruction = pushInstruction(flowName,currentNodeName,snk, channel);
 					} else {
 						newInstruction = hasPushInstruction(flowName,currentNodeName,snk, channel);
 					}
 					
 					// if optimization flag is set, look to see if any optimizations are possible
 					if (optimizationRequested &amp;&amp; instructionIndex > 0) {
 						var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex-1);
 						var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList.toArray(new String[priorInstructionTimeSlotArrayList.size()]);
 						var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction scheduled for snk to execute in the prior time slot
 						if (index == (nTx-1)) {
 							String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);
 							String elseSubString = &quot;else pull(&quot;;
 							if (priorInstruction.contains(hasSubstring) &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {  
 								// The sink node is not waiting, so add this instruction as an else to it
 								// Also need to make sure we haven't already combined a prior instruction by moving it to the else clause. May need a smater way to do this later...
 								// The combined instructions both use channels for their respective time slots! The else is being added to the prior time slot, so we need to
 								// get a new channel for that time slot and put back the channel we extraced from this time slot. And of course, clean up if any errors occur
 								// in the process
 								var instructionParametersArrayList = dsl.getInstructionParameters(priorInstruction);
 								var priorInstructionChannel = UNKNOWN;
 								if (instructionParametersArrayList.size() == 1) {
 									var instructionParameters = instructionParametersArrayList.get(0); // get a copy of the parameters
 									priorInstructionChannel = instructionParameters.getChannel();
 								} else { // we just checked above that the prior instruction did not have an else pull, wait, or sleep. So, there should be only one instruction here
 									String msg = String.format(&quot;ERROR: More than one instruction in prior instruction string: %s&quot;,priorInstruction);
 									System.err.println(msg);
 								}
 								workLoad.setNodeChannel(instructionNodeName,Integer.valueOf(priorInstructionChannel));
 								channelsAvailable.addChannel(instructionIndex,channel); // return channel for this slot
 								channel = priorInstructionChannel; // update this so that the corresponding wait uses this channel
 								newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;, flowName, currentNodeName, snk,priorInstructionChannel ); // was channel
 								instructionIndex -= 1;  //set instructionIndex to the priorInstruction index so we replace that slot with the new, optimized instruction
 								instructionNodeName = snk; // change currntNodeName to the snk node, which is the node name of the prior instruction
 							}
 						} else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag) &amp;&amp; 
 										!(priorInstruction.contains(SLEEP_INSTRUCTION) || priorInstruction.contains(WAIT_FRAGMENT)) ) {
 							// We hit this case when combining the last push of one flow with the first push of a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)
 							// print (&quot;Skipping optimization of combining \(priorInstruction) with \(newInstruction)\n&quot;)
 							// May want to add code here to combine when e2eFlag is true but need to compute new reliability values given less than 1 probablity that
 							// this first push/now pull will happen
 							// System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;, newInstruction, priorInstruction);
 						} else { // not sure when we hit this when combining a sleep or wait() from prior flow with a new instruction
 							// Anywhere else?  :-) Probably better figure it out!!
 							if (!priorInstruction.contains(ELSE_PULL_FRAGMENT) &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT) &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) {  // The sink node is not waiting, so add this instruction as an else to it
 								// Also need to make sure we haven't already combined a prior instruction by moving it to the else clause. May need a smarter way to do this later...
 								var instructionParametersArrayList = dsl.getInstructionParameters(priorInstruction);
 								var priorInstructionChannel = UNKNOWN;
 								var priorInstructionSnk = UNKNOWN;
 								if (instructionParametersArrayList.size() == 1) {
 									var instructionParameters = instructionParametersArrayList.get(0); // get a copy of the parameters
 									priorInstructionSnk = instructionParameters.getSnk();
 									priorInstructionChannel = instructionParameters.getChannel();
 								} else { // we just checked above that the prior instruction did not have an else pull, wait, or sleep. So, there should be only one instruction here
 									String msg = String.format(&quot;ERROR: More than one instruction in prior instruction string: %s&quot;,priorInstruction);
 									System.err.println(msg);
 								}  								
 								priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get instruction scheduled for snk/curentNodeName) to execute in the prior time 
 								if (priorInstructionSnk.equals(currentNodeName) ) {  // will try to push and pull to/from the same node, so use the prior instruction channel
 									newInstruction = priorInstruction + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);
 									instructionIndex -= 1 ; //set instructionIndex to the priorInstruction index so we replace that slot with the new, optimized instruction
 									instructionNodeName = snk; // change currntNodeName to the snk node, which is the node name of the prior instruction
 								} else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)){ // was !priorSrcInstruction.contains(&quot;wait(&quot;); I think it needs to be a sleep and then we can add a wait there
 									// Make sure the currentNodeName entry for this time slot has a sleep. If so, then we combine instructions with new as an else push and add wait at currentNodeName
 									workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(priorInstructionChannel));  
 									newInstruction = priorInstruction + elsePullClause(flowName,currentNodeName,snk,priorInstructionChannel);  // was channel
 									// need to change priorSrcInstruction from sleep to wait on channel
 									priorSrcInstruction = waitInstruction(priorInstructionChannel);  // was channel
 									priorSrcUpdated = true; // set flag so this instruction is updated when we insert currenInstruction into the currentInstructionTimeSlot
 									instructionIndex -= 1;  //set instructionIndex to the priorInstruction index so we replace that slot with the new, optimized instruction
 									instructionNodeName = snk; // change currntNodeName to the snk node, which is the node name of the prior instruction
 								}
 							}
 						}
 					}
 					ArrayList&lt;String> currentInstructionTimeSlotArrayList; // = schedule.get(instructionIndex);
						String[] currentInstructionTimeSlot; // = currentInstructionTimeSlotArrayList.toArray(new String[currentInstructionTimeSlotArrayList.size()]);
 					currentNodeInstruction[index] = instructionIndex;  // store the slot index for this instruction
 					if (instructionIndex &lt; schedule.size()) {
 						currentInstructionTimeSlotArrayList = schedule.get(instructionIndex);  // load current instruction, in case another instruction is in this time slot for another node that doesn't conflict channels
 						currentInstructionTimeSlot = currentInstructionTimeSlotArrayList.toArray(new String[currentInstructionTimeSlotArrayList.size()]);
 					} else {
 						currentInstructionTimeSlotArrayList = new InstructionTimeSlot(nNodes,SLEEP_INSTRUCTION); 
 						currentInstructionTimeSlot = currentInstructionTimeSlotArrayList.toArray(new String[currentInstructionTimeSlotArrayList.size()]);
 					}
 					currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an error finding the right location will result in location of snk or 0
 					if (priorSrcUpdated) {
 						currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an error finding the right location will result in location of snk or 0
 					}
 					// If this is a basic push() then the snk node will have the initial wait instruction in its time slot. Thus, need to add the channel # to that wait
 					var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)];  // get instruction scheduled for snk to execute in the current time slot
 					if (snkInstruction.equals(SLEEP_INSTRUCTION)) {
 						currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);
 					}
 					if (flowNodeIndex > 0) {
 						var priorNodeName = nodesInFlow[flowNodeIndex-1] ;// get name of prior node in the flow (aka predecessor)
 						var possibleCombineInstruction = String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;,flowName,priorNodeName,currentNodeName);
 						if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) {  // One more optimization possible: combine two conditional pushes at the same slot involving a common node
 							var upstreamNodeInstruction = currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];
 							var instr = hasPushInstruction(flowName,currentNodeName,snk,channel);
 							if (newInstruction.equals(instr) &amp;&amp;
 									upstreamNodeInstruction.contains(possibleCombineInstruction) &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {
 								var instructionParametersArrayList = dsl.getInstructionParameters(upstreamNodeInstruction);
 								var upstreamNodeChannel = UNKNOWN;
 								if (instructionParametersArrayList.size() == 1) {
 									var instructionParameters = instructionParametersArrayList.get(0); // get a copy of the paramaters
 									upstreamNodeChannel = instructionParameters.getChannel();
 											// return upstreamNodeChannel to the available channels for this time slot
 									channelsAvailable.addChannel(instructionIndex,upstreamNodeChannel); 
 								} else { // we just checked above that the prior instruction did not have an else pull, wait, or sleep. So, there should be only one instruction here
 									String msg = String.format(&quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,upstreamNodeInstruction);
 									System.err.println(msg); 
 								}
 								// use the newInstruction channel in upstream instruction that is being combined and return the upstream channel to the available channel set
 								newInstruction = newInstruction + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was upstreamNodeChannel
 								currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)]  = newInstruction; // an error finding the right location will result in location of snk or 0
 								currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]  = waitInstruction(channel);; // an error finding the right location will result in location of snk or 0 // was upstreamNodeChannel
 							} else if (newInstruction.contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel)) 
 												&amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)].contains(possibleCombineInstruction)) {
 								currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]  = waitInstruction(channel); // Replace combined instruction in prior node program with wait()
 							}
 						}
 						if (!realtimeHART &amp;&amp; nTx > 1) {  // WARP schedule with multiple tx per link requested, so add 'else wait()' for down upstream node when needed
 							var upstreamNodeInstruction = currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];
 							if (newInstruction.equals(hasPushInstruction(flowName,currentNodeName,snk,channel)) 
 													&amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {
 								String upstreamNodeChannel = getFirstChannelInInstruction(upstreamNodeInstruction);
 								newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this node needs to wait for upstream node if message hasn't arrived
 								currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)]  = newInstruction; // an error finding the right location will result in location of snk or 0
 								// Don't replace the push instruction in the upstream node in this case, because we added the else in this nodes time slot instead
 							}
 						}
 					}
 					var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);
 					if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check anyway
 						schedule.set(instructionIndex,timeSlot);
 					} else {
 						schedule.add(timeSlot);
 						String msg = String.format(&quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,instructionIndex,schedule.size());
							System.err.println(msg);
							System.err.println(&quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);
 					}
 					flowLastInstruction = instructionIndex;
 					if (index ==0) {
 						FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the flow's src node first transmits
 					}
 				}
 				previousNodeInstruction = currentNodeInstruction ; // copy current to previous node...don't worry about clearing currentNodeInstrucitons; will be set in loop
 			}
 			Integer latency = flowLastInstruction - (flowPhase + (instance*flowPeriod)) + 1;
 			String latencyMsg = String.format(
 					&quot;Maximum latency for %s:%d is %d\n&quot;,flowName, instance, latency );
 			latencyReport.add(latencyMsg);
 			if (verbose) {
 				System.out.printf(latencyMsg);
 			}
 			if (latency > flowDeadline) {
 				String deadlineMsg = String.format(
 		    &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,
 		    					flowName, instance, latency, flowDeadline);
 				deadlineMisses.add(deadlineMsg);
 				// System.out.printf(deadlineMsg);
 			}
 		}
 	}
 	setSchedule(schedule); // store the schedule built
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhwTfiueEeyJjNOKZ7e9aA" name="waitInstruction" specification="_nQBqQCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhwTfyueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhwTgCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();
 	if (!Utilities.isInteger(channel)) {
         System.out.println(&quot;channel length is &quot;+ String.valueOf(size)); 
         System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);
 	}
 	return String.format(&quot;wait(#%s)&quot;,channel);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhwTgSueEeyJjNOKZ7e9aA" name="elseWaitInstruction" specification="_nQCRUCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhwTgiueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhwTgyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();
 	if (!Utilities.isInteger(channel)) {
         System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);
         System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));
 	}
 	return String.format(&quot; else wait(#%s)&quot;,channel);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhwThCueEeyJjNOKZ7e9aA" name="elsePullClause" specification="_nQCRUyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhwThSueEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhwThiueEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhwThyueEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhwTiCueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhwTiSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;,flow, src, snk, channel);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhwTiiueEeyJjNOKZ7e9aA" name="hasPushInstruction" specification="_nQC4ZSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhwTiyueEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhwTjCueEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhwTjSueEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhwTjiueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhwTjyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;,flow,src,snk,channel);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhw6gCueEeyJjNOKZ7e9aA" name="pushInstruction" specification="_nQEGgCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhw6gSueEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6giueEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6gyueEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6hCueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6hSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;,flow,src,snk,channel);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhw6hiueEeyJjNOKZ7e9aA" name="getFirstChannelInInstruction" specification="_nQEGhiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhw6hyueEeyJjNOKZ7e9aA" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6iCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#')+1; // get index of the start of the channel #
		var endIndex = Instruction.indexOf(')',beginIndex); // get index of the last character of the channel #
		var channel = Instruction.substring(beginIndex,endIndex); // this substring has the 1st channel
		return channel;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhw6iSueEeyJjNOKZ7e9aA" name="findNextAvailableInstructionTimeSlot" specification="_nd1cxSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhw6iiueEeyJjNOKZ7e9aA" name="schedule" type="_nQTXECueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhw6iyueEeyJjNOKZ7e9aA" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6jCueEeyJjNOKZ7e9aA" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6jSueEeyJjNOKZ7e9aA" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6jiueEeyJjNOKZ7e9aA" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6jyueEeyJjNOKZ7e9aA" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nhw6kCueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6kSueEeyJjNOKZ7e9aA" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nhw6kiueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6kyueEeyJjNOKZ7e9aA" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6lCueEeyJjNOKZ7e9aA" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6lSueEeyJjNOKZ7e9aA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6liueEeyJjNOKZ7e9aA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6lyueEeyJjNOKZ7e9aA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6mCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting location
 	if (transIndex > 0) {
 		currentTime = Math.max(startLocation, currentNodeInstruction[transIndex-1]); // Make sure we don't start looking before the startLocation AND the previous instruction we inserted
 	}
 	var done = false; // Flag indicating time slot search is done
 	if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx-1 )) {  
 							// do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and for kth retry
 		while (currentTime &lt; schedule.size() &amp;&amp; !done) {
 			var currentInstructionTimeSlot = schedule.get(currentTime);
 			if (slotIsAvailable (currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {
 				done = true;
 			} else {
 				currentTime += 1;
 			}
 		}
 	} else {  //  !reatimeHART and (nTx > 1 and nodeInFlow > 0)
 		Integer slotOffsetFromLastPreviousInstructionEntry;
 		if (transIndex >= (previousNodeInstruction.length-1)) {
 			slotOffsetFromLastPreviousInstructionEntry = transIndex - (previousNodeInstruction.length-1) + 1;
 			var possibleInstructionTimeSlotIndex = previousNodeInstruction[previousNodeInstruction.length-1] + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry entry
 			// or continuous past it if more attempts for this instruction
 			if (startLocation &lt; possibleInstructionTimeSlotIndex) {   // make sure this time isn't earlier than the starting location
 				// (which can also mean the start time for searching available slots due to channel unavailability)
 				currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index
 			}
 			done = false;  // However, we need to check if the current slot is available, and if not keep searching until we find one. This happens with preemptions
 			if (!optimizationRequested) {
 				while (currentTime &lt; schedule.size() &amp;&amp; !done) {
 					var currentInstructionTimeSlot = schedule.get(currentTime);
 					if (slotIsAvailable (currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {   // get the proposed currentInstructionTimeSlot. If available, done is true, else keep checking for a time
 						done = true;
 					} else {
 						currentTime += 1;
 					}
 				}
 			} else {
 				// do something to support the optimization
 				while (currentTime &lt; schedule.size() &amp;&amp; !done) {
 					var currentInstructionTimeSlot = schedule.get(currentTime);
 					if (slotIsAvailable (currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {   // get the proposed currentInstructionTimeSlot. If available, done is true, else keep checking for a time
 						done = true;
 					} else {
 						currentTime += 1;
 					}
 				}
 			}
 		} else {
 			var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex+1]; // same as previous node's next retry entry
 			if (startLocation &lt;= possibleInstructionTimeSlotIndex) {   // make sure this time isn't earlier than the starting location
 				// (which can also mean the start time for searching available slots due to channel unavailability)
 				currentTime = possibleInstructionTimeSlotIndex; //
 			}
 			done = false;  // However, we need to check if the current slot is available, and if not keep searching until we find one. This happens with preemptions
 			if (!optimizationRequested) {
 				while (currentTime &lt; schedule.size() &amp;&amp; !done) {
 					var currentInstructionTimeSlot = schedule.get(currentTime);
 					if (slotIsAvailable (currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {   // get the proposed currentInstructionTimeSlot. If available, done is true, else keep checking for a time
 						done = true;
 					} else {
 						currentTime += 1;
 					}
 				}
 			} else {
 				// do something to support the optimization
 				if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current schedule table. If so, no need to optimize.
 					// Just return current time and let caller figure out what to do.
 					var tmpInstructionTimeSlot = schedule.get(currentTime);
 					var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);
 					var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);
 					if (!srcInstruction.contains(&quot;wait(&quot;) ||  !snkInstruction.contains(&quot;sleep&quot;)) { // instruction should contain a wait, so we can use it during optimization. Only a wait for this time slot is expected at this point
 						// we also need to be sure the snk is sleeping
 						// If either condition is not true, then we need to find another time slot
 						while (currentTime &lt; schedule.size() &amp;&amp; !done) {
 							var currentInstructionTimeSlot = schedule.get(currentTime);
 							if (slotIsAvailable (currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {   // get the proposed currentInstructionTimeSlot. If available, done is true, else keep checking for a time
 								done = true;
 							} else {
 								currentTime += 1;
 							}
 						}
 					} else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not sure if it is bad...print an error indicating the issue
 						var errorString = String.format(&quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;, currentTime);
 						errorString += &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;
 						errorString += srcInstruction;
 						System.err.println(errorString);
 					}
 				}
 			}
 		}
 	}
 	return currentTime;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhw6mSueEeyJjNOKZ7e9aA" name="slotIsAvailable" specification="_nd2q4CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhw6miueEeyJjNOKZ7e9aA" name="currentInstructionTimeSlot" type="_nPYxECueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhw6myueEeyJjNOKZ7e9aA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6nCueEeyJjNOKZ7e9aA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6nSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is done
     if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex)) &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk are both sleeping, so slot is available
         vacantSlot = true;
     }
     return vacantSlot;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhw6niueEeyJjNOKZ7e9aA" name="findNextAvailableChannel" specification="_nd2q5SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhw6nyueEeyJjNOKZ7e9aA" name="schedule" type="_nQTXECueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhw6oCueEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6oSueEeyJjNOKZ7e9aA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6oiueEeyJjNOKZ7e9aA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6oyueEeyJjNOKZ7e9aA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhw6pCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check this result

 	// create an instance of the Warp DSL class for parsing instructions
 	var dsl = new WarpDSL();
 	InstructionTimeSlot priorInstructionTimeSlot; 

 	var channels = channelsAvailable.getChannelSet(currentTime);
 	if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in that slot, which have to be avoided here
 		Integer priorTime = currentTime-1;
 		priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot
 		var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);
 		var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);

 		// extract the channels used by the src and snk nodes in the prior time slot and store them in an array
 		var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get the parameters from the instruction in the src node's prior time slot
 		for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {
 			var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the paramaters
 			channels.remove(instructionParameters.getChannel());
 		}
 		instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the parameters from the instruction in the snk node's prior time slot
 		for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {
 			var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the paramaters
 			channels.remove(instructionParameters.getChannel());
 		}
 	}
 	Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node 
 	channel++; // increment the channel because we don't use the same channel in consecutive time slots for the same node
 	if (channel >= getNumChannels()) {  // valid range is 0..NumChannels-1. Reset when channel hits max
 		channel = 0;
 	}
 	var channelFound = false;
 	while (!channelFound &amp;&amp; !channels.isEmpty()){ // loop until a channel is found or we run out of channels to assign
 		var channelString = String.valueOf(channel);
 		var channelRemoved = channels.remove(channelString);
 		if (channelRemoved) {
 			// newChannel has the channel
 			newChannel = channelString;
 			channelFound = true;
 		} else {
 			// try another channel
 			channel += 1;
 			if (channel >= getNumChannels()) {  // valid range is 0..NumChannels-1. Reset when channel hits max
 				channel = 0;
 			}
 		}
 	}
 	return newChannel;   // returns UNKNOWN to indicate no channel found. This should never happen.
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhw6pSueEeyJjNOKZ7e9aA" name="selectPriority" specification="_nQFUoCueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>setScheduleSelected (ScheduleChoices.PRIORITY);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhxhkCueEeyJjNOKZ7e9aA" name="selectRM" specification="_nQF7sCueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>setScheduleSelected (ScheduleChoices.RM);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhxhkSueEeyJjNOKZ7e9aA" name="selectDM" specification="_nQF7sSueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>setScheduleSelected (ScheduleChoices.DM);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhxhkiueEeyJjNOKZ7e9aA" name="selectRtHART" specification="_nQF7siueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>setScheduleSelected (ScheduleChoices.RTHART);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhxhkyueEeyJjNOKZ7e9aA" name="setScheduleSelected" specification="_nfrP0CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhxhlCueEeyJjNOKZ7e9aA" name="choice" type="_nfozkCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>switch (choice) {
 	case PRIORITY:
 		schedulerName = &quot;Priority&quot;;
 		schChoice = &quot;-Priority&quot;;
 		workLoad.setFlowsInPriorityOrder();
 		break;
 	case RM:
 		schedulerName = &quot;RateMonotonic&quot;;
 		schChoice = &quot;-RM&quot;;
 		workLoad.setFlowsInRMorder();
 		break;
 	case DM:
 		schedulerName = &quot;DeadlineMonotonic&quot;;
 		schChoice = &quot;-DM&quot;;
 		workLoad.setFlowsInDMorder();
 		break;
 	case RTHART:
 		schedulerName = &quot;RealtimeHART&quot;;
 		schChoice = &quot;-RealTimeHART&quot;;
 		workLoad.setFlowsInRealTimeHARTorder();
 		setRealTimeHartFlag(true);
 		break;
		case CONNECTIVITY_POSET_DM:
			schedulerName = &quot;ConnectivityPosetDM&quot;;
 		schChoice = &quot;-CPdm&quot;;
 		workLoad.setFlowsInDMorder();
			break;
		case CONNECTIVITY_POSET_PRIORITY:
			schedulerName = &quot;ConnectivityPoset&quot;;
 		schChoice = &quot;-CPoset&quot;;
 		workLoad.setFlowsInPriorityOrder();
			break;
		case CONNECTIVITY_POSET_RM:
			schedulerName = &quot;ConnectivityPosetRM&quot;;
 		schChoice = &quot;-CPrm&quot;;
 		workLoad.setFlowsInRMorder();
			break;
		case POSET_DM:
			schedulerName = &quot;PosetDM&quot;;
 		schChoice = &quot;-PosetDM&quot;;
 		workLoad.setFlowsInDMorder();
			break;
		case POSET_PRIORITY:
			schedulerName = &quot;Poset&quot;;
 		schChoice = &quot;-Poset&quot;;
 		workLoad.setFlowsInPriorityOrder();
			break;
		case POSET_RM:
			schedulerName = &quot;PosetRM&quot;;
 		schChoice = &quot;-PosetDM&quot;;
 		workLoad.setFlowsInRMorder();
			break;
		case WARP_POSET_DM:
			schedulerName = &quot;WarpPosetDM&quot;;
 		schChoice = &quot;-WPdm&quot;;
 		workLoad.setFlowsInDMorder();
			break;
		case WARP_POSET_PRIORITY:
			schedulerName = &quot;WarpPoset&quot;;
 		schChoice = &quot;-WarpPoset&quot;;
 		workLoad.setFlowsInPriorityOrder();
			break;
		case WARP_POSET_RM:
			schedulerName = &quot;WarpPosetRM&quot;;
 		schChoice = &quot;-WPrm&quot;;
 		workLoad.setFlowsInRMorder();
			break;
		default:
			schedulerName = &quot;Priority&quot;;
 		schChoice = &quot;-Priority&quot;;
 		workLoad.setFlowsInPriorityOrder();
			break;
 	}
 	SchedulerSelected = choice;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhxhlSueEeyJjNOKZ7e9aA" name="setSchedule" specification="_nd3R8CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhxhliueEeyJjNOKZ7e9aA" name="schedule" type="_nQTXECueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhxhlyueEeyJjNOKZ7e9aA" name="getSchedule" specification="_nQGiwCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhxhmCueEeyJjNOKZ7e9aA" type="_nQTXECueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhxhmSueEeyJjNOKZ7e9aA" name="getSchedulerName" specification="_nQGiwSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhxhmiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhxhmyueEeyJjNOKZ7e9aA" name="getSchChoice" specification="_nQHJ0CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhxhnCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhxhnSueEeyJjNOKZ7e9aA" name="getNumChannels" specification="_nQHJ0iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhxhniueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhxhnyueEeyJjNOKZ7e9aA" name="getNumTransmissions" specification="_nQHJ1CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhxhoCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhxhoSueEeyJjNOKZ7e9aA" name="getRealTimeHartFlag" specification="_nQHw4SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhxhoiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhyIoCueEeyJjNOKZ7e9aA" name="setRealTimeHartFlag" specification="_nQHw4yueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhyIoSueEeyJjNOKZ7e9aA" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhyIoiueEeyJjNOKZ7e9aA" name="getMinPacketReceptionRate" specification="_nQIX8CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhyIoyueEeyJjNOKZ7e9aA" type="_nfrP0iueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhyIpCueEeyJjNOKZ7e9aA" name="getE2e" specification="_nQI_ACueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhyIpSueEeyJjNOKZ7e9aA" type="_nfrP0iueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhyIpiueEeyJjNOKZ7e9aA" name="getName" specification="_nQJmECueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhyIpyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhyIqCueEeyJjNOKZ7e9aA" name="getOptimizationFlag" specification="_nQKNIiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhyIqSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhyIqiueEeyJjNOKZ7e9aA" name="latencyReport" specification="_nQK0MiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhyIqyueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return latencyReport;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhyIrCueEeyJjNOKZ7e9aA" name="deadlineMisses" specification="_nQK0MyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhyIrSueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhyIriueEeyJjNOKZ7e9aA" name="getNumFaults" specification="_nQLbQCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhyIryueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nQBDMCueEeyJjNOKZ7e9aA" name="toWorkLoad" method="_nhwTeSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nd1cxCueEeyJjNOKZ7e9aA" type="_nR2PMCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nQBDMSueEeyJjNOKZ7e9aA" name="buildOriginalProgram" method="_nhwTfSueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nQBqQCueEeyJjNOKZ7e9aA" name="waitInstruction" visibility="private" method="_nhwTfiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nQBqQSueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQBqQiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nQCRUCueEeyJjNOKZ7e9aA" name="elseWaitInstruction" visibility="private" method="_nhwTgSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nQCRUSueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQCRUiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nQCRUyueEeyJjNOKZ7e9aA" name="elsePullClause" visibility="private" method="_nhwThCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nQC4YCueEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQC4YSueEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQC4YiueEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQC4YyueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQC4ZCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nQC4ZSueEeyJjNOKZ7e9aA" name="hasPushInstruction" visibility="private" method="_nhwTiiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nQDfcCueEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQDfcSueEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQDfciueEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQDfcyueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQDfdCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nQEGgCueEeyJjNOKZ7e9aA" name="pushInstruction" visibility="private" method="_nhw6gCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nQEGgSueEeyJjNOKZ7e9aA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQEGgiueEeyJjNOKZ7e9aA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQEGgyueEeyJjNOKZ7e9aA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQEGhCueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQEGhSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nQEGhiueEeyJjNOKZ7e9aA" name="getFirstChannelInInstruction" visibility="private" method="_nhw6hiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nQEtkCueEeyJjNOKZ7e9aA" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQEtkSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nQFUoCueEeyJjNOKZ7e9aA" name="selectPriority" method="_nhw6pSueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nQF7sCueEeyJjNOKZ7e9aA" name="selectRM" method="_nhxhkCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nQF7sSueEeyJjNOKZ7e9aA" name="selectDM" method="_nhxhkSueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nQF7siueEeyJjNOKZ7e9aA" name="selectRtHART" method="_nhxhkiueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nQGiwCueEeyJjNOKZ7e9aA" name="getSchedule" method="_nhxhlyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nd3R8iueEeyJjNOKZ7e9aA" type="_nQTXECueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nQGiwSueEeyJjNOKZ7e9aA" name="getSchedulerName" method="_nhxhmSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nQGiwiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nQHJ0CueEeyJjNOKZ7e9aA" name="getSchChoice" method="_nhxhmyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nQHJ0SueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nQHJ0iueEeyJjNOKZ7e9aA" name="getNumChannels" method="_nhxhnSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nQHJ0yueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nQHJ1CueEeyJjNOKZ7e9aA" name="getNumTransmissions" method="_nhxhnyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nQHw4CueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nQHw4SueEeyJjNOKZ7e9aA" name="getRealTimeHartFlag" visibility="private" method="_nhxhoSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nQHw4iueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nQHw4yueEeyJjNOKZ7e9aA" name="setRealTimeHartFlag" visibility="private" method="_nhyIoCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nQHw5CueEeyJjNOKZ7e9aA" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nQIX8CueEeyJjNOKZ7e9aA" name="getMinPacketReceptionRate" method="_nhyIoiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nfr24SueEeyJjNOKZ7e9aA" type="_nfrP0iueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nQI_ACueEeyJjNOKZ7e9aA" name="getE2e" method="_nhyIpCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nfr24iueEeyJjNOKZ7e9aA" type="_nfrP0iueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nQJmECueEeyJjNOKZ7e9aA" name="getName" method="_nhyIpiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nQJmESueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nQKNIiueEeyJjNOKZ7e9aA" name="getOptimizationFlag" method="_nhyIqCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nQKNIyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nQK0MiueEeyJjNOKZ7e9aA" name="latencyReport" method="_nhyIqiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nd3R8yueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nQK0MyueEeyJjNOKZ7e9aA" name="deadlineMisses" method="_nhyIrCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nd3R9CueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nQLbQCueEeyJjNOKZ7e9aA" name="getNumFaults" method="_nhyIriueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nQLbQSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nd01sCueEeyJjNOKZ7e9aA" name="setDefaultParameters" visibility="private" method="_nhwTdCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nd1cwCueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nd1cwSueEeyJjNOKZ7e9aA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nd1cwiueEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nd1cwyueEeyJjNOKZ7e9aA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nd1cxSueEeyJjNOKZ7e9aA" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_nhw6iSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nd1cxiueEeyJjNOKZ7e9aA" name="schedule" type="_nQTXECueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nd1cxyueEeyJjNOKZ7e9aA" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nd1cyCueEeyJjNOKZ7e9aA" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nd2D0CueEeyJjNOKZ7e9aA" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nd2D0SueEeyJjNOKZ7e9aA" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nd2D0iueEeyJjNOKZ7e9aA" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nd2D2iueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nd2D0yueEeyJjNOKZ7e9aA" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nd2D2yueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nd2D1CueEeyJjNOKZ7e9aA" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nd2D1SueEeyJjNOKZ7e9aA" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nd2D1iueEeyJjNOKZ7e9aA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nd2D1yueEeyJjNOKZ7e9aA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nd2D2CueEeyJjNOKZ7e9aA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nd2D2SueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nd2q4CueEeyJjNOKZ7e9aA" name="slotIsAvailable" visibility="private" method="_nhw6mSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nd2q4SueEeyJjNOKZ7e9aA" name="currentInstructionTimeSlot" type="_nPYxECueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nd2q4iueEeyJjNOKZ7e9aA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nd2q4yueEeyJjNOKZ7e9aA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nd2q5CueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nd2q5SueEeyJjNOKZ7e9aA" name="findNextAvailableChannel" visibility="private" method="_nhw6niueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nd2q5iueEeyJjNOKZ7e9aA" name="schedule" type="_nQTXECueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nd2q5yueEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nd2q6CueEeyJjNOKZ7e9aA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nd2q6SueEeyJjNOKZ7e9aA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nd2q6iueEeyJjNOKZ7e9aA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nd2q6yueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nd3R8CueEeyJjNOKZ7e9aA" name="setSchedule" visibility="private" method="_nhxhlSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nd3R8SueEeyJjNOKZ7e9aA" name="schedule" type="_nQTXECueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nfpaoCueEeyJjNOKZ7e9aA" name="Program" visibility="package" method="_nhvsaSueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nfqBtCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nfqBtSueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nfpaoSueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfqBsCueEeyJjNOKZ7e9aA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nfqBsSueEeyJjNOKZ7e9aA" name="choice" type="_nfozkCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfqBsiueEeyJjNOKZ7e9aA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nfqBsyueEeyJjNOKZ7e9aA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nfqBtiueEeyJjNOKZ7e9aA" type="_nP8xwCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nfqBtyueEeyJjNOKZ7e9aA" name="Program" visibility="package" method="_nhvscCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nfqowCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nfqowSueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nfqBuCueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfqBuSueEeyJjNOKZ7e9aA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nfqBuiueEeyJjNOKZ7e9aA" name="choice" type="_nfozkCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfqowiueEeyJjNOKZ7e9aA" type="_nP8xwCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nfqowyueEeyJjNOKZ7e9aA" name="buildProgram" method="_nhwTeyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nfqoxCueEeyJjNOKZ7e9aA" name="choice" type="_nfozkCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nfrP0CueEeyJjNOKZ7e9aA" name="setScheduleSelected" visibility="private" method="_nhxhkyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nfrP0SueEeyJjNOKZ7e9aA" name="choice" type="_nfozkCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_nP-m8CueEeyJjNOKZ7e9aA" name="NodeIndexMap" visibility="private">
                <generalization xmi:id="_nfoMgCueEeyJjNOKZ7e9aA" general="_nc4agCueEeyJjNOKZ7e9aA"/>
                <ownedAttribute xmi:id="_ngo5JCueEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngo5JSueEeyJjNOKZ7e9aA" value="-6518730224642183876L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhvsZyueEeyJjNOKZ7e9aA" name="NodeIndexMap" specification="_nP_OACueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nhvsaCueEeyJjNOKZ7e9aA" type="_nP-m8CueEeyJjNOKZ7e9aA" direction="return"/>
                  <language>java</language>
                  <body>super();
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_nP_OACueEeyJjNOKZ7e9aA" name="NodeIndexMap" method="_nhvsZyueEeyJjNOKZ7e9aA">
                  <eAnnotations xmi:id="_nP_OASueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_nP_OAiueEeyJjNOKZ7e9aA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_nP_OAyueEeyJjNOKZ7e9aA" type="_nP-m8CueEeyJjNOKZ7e9aA" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nQTXECueEeyJjNOKZ7e9aA" name="ProgramSchedule">
              <generalization xmi:id="_nd6VQCueEeyJjNOKZ7e9aA" general="_nREMECueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngtKkCueEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngtKkSueEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhyvsCueEeyJjNOKZ7e9aA" name="ProgramSchedule" specification="_nQT-ICueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhyvsSueEeyJjNOKZ7e9aA" type="_nQTXECueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhyvsiueEeyJjNOKZ7e9aA" name="ProgramSchedule" specification="_nQT-JCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhyvsyueEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhyvtCueEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhyvtSueEeyJjNOKZ7e9aA" type="_nQTXECueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(row,column);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nQT-ICueEeyJjNOKZ7e9aA" name="ProgramSchedule" method="_nhyvsCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nQT-ISueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nQT-IiueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nQT-IyueEeyJjNOKZ7e9aA" type="_nQTXECueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nQT-JCueEeyJjNOKZ7e9aA" name="ProgramSchedule" visibility="package" method="_nhyvsiueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nQUlMSueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nQUlMiueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nQT-JSueEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQUlMCueEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQUlMyueEeyJjNOKZ7e9aA" type="_nQTXECueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nQVMQCueEeyJjNOKZ7e9aA" name="ProgramVisualization">
              <ownedComment xmi:id="_niTGACueEeyJjNOKZ7e9aA">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <generalization xmi:id="_nd7jYyueEeyJjNOKZ7e9aA" general="_nRRncCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngtKkiueEeyJjNOKZ7e9aA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngtKkyueEeyJjNOKZ7e9aA" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngtKlCueEeyJjNOKZ7e9aA" name="sourceCode" visibility="private" type="_nQTXECueEeyJjNOKZ7e9aA" association="_ni5i8CueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngtxoSueEeyJjNOKZ7e9aA" name="program" visibility="private" type="_nP8xwCueEeyJjNOKZ7e9aA" association="_ni5i8yueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhyvtiueEeyJjNOKZ7e9aA" name="ProgramVisualization" specification="_nd68UCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhyvtyueEeyJjNOKZ7e9aA" name="warp" type="_nRXuECueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhyvuCueEeyJjNOKZ7e9aA" type="_nQVMQCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);
		this.program = warp.toProgram();
		this.sourceCode = program.getSchedule();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhyvuSueEeyJjNOKZ7e9aA" name="visualization" specification="_nQVzUCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhyvuiueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();
 	var orderedNodes = program.toWorkLoad().getNodesOrderedAlphabetically();  

 	/* create schedule output header of column node names in order, with \t as  separator */
 	String nodeString = &quot;Time Slot\t&quot;;
 	/* loop through the node names, stopping just before last name */
 	for (int i =0; i &lt; orderedNodes.length-1; i++) { 
 		/* add each name to the string, with \t between each name */
 		nodeString += String.format(&quot;%s\t&quot;, orderedNodes[i]);
 	}
 	/* add the last name with \n instead of \t at the end */
 	nodeString += String.format(&quot;%s\n&quot;, orderedNodes[orderedNodes.length-1]); 
 	content.add(nodeString);

 	for (int rowIndex = 0;rowIndex &lt; sourceCode.size(); rowIndex++) {
 		ArrayList&lt;String> rowArrayList = sourceCode.get(rowIndex);
 		var row = rowArrayList.toArray(new String[rowArrayList.size()]);
 		String rowString = String.format(&quot;%d\t&quot;, rowIndex) + String.join(&quot;\t&quot;,row) + &quot;\n&quot;;
 		content.add(rowString);
 	}
 	return content;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhyvuyueEeyJjNOKZ7e9aA" name="createHeader" specification="_nQWaYyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhyvvCueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();
		
		header.add(String.format(
				&quot;WARP system for graph %s created with the following parameters:\n&quot;,
				program.getName()));
 	header.add(String.format(
 			&quot;Scheduler Name:\t%s\n&quot;,program.getSchedulerName()));
 	header.add(String.format(
 			&quot;M:\t%s\n&quot;,String.valueOf(program.getMinPacketReceptionRate())));
 	header.add(String.format(&quot;E2E:\t%s\n&quot;,String.valueOf(program.getE2e())));
 	header.add(String.format(&quot;nChannels:\t%d\n&quot;,program.getNumChannels()));
 	/* The following parameters are only output when special schedules are requested */
 	if (program.getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed
 		header.add(String.format(&quot;nTransmissions:\t%d)\n&quot;,program.getNumTransmissions()));
 	}
 	if (!program.getOptimizationFlag()) { // only specify when optimization not requested
 		header.add(&quot;Optimization Requested:\tFalse\n&quot;) ;
 	}
		return header;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nQVzUCueEeyJjNOKZ7e9aA" name="visualization" method="_nhyvuSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nd7jYSueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nQWaYyueEeyJjNOKZ7e9aA" name="createHeader" method="_nhyvuyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nd7jYiueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nd68UCueEeyJjNOKZ7e9aA" name="ProgramVisualization" visibility="package" method="_nhyvtiueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nd68UiueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nd68UyueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nd68USueEeyJjNOKZ7e9aA" name="warp" type="_nRXuECueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nd7jYCueEeyJjNOKZ7e9aA" type="_nQVMQCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nQYPkCueEeyJjNOKZ7e9aA" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_nftsECueEeyJjNOKZ7e9aA" client="_nQYPkCueEeyJjNOKZ7e9aA" supplier="_ndI5MCueEeyJjNOKZ7e9aA" contract="_ndI5MCueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhzWwCueEeyJjNOKZ7e9aA" name="compare" specification="_nfuTICueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhzWwSueEeyJjNOKZ7e9aA" name="obj1" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhzWwiueEeyJjNOKZ7e9aA" name="obj2" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhzWwyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);
		if (result == 0) {
			// tied for priority, so break tie on release time
			result = obj1.priorityComparison(obj2);
		}
		return result; // 0 => tie on priority and release time
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nfuTICueEeyJjNOKZ7e9aA" name="compare" method="_nhzWwCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nfuTISueEeyJjNOKZ7e9aA" name="obj1" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfuTIiueEeyJjNOKZ7e9aA" name="obj2" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfuTIyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nQaEwCueEeyJjNOKZ7e9aA" name="ReleaseTimeQueue">
              <generalization xmi:id="_nQb58SueEeyJjNOKZ7e9aA" general="_nQbS5CueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngtxoyueEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngtxpCueEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhzWxCueEeyJjNOKZ7e9aA" name="ReleaseTimeQueue" specification="_nQbS4CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhzWxSueEeyJjNOKZ7e9aA" type="_nQaEwCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhzWxiueEeyJjNOKZ7e9aA" name="ReleaseTimeQueue" specification="_nd8KcCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhzWxyueEeyJjNOKZ7e9aA" name="schedulableObjects" type="_ndnaUCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhzWyCueEeyJjNOKZ7e9aA" type="_nQaEwCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());
		this.addAll(schedulableObjects);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nQbS4CueEeyJjNOKZ7e9aA" name="ReleaseTimeQueue" visibility="package" method="_nhzWxCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nQbS4SueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nQbS4iueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nQbS4yueEeyJjNOKZ7e9aA" type="_nQaEwCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nd8KcCueEeyJjNOKZ7e9aA" name="ReleaseTimeQueue" visibility="package" method="_nhzWxiueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nd8xgSueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nd8xgiueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nd8xgCueEeyJjNOKZ7e9aA" name="schedulableObjects" type="_ndnaUCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nd8xgyueEeyJjNOKZ7e9aA" type="_nQaEwCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nQdIECueEeyJjNOKZ7e9aA" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_niTGASueEeyJjNOKZ7e9aA">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability
of messages transmitted in flows for the WARP system. &lt;p>
 
Let M represent the Minimum Packet Reception Rate on an
edge in a flow. The end-to-end reliability for each
flow, flow:src->sink, is computed iteratively as follows:&lt;br>
(1)The flow:src node has an initial probability of 1.0 when
it is released. All other initial probabilities are 0.0. (That
is, the reset of the nodes in the flow have an initial probability
value of 0.0.) &lt;br>
(2) each src->sink pair probability is computed as
NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState &lt;br>
This value represents the probability that the message as been 
received by the node SinkNode.
Thus, the NewSinkNodeState probability will increase each time 
a push or pull is executed with SinkNode as a listener. &lt;p>

The last probability state value for any node is the reliability of
the message reaching that node, and the end-to-end reliability of
a flow is the value of the last Flow:SinkNode probability.&lt;p>

CS2820 Fall 2021 Project: Implement this class to compute the
probabilities the comprise the ReliablityMatrix, which is the core
of the file visualization that is requested in WarpTester.&lt;p>

To do this, you will need to retrieve the program source,
parse the instructions for each node, in each time slot,
to extract the src and snk nodes in the instruction and then
apply the message success probability equation defined above.&lt;p>

I recommend using the getInstructionParameters method of the 
WarpDSL class to extract the src and snk nodes from the instruction 
string in a program schedule time slot.

@author sgoddard
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhzWySueEeyJjNOKZ7e9aA" name="ReliabilityAnalysis" specification="_nd9YkSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhzWyiueEeyJjNOKZ7e9aA" name="program" type="_nP8xwCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhzWyyueEeyJjNOKZ7e9aA" type="_nQdIECueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhzWzCueEeyJjNOKZ7e9aA" name="verifyReliabilities" specification="_nQdvICueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhzWzSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub
     return false;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nQdvICueEeyJjNOKZ7e9aA" name="verifyReliabilities" method="_nhzWzCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nQdvISueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nd9YkSueEeyJjNOKZ7e9aA" name="ReliabilityAnalysis" method="_nhzWySueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nd9YkyueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nd9YlCueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nd9YkiueEeyJjNOKZ7e9aA" name="program" type="_nP8xwCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nd9YlSueEeyJjNOKZ7e9aA" type="_nQdIECueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_nQeWMCueEeyJjNOKZ7e9aA" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_niTGAiueEeyJjNOKZ7e9aA">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_nQe9QCueEeyJjNOKZ7e9aA" name="minPacketReceptionRate" type="_nfrP0iueEeyJjNOKZ7e9aA" isReadOnly="true"/>
              <ownedAttribute xmi:id="_nQe9QSueEeyJjNOKZ7e9aA" name="e2e" type="_nfrP0iueEeyJjNOKZ7e9aA" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nQfkUCueEeyJjNOKZ7e9aA" name="ReliabilityRow">
              <generalization xmi:id="_nd9_oCueEeyJjNOKZ7e9aA" general="_nQoHMCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_nguYsCueEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nguYsSueEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhzWziueEeyJjNOKZ7e9aA" name="ReliabilityRow" specification="_nQgLYCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhzWzyueEeyJjNOKZ7e9aA" type="_nQfkUCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhzW0CueEeyJjNOKZ7e9aA" name="ReliabilityRow" specification="_nfu6MiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhzW0SueEeyJjNOKZ7e9aA" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhzW0iueEeyJjNOKZ7e9aA" name="element" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhzW0yueEeyJjNOKZ7e9aA" type="_nQfkUCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhz90CueEeyJjNOKZ7e9aA" name="ReliabilityRow" specification="_nfvhRCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhz90SueEeyJjNOKZ7e9aA" name="rowArray" type="_nfrP0iueEeyJjNOKZ7e9aA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nhz90iueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhz90yueEeyJjNOKZ7e9aA" type="_nQfkUCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(rowArray);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nQgLYCueEeyJjNOKZ7e9aA" name="ReliabilityRow" method="_nhzWziueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nQgLYSueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nQgLYiueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nQgLYyueEeyJjNOKZ7e9aA" type="_nQfkUCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nfu6MiueEeyJjNOKZ7e9aA" name="ReliabilityRow" visibility="package" method="_nhzW0CueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nfvhQSueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nfvhQiueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nfu6MyueEeyJjNOKZ7e9aA" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nfvhQCueEeyJjNOKZ7e9aA" name="element" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfvhQyueEeyJjNOKZ7e9aA" type="_nQfkUCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nfvhRCueEeyJjNOKZ7e9aA" name="ReliabilityRow" visibility="package" method="_nhz90CueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nfvhRiueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nfvhRyueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nfvhRSueEeyJjNOKZ7e9aA" name="rowArray" type="_nfrP0iueEeyJjNOKZ7e9aA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nfvhSSueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nfvhSCueEeyJjNOKZ7e9aA" type="_nQfkUCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nQhZgCueEeyJjNOKZ7e9aA" name="ReliabilityTable">
              <generalization xmi:id="_nd-msCueEeyJjNOKZ7e9aA" general="_nREMECueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_nguYsiueEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nguYsyueEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhz91CueEeyJjNOKZ7e9aA" name="ReliabilityTable" specification="_nQiAkCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhz91SueEeyJjNOKZ7e9aA" type="_nQhZgCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhz91iueEeyJjNOKZ7e9aA" name="ReliabilityTable" specification="_nQinoCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhz91yueEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhz92CueEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhz92SueEeyJjNOKZ7e9aA" type="_nQhZgCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super();
		for(int i=0; i &lt; row; i++) {
			ReliabilityRow emptyRow = new ReliabilityRow();
			for(int j=0; j &lt; column; j++) {
				emptyRow.add(0.0);
			}
			this.add(emptyRow);
		}
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nQiAkCueEeyJjNOKZ7e9aA" name="ReliabilityTable" method="_nhz91CueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nQiAkSueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nQiAkiueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nQiAkyueEeyJjNOKZ7e9aA" type="_nQhZgCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nQinoCueEeyJjNOKZ7e9aA" name="ReliabilityTable" visibility="package" method="_nhz91iueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nQinoyueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nQinpCueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nQinoSueEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQinoiueEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQinpSueEeyJjNOKZ7e9aA" type="_nQhZgCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nQjOsCueEeyJjNOKZ7e9aA" name="ReliabilityVisualization">
              <ownedComment xmi:id="_niTGAyueEeyJjNOKZ7e9aA">
                <body>ReliabilityVisualization creates the visualizations for
the reliability analysis of the WARP program. &lt;p>

CS2820 Fall 2021 Project: Implement this class to create
the file visualization that is requested in WarpTester.

@author sgoddard
 *</body>
              </ownedComment>
              <generalization xmi:id="_nd_00CueEeyJjNOKZ7e9aA" general="_nRRncCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_nguYtCueEeyJjNOKZ7e9aA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nguYtSueEeyJjNOKZ7e9aA" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nguYtiueEeyJjNOKZ7e9aA" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngu_wCueEeyJjNOKZ7e9aA" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngu_wSueEeyJjNOKZ7e9aA" name="warp" visibility="private" type="_nRXuECueEeyJjNOKZ7e9aA" association="_ni6KASueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngu_wyueEeyJjNOKZ7e9aA" name="ra" visibility="private" type="_nQdIECueEeyJjNOKZ7e9aA" association="_ni6KBCueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhz92iueEeyJjNOKZ7e9aA" name="ReliabilityVisualization" specification="_nd_NwCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhz92yueEeyJjNOKZ7e9aA" name="warp" type="_nRXuECueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhz93CueEeyJjNOKZ7e9aA" type="_nQjOsCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);
		this.warp = warp;
		this.ra = warp.toReliabilityAnalysis();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nd_NwCueEeyJjNOKZ7e9aA" name="ReliabilityVisualization" visibility="package" method="_nhz92iueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nd_NwiueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nd_NwyueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nd_NwSueEeyJjNOKZ7e9aA" name="warp" type="_nRXuECueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nd_NxCueEeyJjNOKZ7e9aA" type="_nQjOsCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nQlD4CueEeyJjNOKZ7e9aA" name="ReportVisualization">
              <generalization xmi:id="_neBC8CueEeyJjNOKZ7e9aA" general="_nRRncCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngvm0CueEeyJjNOKZ7e9aA" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngvm0SueEeyJjNOKZ7e9aA" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngvm0iueEeyJjNOKZ7e9aA" name="content" visibility="private" type="_nOy7MCueEeyJjNOKZ7e9aA" association="_ni6xESueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngvm1CueEeyJjNOKZ7e9aA" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhz93SueEeyJjNOKZ7e9aA" name="ReportVisualization" specification="_nd_00SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhz93iueEeyJjNOKZ7e9aA" name="fm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhz93yueEeyJjNOKZ7e9aA" name="warp" type="_nQ_6oSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhz94CueEeyJjNOKZ7e9aA" name="content" type="_nOy7MCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nhz94SueEeyJjNOKZ7e9aA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nhz94iueEeyJjNOKZ7e9aA" type="_nQlD4CueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);
		this.content = content;
		this.title = title;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhz94yueEeyJjNOKZ7e9aA" name="visualization" specification="_nQlq8CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhz95CueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return createReport();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nhz95SueEeyJjNOKZ7e9aA" name="createReport" specification="_nQm5ECueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nhz95iueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>Description report;
		if (content.size() > 0) {
			report = new Description(new String (title + &quot; Report&quot;));
			report.addAll(content);
		} else {
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));
		}
		return report;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nQlq8CueEeyJjNOKZ7e9aA" name="visualization" method="_nhz94yueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neAb5yueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nQm5ECueEeyJjNOKZ7e9aA" name="createReport" visibility="private" method="_nhz95SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neAb6CueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nd_00SueEeyJjNOKZ7e9aA" name="ReportVisualization" visibility="package" method="_nhz93SueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_neAb5CueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_neAb5SueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_neAb4CueEeyJjNOKZ7e9aA" name="fm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neAb4SueEeyJjNOKZ7e9aA" name="warp" type="_nQ_6oSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neAb4iueEeyJjNOKZ7e9aA" name="content" type="_nOy7MCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neAb4yueEeyJjNOKZ7e9aA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neAb5iueEeyJjNOKZ7e9aA" type="_nQlD4CueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nQoHMCueEeyJjNOKZ7e9aA" name="Row">
              <generalization xmi:id="_nfxWcSueEeyJjNOKZ7e9aA" general="_nc5ooCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngwN4CueEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngwN4SueEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh0k4CueEeyJjNOKZ7e9aA" name="Row" specification="_nQpVUCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh0k4SueEeyJjNOKZ7e9aA" type="_nQoHMCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh0k4iueEeyJjNOKZ7e9aA" name="Row" specification="_nfwIUCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh0k4yueEeyJjNOKZ7e9aA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh0k5CueEeyJjNOKZ7e9aA" name="element" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh0k5SueEeyJjNOKZ7e9aA" type="_nQoHMCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super();
		for (int i=0; i &lt; numElements; i++) {  
			this.add(element); // create the the row initialized with element
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh0k5iueEeyJjNOKZ7e9aA" name="Row" specification="_nfwvZCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh0k5yueEeyJjNOKZ7e9aA" name="rowArray" type="_nfTcYSueEeyJjNOKZ7e9aA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nh0k6CueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh0k6SueEeyJjNOKZ7e9aA" type="_nQoHMCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super();
		for (int i=0; i &lt; rowArray.length; i++) {  
			this.add(rowArray[i]); // create the the row initialized with rowArray
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh0k6iueEeyJjNOKZ7e9aA" name="Row" specification="_nQp8YCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh0k6yueEeyJjNOKZ7e9aA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh0k7CueEeyJjNOKZ7e9aA" type="_nQoHMCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(numElements);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nQpVUCueEeyJjNOKZ7e9aA" name="Row" method="_nh0k4CueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nQpVUSueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nQpVUiueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nQpVUyueEeyJjNOKZ7e9aA" type="_nQoHMCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nQp8YCueEeyJjNOKZ7e9aA" name="Row" visibility="package" method="_nh0k6iueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nQp8YiueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nQp8YyueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nQp8YSueEeyJjNOKZ7e9aA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQqjcCueEeyJjNOKZ7e9aA" type="_nQoHMCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nfwIUCueEeyJjNOKZ7e9aA" name="Row" visibility="package" method="_nh0k4iueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nfwvYSueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nfwvYiueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nfwIUSueEeyJjNOKZ7e9aA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nfwvYCueEeyJjNOKZ7e9aA" name="element" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfwvYyueEeyJjNOKZ7e9aA" type="_nQoHMCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nfwvZCueEeyJjNOKZ7e9aA" name="Row" visibility="package" method="_nh0k5iueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nfwvZiueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nfwvZyueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nfwvZSueEeyJjNOKZ7e9aA" name="rowArray" type="_nfTcYSueEeyJjNOKZ7e9aA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nfxWcCueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nfwvaCueEeyJjNOKZ7e9aA" type="_nQoHMCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nQrKgCueEeyJjNOKZ7e9aA" name="SchedulableObjectQueue">
              <generalization xmi:id="_nQs_sCueEeyJjNOKZ7e9aA" general="_nQbS5CueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngwN4iueEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngwN4yueEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh0k7SueEeyJjNOKZ7e9aA" name="SchedulableObjectQueue" specification="_nfx9gCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh0k7iueEeyJjNOKZ7e9aA" name="comparitor" type="_ndI5MCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh0k7yueEeyJjNOKZ7e9aA" type="_nQrKgCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh0k8CueEeyJjNOKZ7e9aA" name="SchedulableObjectQueue" specification="_nfykkSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh0k8SueEeyJjNOKZ7e9aA" name="comparitor" type="_ndI5MCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh0k8iueEeyJjNOKZ7e9aA" name="schedulableObjects" type="_ndnaUCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh0k8yueEeyJjNOKZ7e9aA" type="_nQrKgCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(comparitor);
		this.addAll(schedulableObjects);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nfx9gCueEeyJjNOKZ7e9aA" name="SchedulableObjectQueue" visibility="package" method="_nh0k7SueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nfx9giueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nfx9gyueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nfx9gSueEeyJjNOKZ7e9aA" name="comparitor" type="_ndI5MCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfx9hCueEeyJjNOKZ7e9aA" type="_nQrKgCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nfykkSueEeyJjNOKZ7e9aA" name="SchedulableObjectQueue" visibility="package" method="_nh0k8CueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nfyklCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nfyklSueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nfykkiueEeyJjNOKZ7e9aA" name="comparitor" type="_ndI5MCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfykkyueEeyJjNOKZ7e9aA" name="schedulableObjects" type="_ndnaUCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nfykliueEeyJjNOKZ7e9aA" type="_nQrKgCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nQuN0CueEeyJjNOKZ7e9aA" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_niTGBCueEeyJjNOKZ7e9aA">
                <body>Schedule builds a non-preemptive, priority schedule 
for the Partially Ordered Set (Poset) using numChannels. 
It ensures, precedence constraints are preserved, and 
reports deadline misses.

@author sgoddard2
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ngwN5CueEeyJjNOKZ7e9aA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngwN5SueEeyJjNOKZ7e9aA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngw08CueEeyJjNOKZ7e9aA" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngw08iueEeyJjNOKZ7e9aA" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngw09CueEeyJjNOKZ7e9aA" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngw09SueEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngxcASueEeyJjNOKZ7e9aA" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngxcAyueEeyJjNOKZ7e9aA" name="schedule" visibility="protected" type="_nQ7CICueEeyJjNOKZ7e9aA" association="_ni6xFCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngxcBSueEeyJjNOKZ7e9aA" name="poset" visibility="protected" type="_nPpPwCueEeyJjNOKZ7e9aA" association="_ni7YISueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh0k9CueEeyJjNOKZ7e9aA" name="Schedule" specification="_neC4ICueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh0k9SueEeyJjNOKZ7e9aA" name="poset" type="_nPpPwCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh0k9iueEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh0k9yueEeyJjNOKZ7e9aA" type="_nQuN0CueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;
		this.numChannels = numChannels;
		var maxPhase = poset.getMaxPhase();
		endScheduleTime = poset.getHyperPeriod();
		if (maxPhase > 0) {
			/* need to schedule longer to cover start-up period */
			endScheduleTime = maxPhase + 2*endScheduleTime ;
		}
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);
		schedulable = true;
		buildSchedule();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh1L-iueEeyJjNOKZ7e9aA" name="getSchedule" specification="_nQx4MCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh1L-yueEeyJjNOKZ7e9aA" type="_nQ7CICueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return schedule;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh1L_CueEeyJjNOKZ7e9aA" name="buildSchedule" specification="_nQyfQCueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>var next = poset.getNextActivation();
		while (next != null) {
			/* Add next to the schedule if max of its release time 
			 * and end time is less than the endScheduleTime.
			 * Otherwise, its releaseTime is >= endScheduleTime
			 * or endTime >= currentTime, which means can't
			 * schedule at this time.
			 */
			if (!addToSchedule(next)) {
				schedulable = false;
				reportNotSchedulable(next);
				/* Record unschedulable element */
				fakeSchedulingToTestRest(next);
				next.setNextReleaseTime(next.getEndTime());
				if (next.getReleaseTime() &lt; endScheduleTime) {
					poset.addActivation(next);
				}
			} else {
				/* update the next release time and add it back into
				 * the priority queue
				 */
				next.setNextReleaseTime(next.getEndTime());
				if (next.getReleaseTime() &lt; endScheduleTime) {
					poset.addActivation(next);
				}

			}
			next = poset.getNextActivation();
		}
		print();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh1L_SueEeyJjNOKZ7e9aA" name="toProgram" specification="_nQyfQSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh1L_iueEeyJjNOKZ7e9aA" type="_nQTXECueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();
		var numNodes = nodeNames.length;
		var program = new ProgramSchedule(endScheduleTime,numNodes);
		CodeFragment codeFragment = null;
		var duration = 0; // default duration for SLEEP;
		String name = null;
		var startTime = 0;
		var endTime = 0;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();
		
		if (!schedulable) {
			/* not Schedulable, so we will not create code */
			return program; // return empty program
		}
		
		/* build the nodeIndexMap by putting nodes in alphabetic
		 * order and then hashing its name to its rank
		 */
		for (int i = 0; i &lt; numNodes; i++) {
			nodeIndexMap.put(nodeNames[i], i);
		}
		
		for (int channel = 0; channel &lt; numChannels; channel++) {
			for (int time = 0; time &lt; endScheduleTime; time++) {
				var entry = schedule.get(channel,time);
				if (entry == null) {
					/* no entry here, so instruction will be SLEEP instruction */
					codeFragment = new CodeFragment();
					startTime = time;
					endTime = time;
					name = &quot;Empty&quot;;
				} else {
					/* create the codeFragment for this activation entry */
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),
							entry.getCoordinators(),channel);
					startTime = entry.getStartTime();
					endTime = entry.getEndTime();
					name = entry.getName();
					duration =  endTime - startTime + 1;
					if (duration > codeFragment.size()) {
						/* for combination fragments, we can sometimes generate
						 * more efficient code than originally thought. So,
						 * update schedule by replacing the entry with null
						 * and update the activation with the the new end time.
						 */
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {
							schedule.set(channel,endTime-k,null);
						}
						endTime = codeFragment.size() + startTime - 1;
						entry.setEndTime(endTime);
						
					}
				}
				duration =  endTime - startTime + 1;
				/* duration can be &lt; fragment size  when two activations 
				 * were combined but they had different delta values. 
				 * The larger was used, but we should make sure duration isn't
				 * > size, else we may overwrite something. Just report for now.
				 */
				if (duration > codeFragment.size()) {
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, 
							name,duration, codeFragment.size());
				} else if (time != startTime ){
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, 
							name, time, startTime);

				} else {
					var instructions = codeFragment.instructions();
					var coordinator = codeFragment.getCoordinator();

					if (coordinator != null) {
						/* coordinator is null the entry is sleep,
						 * which happens when the schedule entry was null.
						 * We skip this entry and then replace nulls in the
						 * program with sleep instructions at the end
						 */
						for (int i = 0; i &lt; duration; i++) {
							var instr = instructions.get(i);
							/* enter the instruciton in the program */
							var row = time+i;
							var column = nodeIndexMap.get(coordinator);		
							program.set(row,column,instr);

							/* get the listeners from the instruction 
							 * and insert the wait() instructions into
							 * the program for each listener
							 * */
							var dsl = new WarpDSL();
							var instructionParametersArray = dsl.getInstructionParameters(instr); 
							for (InstructionParameters fragment: instructionParametersArray) {
								String listener = fragment.getListener();
								if(!listener.equals(UNKNOWN)) {
									/* need to add a wait instruction for node listener
									 * wait(#channel)
									 * at time,listener location of program table
									 */
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));
								}
							}
						}
					}
					time += duration-1;
				}

			}
		}
		replaceNullWithSleep(program);
		return program;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh1L_yueEeyJjNOKZ7e9aA" name="replaceNullWithSleep" specification="_neDfMSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh1MACueEeyJjNOKZ7e9aA" name="program" type="_nQTXECueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var rows = program.getNumRows();
		var columns = program.getNumColumns();

		for (int i = 0; i &lt; rows; i++) {
			for (int j = 0; j &lt; columns; j++) {
				var entry = program.get(i,j);
				if (entry == null) {
					program.set(i, j, CodeFragment.sleep());
				}
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh1MASueEeyJjNOKZ7e9aA" name="fakeSchedulingToTestRest" specification="_neDfMyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh1MAiueEeyJjNOKZ7e9aA" name="next" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();
		var startTime = fakeTime;
		var channel = numChannels; // use last channel
		if (pred != null) {
			/* remove pred end time */
			pred.pollEndTimes(); 
		} 
		next.setStartTime(next.getReleaseTime());
		var duration = next.getExecutionDuration();
		fakeTime = startTime + duration - 1;
		if (fakeTime >= endScheduleTime) {
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);
			print();
		}
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());
		/* Add the endTime to the elements endTimes Q
		 * so that we can track predecessor endTimes
		 * and make sure successors don't start before 
		 * predecessors
		 */
		next.addToEndTimes(endScheduleTime); 
		/* Create a new entry, based on next, to be entered
		 * into the scheduling tale
		 */
		var entry = new Activation(next, startTime);
		for (int i = startTime; i &lt;= fakeTime; i++) {
			/* Add this object to the schedule for the
			 * from startTime to endTime.
			 */
			schedule.set(channel, i, entry);
		}
		fakeTime++;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh1zACueEeyJjNOKZ7e9aA" name="getChannelAndSetStartTime" specification="_neDfNSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh1zASueEeyJjNOKZ7e9aA" name="schedulableObject" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh1zAiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();
		var channel = numChannels; // default is no channel available
		var endTime = endScheduleTime; // duration of the schedule
		schedulableObject.setStartTime(endTime);
		schedulableObject.setEndTime(endTime);
		/* Create a flag indicating it might be possible to combine
		 * to partitions. This flag will be used to create a channel
		 * affinity, in case scheduler wants to combine to partitions.
		 */
		var pred = schedulableObject.getPredecessor();
		if (pred != null) {
			/* peek at the head of the endTimes for pred */
			var predEndTime = pred.peekEndTimes();
			if (predEndTime == null) {
				return numChannels; // return indicates no channel/time
			} else if (predEndTime >= time) {
				/* can't schedule here; need to look later */
				time = predEndTime+1;
			} 
		}
		var scheduleLocation = findChannelAndTime(time,schedulableObject );
		channel = scheduleLocation.getChannel();
		time = scheduleLocation.getTime();

		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {
			/* Found a channel with no conflicts.
			 * Set the object's start time to the that
			 * time.
			 */
			schedulableObject.setStartTime(time);

		}
		return channel;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh1zAyueEeyJjNOKZ7e9aA" name="findChannelAndTime" specification="_neEGQCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh1zBCueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh1zBSueEeyJjNOKZ7e9aA" name="schedulableObject" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh1zBiueEeyJjNOKZ7e9aA" type="_nQwDACueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available 
		var duration = schedulableObject.getExecutionDuration();
		
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {
			time ++; //+= duration+1;
		}
		if (time >= endScheduleTime) {
			/* no conflict time available */
			return new ScheduleLocation(channel, time);	
		} 
		
		/* can schedule at current value of time, so find the best channel.
		 * Bias toward and empty channel at near lowest end of spectrum */
		for (int i = numChannels-1; i >= 0 ; i--) {
			/* Start at numChannels and work down to 0
			 * checking for conflicts and finding an
			 * empty slot at the same time. This will
			 * result in the lowest possible channel
			 * being used if their are no conflicts
			 * with any channel entries.
			 * 
			 * This version combines entries as soon as.
			 * possible, without looking for other, low-channel
			 * combinations.
			 */
			// var entry = schedule.get(i,time);
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {
				var priorEntry = schedule.get(i, time-1);
				if (priorEntry != null) {
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; 
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {
						channel = i;
						time = priorEntry.getStartTime();
						break;
					}
				}
			}
			if (isAvailable(schedulableObject, i, time, duration)) {
				channel = i;
			}

		}
		/* no time and channel found in interval [time, time+duration]
		 * so, advance time and check again
		 */
		if (channel == numChannels) {
			return continueSearch(time,schedulableObject);
		} else {
			return new ScheduleLocation(channel, time);	
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh1zByueEeyJjNOKZ7e9aA" name="continueSearch" specification="_neEGRCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh1zCCueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh1zCSueEeyJjNOKZ7e9aA" name="activation" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh1zCiueEeyJjNOKZ7e9aA" type="_nQwDACueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh1zCyueEeyJjNOKZ7e9aA" name="noOtherChannelConflicts" specification="_neEtUCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh1zDCueEeyJjNOKZ7e9aA" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh1zDSueEeyJjNOKZ7e9aA" name="schedulableObject" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh1zDiueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh1zDyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;

		if (time >= endScheduleTime) {
			/* not enough time left in the schedule,
			 * so return false 
			 */
			return false;
		}
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {
			var entry = schedule.get(channel,time);

			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {
				if (entry.conflictExists(schedulableObject)) {
					result = false;
					return result;
				}
			} 
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh1zECueEeyJjNOKZ7e9aA" name="conflictsExist" specification="_neEtVSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh1zESueEeyJjNOKZ7e9aA" name="obj" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh1zEiueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh1zEyueEeyJjNOKZ7e9aA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh1zFCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;

		if (time+duration >= endScheduleTime) {
			/* not enough time left in the schedule,
			 * so return false 
			 */
			return false;
		}
		if (duration &lt;= 0) {
			result  = true;
		} else {
			for (Integer i = time; i &lt; time+duration; i++ ) {
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {
					var entry = schedule.get(channel,i);
					if (entry != null &amp;&amp; obj != null) {
						if (entry.conflictExists(obj)) {
							result = true;
							return result;
						}
					} 
				}
			}	
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh1zFSueEeyJjNOKZ7e9aA" name="freeOfCoordinatorConflicts" specification="_neEtWiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh1zFiueEeyJjNOKZ7e9aA" name="obj" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh1zFyueEeyJjNOKZ7e9aA" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh1zGCueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh1zGSueEeyJjNOKZ7e9aA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh1zGiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;

		if (time+(duration-1) >= endScheduleTime) {
			/* not enough time left in the schedule,
			 * so return false 
			 */
			return false;
		}
		if (duration &lt;= 0) {
			result  = false;
		} else {
			for (Integer i = time; i &lt; time+duration; i++ ) {
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {
					var entry = schedule.get(channel,time);
					if (entry != null &amp;&amp; obj != null) {
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {
							result = false; // same coordinator is scheduled
							return result;
						}
					} 
				}
			}	
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh1zGyueEeyJjNOKZ7e9aA" name="isAvailable" specification="_neFUYiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh1zHCueEeyJjNOKZ7e9aA" name="a1" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh1zHSueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh1zHiueEeyJjNOKZ7e9aA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh1zHyueEeyJjNOKZ7e9aA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh1zICueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;
		
		if (conflictsExist(a1,start,duration)) {
			return false;
		}
		for (Integer j = start; j &lt; start+duration; j++ ) {
			var currentEntry = schedule.get(channel,j);
			if (currentEntry != null) {
				if (currentEntry.canCombine(a1)) {
					/* no conflict with this entry, and can
					 * combine so check for combined entry time
					 *  to see if we can combine activations
					 */
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);
					var combinedEntry = new CombinedActivation(currentEntry,a1);
					var searchTime = currentEntry.getEndTime()+1;
					var searchLength = combinedDuration - (duration-(j-start));
					return isAvailable(combinedEntry, channel, searchTime, searchLength);
				} else {
					available = false;
					break;
				}
			}
		}
		if (available) {
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);
		}
		return available;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh2aECueEeyJjNOKZ7e9aA" name="isAvailable" specification="_neFUaCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh2aESueEeyJjNOKZ7e9aA" name="a1" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh2aEiueEeyJjNOKZ7e9aA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh2aEyueEeyJjNOKZ7e9aA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh2aFCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;
		
		for (Integer channel = 0; channel &lt; numChannels; channel++) {
			if (isAvailable(a1,channel,start,duration)) {
			available = true;
			break;
			}
		}
		return available;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh2aFSueEeyJjNOKZ7e9aA" name="timeRemaining" specification="_nQ0UcCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh2aFiueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh2aFyueEeyJjNOKZ7e9aA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh2aGCueEeyJjNOKZ7e9aA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh2aGSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;

		var row = schedule.get(channel);
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {
			if (row.get(i) != null) {
				break;
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh2aGiueEeyJjNOKZ7e9aA" name="canCombineEntriesInPlace" specification="_neF7cSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh2aGyueEeyJjNOKZ7e9aA" name="a1" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh2aHCueEeyJjNOKZ7e9aA" name="a2" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh2aHSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;
		if (a1 == null || a2 == null) {
			return false;
		}
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); 
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); 
		
		if (a2.canCombine(a1)) {
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);
			 var newEndTime = minStartTime + combinedDuration - 1;
			 if (newEndTime &lt;= maxEndTime) {
				result = true;
			 }
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh2aHiueEeyJjNOKZ7e9aA" name="combinedEntriesInPlace" specification="_neF7dSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh2aHyueEeyJjNOKZ7e9aA" name="a1" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh2aICueEeyJjNOKZ7e9aA" name="a2" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh2aISueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh2aIiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;
		if (canCombineEntriesInPlace(a1,a2)) {
			var entry = new CombinedActivation(a1, a2);
			var startTime = entry.getStartTime();
			var endTime = entry.getEndTime();
			for (int i = startTime; i &lt;= endTime; i++) {
				/* Add this object to the schedule for the
				 * from startTime to endTime.
				 */
				schedule.set(channel, i, entry);
			}
			result = true;
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh2aIyueEeyJjNOKZ7e9aA" name="addToSchedule" specification="_neGigCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh2aJCueEeyJjNOKZ7e9aA" name="next" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh2aJSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);
		if (channel == numChannels) {
			return false;
		}
		/* found a time and channel  that are valid */
		Activation currentEntry = null;	
		var combineTime = endScheduleTime;
		var startTime = next.getStartTime(); // set by getChannel()
		var duration = next.getExecutionDuration();	
		var endTime = startTime + duration - 1;
		/* Check the schedule to see if we need to 
		 * combine next with a higher priority entry 
		 * in the schedule during its execution
		 */
		for (int i = startTime; i &lt; startTime + duration; i++) {
			currentEntry = schedule.get(channel,i);
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {
				/* found an entry to combine, record the time,
				 * update the combined duration and new
				 * endTime, then exit the loop
				 */
				/* need to check if combined time is available or
				 * if we have to combine yet another entry 
				 */
				 var endCurrentEntry = currentEntry.getEndTime();
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);
				 var newEndTime = startTime + combinedDuration - 1;
				 /* need to check to make sure there are no conflicts on other 
				  * channels for this new interval
				  */
				 var available = isAvailable(next, channel, startTime, combinedDuration);
				 if (available) {	 
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;
					 if (additionalTimeNeeded > 0) {
						 /* see if we can combine the two existing adjacent entries
						  * in place. If so, then try to recursively schedule next
						  */
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);
						 if (additionalCombine != null) {
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {
								 return false;
							 }
							 addToSchedule(next);
							 return true;
						 }
					 }
					 combineTime = i;
					 duration = next.getCombinedExecutionDuration(currentEntry);
					 endTime = startTime + duration - 1;
					 break;
				 }
			}
		}
		next.setEndTime(endTime);
		var responseTime = endTime - next.getReleaseTime();
		if (responseTime > next.getDeadline()) {
			return false; // unable to schedule this entry
		}
		/* Add the endTime to the elements endTimes Q
		 * so that we can track predecessor endTimes
		 * and make sure successors don't start before 
		 * predecessors
		 */
		next.addToEndTimes(endTime); 
		/* remove predecessor end time that matches this start time */
		var pred = next.getPredecessor();
		if (pred != null) {
			pred.pollEndTimes(); 
		}
		/* Create a new entry, based on next, to be entered
		 * into the scheduling tale
		 */
		var entry = new Activation(next, startTime);
		if (combineTime &lt; endScheduleTime) {
			/* change entry to point to combinedActivation
			 * and set startTime to the beginning of the 
			 * combined entries */
			var combinedActivation = new CombinedActivation(currentEntry, entry);
			entry = combinedActivation;
			startTime = entry.getStartTime();
			duration = entry.getExecutionDuration();
			endTime = startTime + duration - 1;
			entry.setEndTime(endTime);
			next.setEndTime(endTime);
		}
		for (int i = startTime; i &lt;= endTime; i++) {
			/* Add this object to the schedule for the
			 * from startTime to endTime.
			 */
			schedule.set(channel, i, entry);
		}
		return true;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh2aJiueEeyJjNOKZ7e9aA" name="reportNotSchedulable" specification="_neGigyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh2aJyueEeyJjNOKZ7e9aA" name="object" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh2aKCueEeyJjNOKZ7e9aA" name="printVerbose" specification="_nQ1ikCueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);
		var endSchedule = schedule.get(0).size();
		for (int i = 0; i &lt; numChannels; i++) {
			System.out.printf(&quot;\nChannel: %d&quot;,i);
			var name = UNKNOWN;
			for (int j = 0; j &lt; endSchedule; j++) {
				var entry = schedule.get(i,j);
				if (entry != null) {
					var entryName = entry.getName();
					if (!name.equals(entryName)) {
						name = entryName;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);
					}
				}
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh2aKSueEeyJjNOKZ7e9aA" name="print" specification="_nQ1ikSueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);
		for (int i = 0; i &lt; schedule.size(); i++) {
			System.out.printf(&quot;\nChannel: %d: &quot;,i);
			var name = UNKNOWN;
			var startTime = -1;
			for (int j = 0; j &lt; endScheduleTime; j++) {
				var entry = schedule.get(i,j);
				if (entry != null) {
					var entryName = entry.getName();
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {
						/* only print out unique entries (not duplicates in the interval */
						name = entryName;
						startTime = entry.getStartTime();
						System.out.printf(&quot;%s[%d,%d] &quot;, 
								name, entry.getStartTime(),entry.getEndTime());
					} 
				}
			}
		}
		/* report the number of Activations not schedulable, if any */
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);
		var numNotSchedulable = 0; 	
		var name = UNKNOWN;
		var lastStartTime = -1;
		for (int i = 0; i &lt; endScheduleTime; i++) {
			var entry = notSchedulable.get(i);
			if (entry != null) {
				var entryName = entry.getName();
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {
					name = entryName;
					lastStartTime = entry.getStartTime();
					numNotSchedulable++;
				}
			}
		}
		if (numNotSchedulable > 0 ) {
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);
		}
		System.out.println();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nQx4MCueEeyJjNOKZ7e9aA" name="getSchedule" method="_nh1L-iueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niTGByueEeyJjNOKZ7e9aA">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_neC4JiueEeyJjNOKZ7e9aA" type="_nQ7CICueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nQyfQCueEeyJjNOKZ7e9aA" name="buildSchedule" visibility="private" method="_nh1L_CueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nQyfQSueEeyJjNOKZ7e9aA" name="toProgram" method="_nh1L_SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neDfMCueEeyJjNOKZ7e9aA" type="_nQTXECueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nQ0UcCueEeyJjNOKZ7e9aA" name="timeRemaining" visibility="protected" method="_nh2aFSueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niTGDSueEeyJjNOKZ7e9aA">
                  <body>timeRemaining returns duration minus the number of vacant slots found. 
	 * 
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_nQ0UcSueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQ07gCueEeyJjNOKZ7e9aA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQ07gSueEeyJjNOKZ7e9aA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQ07giueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nQ1ikCueEeyJjNOKZ7e9aA" name="printVerbose" method="_nh2aKCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nQ1ikSueEeyJjNOKZ7e9aA" name="print" method="_nh2aKSueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_neC4ICueEeyJjNOKZ7e9aA" name="Schedule" visibility="package" method="_nh0k9CueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_neC4IyueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_neC4JCueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_neC4ISueEeyJjNOKZ7e9aA" name="poset" type="_nPpPwCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neC4IiueEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neC4JSueEeyJjNOKZ7e9aA" type="_nQuN0CueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_neDfMSueEeyJjNOKZ7e9aA" name="replaceNullWithSleep" visibility="private" method="_nh1L_yueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niTGCCueEeyJjNOKZ7e9aA">
                  <body>Replace all null entries in program with sleep instructions
	 * 
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_neDfMiueEeyJjNOKZ7e9aA" name="program" type="_nQTXECueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_neDfMyueEeyJjNOKZ7e9aA" name="fakeSchedulingToTestRest" visibility="private" method="_nh1MASueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neDfNCueEeyJjNOKZ7e9aA" name="next" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_neDfNSueEeyJjNOKZ7e9aA" name="getChannelAndSetStartTime" visibility="protected" method="_nh1zACueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niTGCSueEeyJjNOKZ7e9aA">
                  <body>getChannel checks for conflicts and if none, returns a free
	 * channel. &lt;br>
	 * If return value == numChannels, then no channel can be assigned
	 * due to either conflicts or no availability.
	 * @param schedulableObject
	 * 
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_neDfNiueEeyJjNOKZ7e9aA" name="schedulableObject" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neDfNyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_neEGQCueEeyJjNOKZ7e9aA" name="findChannelAndTime" visibility="protected" method="_nh1zAyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neEGQSueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neEGQiueEeyJjNOKZ7e9aA" name="schedulableObject" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neEGQyueEeyJjNOKZ7e9aA" type="_nQwDACueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_neEGRCueEeyJjNOKZ7e9aA" name="continueSearch" visibility="protected" method="_nh1zByueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niTGCiueEeyJjNOKZ7e9aA">
                  <body>continueSearch continues the search for a channel time.&lt;br>
	 * The default implementation continues at time+1 by calling
	 * findChannelAndTime(time+1,schedulableObject). This method
	 * can be overridden to provide preemptive searches or any
	 * other method of continuing the search.
	 * 
	 * @param time
	 * @param activation
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_neEGRSueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neEGRiueEeyJjNOKZ7e9aA" name="activation" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neEGRyueEeyJjNOKZ7e9aA" type="_nQwDACueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_neEtUCueEeyJjNOKZ7e9aA" name="noOtherChannelConflicts" visibility="protected" method="_nh1zCyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neEtUSueEeyJjNOKZ7e9aA" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neEtUiueEeyJjNOKZ7e9aA" name="schedulableObject" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neEtUyueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neEtVCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_neEtVSueEeyJjNOKZ7e9aA" name="conflictsExist" visibility="protected" method="_nh1zECueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neEtViueEeyJjNOKZ7e9aA" name="obj" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neEtVyueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neEtWCueEeyJjNOKZ7e9aA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neEtWSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_neEtWiueEeyJjNOKZ7e9aA" name="freeOfCoordinatorConflicts" visibility="protected" method="_nh1zFSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neEtWyueEeyJjNOKZ7e9aA" name="obj" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neEtXCueEeyJjNOKZ7e9aA" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neEtXSueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neFUYCueEeyJjNOKZ7e9aA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neFUYSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_neFUYiueEeyJjNOKZ7e9aA" name="isAvailable" visibility="protected" method="_nh1zGyueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niTGCyueEeyJjNOKZ7e9aA">
                  <body>isAvailable returns true if the schedule for the channel is available in the 
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_neFUYyueEeyJjNOKZ7e9aA" name="a1" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neFUZCueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neFUZSueEeyJjNOKZ7e9aA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neFUZiueEeyJjNOKZ7e9aA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neFUZyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_neFUaCueEeyJjNOKZ7e9aA" name="isAvailable" visibility="protected" method="_nh2aECueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niTGDCueEeyJjNOKZ7e9aA">
                  <body>isAvailable returns true if the schedule is available in the 
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_neFUaSueEeyJjNOKZ7e9aA" name="a1" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neFUaiueEeyJjNOKZ7e9aA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neFUayueEeyJjNOKZ7e9aA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neF7cCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_neF7cSueEeyJjNOKZ7e9aA" name="canCombineEntriesInPlace" visibility="private" method="_nh2aGiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neF7ciueEeyJjNOKZ7e9aA" name="a1" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neF7cyueEeyJjNOKZ7e9aA" name="a2" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neF7dCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_neF7dSueEeyJjNOKZ7e9aA" name="combinedEntriesInPlace" visibility="private" method="_nh2aHiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neF7diueEeyJjNOKZ7e9aA" name="a1" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neF7dyueEeyJjNOKZ7e9aA" name="a2" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neF7eCueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neF7eSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_neGigCueEeyJjNOKZ7e9aA" name="addToSchedule" visibility="protected" method="_nh2aIyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neGigSueEeyJjNOKZ7e9aA" name="next" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neGigiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_neGigyueEeyJjNOKZ7e9aA" name="reportNotSchedulable" visibility="private" method="_nh2aJiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neGihCueEeyJjNOKZ7e9aA" name="object" type="_nN7_kCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_nQwDACueEeyJjNOKZ7e9aA" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_ngyDECueEeyJjNOKZ7e9aA" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ngyDEiueEeyJjNOKZ7e9aA" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh1L8CueEeyJjNOKZ7e9aA" name="ScheduleLocation" specification="_nQwqECueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh1L8SueEeyJjNOKZ7e9aA" type="_nQwDACueEeyJjNOKZ7e9aA" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;
			this.time = 0;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh1L8iueEeyJjNOKZ7e9aA" name="ScheduleLocation" specification="_nQwqFCueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh1L8yueEeyJjNOKZ7e9aA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_nh1L9CueEeyJjNOKZ7e9aA" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_nh1L9SueEeyJjNOKZ7e9aA" type="_nQwDACueEeyJjNOKZ7e9aA" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;
			this.time = time;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh1L9iueEeyJjNOKZ7e9aA" name="getChannel" specification="_nQxRIyueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh1L9yueEeyJjNOKZ7e9aA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh1L-CueEeyJjNOKZ7e9aA" name="getTime" specification="_nQxRJSueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh1L-SueEeyJjNOKZ7e9aA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_nQwqECueEeyJjNOKZ7e9aA" name="ScheduleLocation" visibility="package" method="_nh1L8CueEeyJjNOKZ7e9aA">
                  <eAnnotations xmi:id="_nQwqESueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_nQwqEiueEeyJjNOKZ7e9aA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_nQwqEyueEeyJjNOKZ7e9aA" type="_nQwDACueEeyJjNOKZ7e9aA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_nQwqFCueEeyJjNOKZ7e9aA" name="ScheduleLocation" visibility="package" method="_nh1L8iueEeyJjNOKZ7e9aA">
                  <eAnnotations xmi:id="_nQxRICueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_nQxRISueEeyJjNOKZ7e9aA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_nQwqFSueEeyJjNOKZ7e9aA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_nQwqFiueEeyJjNOKZ7e9aA" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_nQxRIiueEeyJjNOKZ7e9aA" type="_nQwDACueEeyJjNOKZ7e9aA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_nQxRIyueEeyJjNOKZ7e9aA" name="getChannel" visibility="protected" method="_nh1L9iueEeyJjNOKZ7e9aA">
                  <ownedComment xmi:id="_niTGBSueEeyJjNOKZ7e9aA">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_nQxRJCueEeyJjNOKZ7e9aA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_nQxRJSueEeyJjNOKZ7e9aA" name="getTime" visibility="protected" method="_nh1L-CueEeyJjNOKZ7e9aA">
                  <ownedComment xmi:id="_niTGBiueEeyJjNOKZ7e9aA">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_nQxRJiueEeyJjNOKZ7e9aA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nQ7CICueEeyJjNOKZ7e9aA" name="ScheduleTable">
              <generalization xmi:id="_neHwoCueEeyJjNOKZ7e9aA" general="_nREMECueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngyqICueEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngyqISueEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh3BICueEeyJjNOKZ7e9aA" name="ScheduleTable" specification="_nQ7CISueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh3BISueEeyJjNOKZ7e9aA" type="_nQ7CICueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh3BIiueEeyJjNOKZ7e9aA" name="ScheduleTable" specification="_nQ7pMyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh3BIyueEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh3BJCueEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh3BJSueEeyJjNOKZ7e9aA" type="_nQ7CICueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(row,column);
		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nQ7CISueEeyJjNOKZ7e9aA" name="ScheduleTable" visibility="package" method="_nh3BICueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nQ7pMCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nQ7pMSueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nQ7pMiueEeyJjNOKZ7e9aA" type="_nQ7CICueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nQ7pMyueEeyJjNOKZ7e9aA" name="ScheduleTable" visibility="package" method="_nh3BIiueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nQ7pNiueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nQ7pNyueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nQ7pNCueEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQ7pNSueEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQ7pOCueEeyJjNOKZ7e9aA" type="_nQ7CICueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nQ8QQCueEeyJjNOKZ7e9aA" name="ScheduleTime">
              <ownedAttribute xmi:id="_ngyqIiueEeyJjNOKZ7e9aA" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ngyqIyueEeyJjNOKZ7e9aA" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh3BJiueEeyJjNOKZ7e9aA" name="ScheduleTime" specification="_nQ83UCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh3BJyueEeyJjNOKZ7e9aA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh3BKCueEeyJjNOKZ7e9aA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh3BKSueEeyJjNOKZ7e9aA" type="_nQ8QQCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;
		this.endTime = endTime;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nQ83UCueEeyJjNOKZ7e9aA" name="ScheduleTime" visibility="package" method="_nh3BJiueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nQ83UyueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nQ83VCueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nQ83USueEeyJjNOKZ7e9aA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQ83UiueEeyJjNOKZ7e9aA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nQ9eYCueEeyJjNOKZ7e9aA" type="_nQ8QQCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nQ9eYSueEeyJjNOKZ7e9aA" name="SimulatorInput">
              <ownedComment xmi:id="_niTtECueEeyJjNOKZ7e9aA">
                <body>@author sgoddard
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nQ-FcCueEeyJjNOKZ7e9aA" name="SortedPeriodQueue">
              <generalization xmi:id="_nQ_TkCueEeyJjNOKZ7e9aA" general="_nQbS5CueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngzRMCueEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngzRMSueEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh3BKiueEeyJjNOKZ7e9aA" name="SortedPeriodQueue" specification="_nQ-sgSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh3BKyueEeyJjNOKZ7e9aA" type="_nQ-FcCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh3BLCueEeyJjNOKZ7e9aA" name="SortedPeriodQueue" specification="_neIXsCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh3BLSueEeyJjNOKZ7e9aA" name="schedulableObjects" type="_ndnaUCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh3BLiueEeyJjNOKZ7e9aA" type="_nQ-FcCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());
		this.addAll(schedulableObjects);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nQ-sgSueEeyJjNOKZ7e9aA" name="SortedPeriodQueue" visibility="package" method="_nh3BKiueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nQ-sgiueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nQ-sgyueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nQ-shCueEeyJjNOKZ7e9aA" type="_nQ-FcCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_neIXsCueEeyJjNOKZ7e9aA" name="SortedPeriodQueue" visibility="package" method="_nh3BLCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_neIXsiueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_neIXsyueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_neIXsSueEeyJjNOKZ7e9aA" name="schedulableObjects" type="_ndnaUCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neIXtCueEeyJjNOKZ7e9aA" type="_nQ-FcCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_nQ_6oSueEeyJjNOKZ7e9aA" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_neI-wSueEeyJjNOKZ7e9aA" general="_nQeWMCueEeyJjNOKZ7e9aA"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_nRAhsCueEeyJjNOKZ7e9aA" name="ScheduleChoices">
                <ownedLiteral xmi:id="_nRBIwSueEeyJjNOKZ7e9aA" name="PRIORITY"/>
                <ownedLiteral xmi:id="_nRBIwiueEeyJjNOKZ7e9aA" name="RM"/>
                <ownedLiteral xmi:id="_nRBIwyueEeyJjNOKZ7e9aA" name="DM"/>
                <ownedLiteral xmi:id="_nRBIxCueEeyJjNOKZ7e9aA" name="RTHART"/>
                <ownedLiteral xmi:id="_nRBIxSueEeyJjNOKZ7e9aA" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_nRBIxiueEeyJjNOKZ7e9aA" name="POSET_RM"/>
                <ownedLiteral xmi:id="_nRBIxyueEeyJjNOKZ7e9aA" name="POSET_DM"/>
                <ownedLiteral xmi:id="_nRBv0CueEeyJjNOKZ7e9aA" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_nRBv0SueEeyJjNOKZ7e9aA" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_nRBv0iueEeyJjNOKZ7e9aA" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_nRBv0yueEeyJjNOKZ7e9aA" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_nRBv1CueEeyJjNOKZ7e9aA" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_nRBv1SueEeyJjNOKZ7e9aA" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_nRBv1iueEeyJjNOKZ7e9aA" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nRCW4CueEeyJjNOKZ7e9aA" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nRCW4SueEeyJjNOKZ7e9aA" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nRCW4iueEeyJjNOKZ7e9aA" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nRC98CueEeyJjNOKZ7e9aA" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nRC98SueEeyJjNOKZ7e9aA" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nRC98iueEeyJjNOKZ7e9aA" name="SystemFactory">
              <ownedComment xmi:id="_niTtESueEeyJjNOKZ7e9aA">
                <body>Factory Class to create a schedule instance.
This factory can be used to create different
types of schedules.
@author sgoddard
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh3BLyueEeyJjNOKZ7e9aA" name="create" specification="_neJl0SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh3BMCueEeyJjNOKZ7e9aA" name="workload" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh3BMSueEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh3BMiueEeyJjNOKZ7e9aA" name="choice" type="_nRAhsCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh3BMyueEeyJjNOKZ7e9aA" type="_nRXuECueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_neJl0SueEeyJjNOKZ7e9aA" name="create" isStatic="true" method="_nh3BLyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neJl0iueEeyJjNOKZ7e9aA" name="workload" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neJl0yueEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neJl1CueEeyJjNOKZ7e9aA" name="choice" type="_nRAhsCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neJl1SueEeyJjNOKZ7e9aA" type="_nRXuECueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nREMECueEeyJjNOKZ7e9aA" name="Table">
              <generalization xmi:id="_nf1A0SueEeyJjNOKZ7e9aA" general="_nc5ooCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngzRMiueEeyJjNOKZ7e9aA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ngzRMyueEeyJjNOKZ7e9aA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh3oMCueEeyJjNOKZ7e9aA" name="Table" specification="_nREzISueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh3oMSueEeyJjNOKZ7e9aA" type="_nREMECueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh3oMiueEeyJjNOKZ7e9aA" name="Table" specification="_nRFaMCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh3oMyueEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh3oNCueEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh3oNSueEeyJjNOKZ7e9aA" type="_nREMECueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super();
		
		for(int i=0; i &lt; row; i++) {
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();
			for(int j=0; j &lt; column; j++) {
				nullRow.add(null);
			}
			this.add((E) nullRow);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh3oNiueEeyJjNOKZ7e9aA" name="getNumRows" specification="_nRFaNiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh3oNyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh3oOCueEeyJjNOKZ7e9aA" name="getNumColumns" specification="_nRGBQCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh3oOSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;
		var numRows = this.size();
		if (numRows > 0) {
			var lastRow = this.get(numRows-1);
			numColumns = lastRow.size();
		}
		return numColumns;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh3oOiueEeyJjNOKZ7e9aA" name="set" specification="_nf0ZwCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh3oOyueEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh3oPCueEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh3oPSueEeyJjNOKZ7e9aA" name="element" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>E fullRow;
		if (row &lt; this.size()) {
			fullRow = this.get(row);
			if (column &lt; fullRow.size()) {
				fullRow.set(column, element);
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh3oPiueEeyJjNOKZ7e9aA" name="get" specification="_nRGBQiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh3oPyueEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh3oQCueEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh3oQSueEeyJjNOKZ7e9aA" type="_nfTcYSueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>T element = null;
		E fullRow;
		if (row &lt; this.size()) {
			fullRow = this.get(row);
			if (column &lt; fullRow.size()) {
				element = fullRow.get(column);
			}
		}
		return element;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nREzISueEeyJjNOKZ7e9aA" name="Table" method="_nh3oMCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nREzIiueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nREzIyueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nREzJCueEeyJjNOKZ7e9aA" type="_nREMECueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nRFaMCueEeyJjNOKZ7e9aA" name="Table" method="_nh3oMiueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nRFaMyueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nRFaNCueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nRFaMSueEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nRFaMiueEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nRFaNSueEeyJjNOKZ7e9aA" type="_nREMECueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nRFaNiueEeyJjNOKZ7e9aA" name="getNumRows" method="_nh3oNiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nRFaNyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nRGBQCueEeyJjNOKZ7e9aA" name="getNumColumns" method="_nh3oOCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nRGBQSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nRGBQiueEeyJjNOKZ7e9aA" name="get" method="_nh3oPiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nRGBQyueEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nRGBRCueEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nf1A0CueEeyJjNOKZ7e9aA" type="_nfTcYSueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nf0ZwCueEeyJjNOKZ7e9aA" name="set" method="_nh3oOiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nf0ZwSueEeyJjNOKZ7e9aA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nf0ZwiueEeyJjNOKZ7e9aA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nf0ZwyueEeyJjNOKZ7e9aA" name="element" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_nRHPYCueEeyJjNOKZ7e9aA" name="Visualization">
              <ownedComment xmi:id="_niTtEiueEeyJjNOKZ7e9aA">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_nRH2cCueEeyJjNOKZ7e9aA" name="SystemChoices">
                <ownedLiteral xmi:id="_nRH2ciueEeyJjNOKZ7e9aA" name="SOURCE"/>
                <ownedLiteral xmi:id="_nRH2cyueEeyJjNOKZ7e9aA" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_nRIdgCueEeyJjNOKZ7e9aA" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_nRIdgSueEeyJjNOKZ7e9aA" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_nRIdgiueEeyJjNOKZ7e9aA" name="DEADLINE_REPORT"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_nRIdgyueEeyJjNOKZ7e9aA" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_nRIdhSueEeyJjNOKZ7e9aA" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_nRJEkCueEeyJjNOKZ7e9aA" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_nRJEkSueEeyJjNOKZ7e9aA" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_nRJEkiueEeyJjNOKZ7e9aA" name="toDisplay"/>
              <ownedOperation xmi:id="_nRJEkyueEeyJjNOKZ7e9aA" name="toFile"/>
              <ownedOperation xmi:id="_nRJElCueEeyJjNOKZ7e9aA" name="toString">
                <ownedParameter xmi:id="_nRJElSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nRJroCueEeyJjNOKZ7e9aA" name="VisualizationFactory">
              <ownedComment xmi:id="_niTtEyueEeyJjNOKZ7e9aA">
                <body>Factory Class to create a visualization instance.
This factory can be used to create different
types of visualizations.
@author sgoddard
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh3oQiueEeyJjNOKZ7e9aA" name="createProgramVisualization" specification="_neLbASueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh3oQyueEeyJjNOKZ7e9aA" name="warp" type="_nRXuECueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh3oRCueEeyJjNOKZ7e9aA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh3oRSueEeyJjNOKZ7e9aA" name="choice" type="_nRH2cCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh3oRiueEeyJjNOKZ7e9aA" type="_nRHPYCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh4PQCueEeyJjNOKZ7e9aA" name="createWorkLoadVisualization" specification="_neLbBiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh4PQSueEeyJjNOKZ7e9aA" name="workload" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh4PQiueEeyJjNOKZ7e9aA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh4PQyueEeyJjNOKZ7e9aA" name="choice" type="_nRIdgyueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh4PRCueEeyJjNOKZ7e9aA" type="_nRHPYCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_neLbASueEeyJjNOKZ7e9aA" name="createProgramVisualization" isStatic="true" method="_nh3oQiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neLbAiueEeyJjNOKZ7e9aA" name="warp" type="_nRXuECueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neLbAyueEeyJjNOKZ7e9aA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neLbBCueEeyJjNOKZ7e9aA" name="choice" type="_nRH2cCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neLbBSueEeyJjNOKZ7e9aA" type="_nRHPYCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_neLbBiueEeyJjNOKZ7e9aA" name="createWorkLoadVisualization" isStatic="true" method="_nh4PQCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neMCECueEeyJjNOKZ7e9aA" name="workload" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neMCESueEeyJjNOKZ7e9aA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neMCEiueEeyJjNOKZ7e9aA" name="choice" type="_nRIdgyueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neMCEyueEeyJjNOKZ7e9aA" type="_nRHPYCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nRK5wCueEeyJjNOKZ7e9aA" name="VisualizationImplementation">
              <ownedComment xmi:id="_niTtFCueEeyJjNOKZ7e9aA">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ngzRNCueEeyJjNOKZ7e9aA" name="visualization" visibility="private" type="_nOy7MCueEeyJjNOKZ7e9aA" association="_ni7YJCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngz4QSueEeyJjNOKZ7e9aA" name="fileContent" visibility="private" type="_nOy7MCueEeyJjNOKZ7e9aA" association="_ni7_MiueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ngz4QyueEeyJjNOKZ7e9aA" name="displayContent" visibility="private" type="_nOy7MCueEeyJjNOKZ7e9aA" association="_ni7_NSueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ng0fUCueEeyJjNOKZ7e9aA" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng0fUiueEeyJjNOKZ7e9aA" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng0fVCueEeyJjNOKZ7e9aA" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng0fViueEeyJjNOKZ7e9aA" name="fm" visibility="private" type="_nO96UCueEeyJjNOKZ7e9aA" association="_ni8mQiueEeyJjNOKZ7e9aA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng0fVyueEeyJjNOKZ7e9aA" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng1GYSueEeyJjNOKZ7e9aA" name="warp" visibility="private" type="_nRXuECueEeyJjNOKZ7e9aA" association="_ni9NUSueEeyJjNOKZ7e9aA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng1GYiueEeyJjNOKZ7e9aA" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng1GZCueEeyJjNOKZ7e9aA" name="workLoad" visibility="private" type="_nR2PMCueEeyJjNOKZ7e9aA" association="_ni9NVCueEeyJjNOKZ7e9aA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng1GZSueEeyJjNOKZ7e9aA" value="null"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_neMCFCueEeyJjNOKZ7e9aA" client="_nRK5wCueEeyJjNOKZ7e9aA" supplier="_nRHPYCueEeyJjNOKZ7e9aA" contract="_nRHPYCueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh4PRSueEeyJjNOKZ7e9aA" name="VisualizationImplementation" specification="_nf2O8SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh4PRiueEeyJjNOKZ7e9aA" name="warp" type="_nRXuECueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh4PRyueEeyJjNOKZ7e9aA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh4PSCueEeyJjNOKZ7e9aA" name="choice" type="_nf1n4CueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh4PSSueEeyJjNOKZ7e9aA" type="_nRK5wCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();
		this.warp = warp;
		inputFileName = warp.toWorkload().getInputFileName();
		this.fileNameTemplate  = createFileNameTemplate(outputDirectory);
		createVisualization(choice);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh4PSiueEeyJjNOKZ7e9aA" name="VisualizationImplementation" specification="_nf22AiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh4PSyueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh4PTCueEeyJjNOKZ7e9aA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh4PTSueEeyJjNOKZ7e9aA" name="choice" type="_nf22ACueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh4PTiueEeyJjNOKZ7e9aA" type="_nRK5wCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();
		this.workLoad = workLoad;
		inputFileName = workLoad.getInputFileName();
		this.fileNameTemplate  = createFileNameTemplate(outputDirectory);
		createVisualization(choice);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh4PTyueEeyJjNOKZ7e9aA" name="toDisplay" specification="_nRMH4CueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>System.out.println(displayContent.toString());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh4PUCueEeyJjNOKZ7e9aA" name="toFile" specification="_nRMu8yueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>fm.writeFile(fileName,fileContent.toString());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh4PUSueEeyJjNOKZ7e9aA" name="toString" specification="_nRNWAyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh4PUiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh4PUyueEeyJjNOKZ7e9aA" name="createVisualization" specification="_nf3dFCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh4PVCueEeyJjNOKZ7e9aA" name="choice" type="_nf1n4CueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization
		case SOURCE:
			createVisualization(new ProgramVisualization(warp));
			break;

		case RELIABILITIES:
			// TODO Implement Reliability Analysis Visualization
			createVisualization(new ReliabilityVisualization(warp));
			break;

		case SIMULATOR_INPUT:
			// TODO Implement Simulator Input Visualization
			createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));
			break;
		
		case LATENCY_REPORT:
			createVisualization(new ReportVisualization(fm, warp,
					warp.toProgram().latencyReport(), &quot;Latency&quot;));	
			break;
		
		case DEADLINE_REPORT:
			createVisualization(new ReportVisualization(fm, warp,
					warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));	
			break;
			
		default:	
			createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));
			break;
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh42UCueEeyJjNOKZ7e9aA" name="createVisualization" specification="_nf4EICueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh42USueEeyJjNOKZ7e9aA" name="choice" type="_nf22ACueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization
		case COMUNICATION_GRAPH:
			// createWarpVisualization();
			createVisualization(new CommunicationGraph(fm, workLoad));
			break;

		case GRAPHVIZ:
			createVisualization(new GraphViz(fm, workLoad.toString()));	
			break;
			
		case INPUT_GRAPH:
			createVisualization(workLoad);	
			break;
			
		default:	
			createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));
			break;
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh42UiueEeyJjNOKZ7e9aA" name="createVisualization" specification="_nf4EIiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh42UyueEeyJjNOKZ7e9aA" name="obj" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>visualization = obj.visualization();
		fileContent = obj.fileVisualization();
		/* display is file content printed to console */
		displayContent = obj.displayVisualization(); 
		fileName = obj.createFile (fileNameTemplate); // in output directory
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh42VCueEeyJjNOKZ7e9aA" name="createFileNameTemplate" specification="_nRN9EiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh42VSueEeyJjNOKZ7e9aA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh42ViueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;
		var workingDirectory = fm.getBaseDirectory();
		var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);
		// Now create the fileNameTemplate using full output path and input filename 
		if (inputFileName.contains(&quot;/&quot;)) {
			var index = inputFileName.lastIndexOf(&quot;/&quot;)+1;
			fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);
		} else {
			fileNameTemplate = newDirectory + File.separator + inputFileName;
		}
		return fileNameTemplate;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nRMH4CueEeyJjNOKZ7e9aA" name="toDisplay" method="_nh4PTyueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nRMu8yueEeyJjNOKZ7e9aA" name="toFile" method="_nh4PUCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nRNWAyueEeyJjNOKZ7e9aA" name="toString" method="_nh4PUSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nRNWBCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nRN9EiueEeyJjNOKZ7e9aA" name="createFileNameTemplate" visibility="private" method="_nh42VCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nRN9EyueEeyJjNOKZ7e9aA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nRN9FCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nf2O8SueEeyJjNOKZ7e9aA" name="VisualizationImplementation" method="_nh4PRSueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nf2O9SueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nf2O9iueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nf2O8iueEeyJjNOKZ7e9aA" name="warp" type="_nRXuECueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nf2O8yueEeyJjNOKZ7e9aA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nf2O9CueEeyJjNOKZ7e9aA" name="choice" type="_nf1n4CueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nf2O9yueEeyJjNOKZ7e9aA" type="_nRK5wCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nf22AiueEeyJjNOKZ7e9aA" name="VisualizationImplementation" method="_nh4PSiueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nf3dESueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nf3dEiueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nf22AyueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nf22BCueEeyJjNOKZ7e9aA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nf3dECueEeyJjNOKZ7e9aA" name="choice" type="_nf22ACueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nf3dEyueEeyJjNOKZ7e9aA" type="_nRK5wCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nf3dFCueEeyJjNOKZ7e9aA" name="createVisualization" visibility="private" method="_nh4PUyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nf3dFSueEeyJjNOKZ7e9aA" name="choice" type="_nf1n4CueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nf4EICueEeyJjNOKZ7e9aA" name="createVisualization" visibility="private" method="_nh42UCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nf4EISueEeyJjNOKZ7e9aA" name="choice" type="_nf22ACueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nf4EIiueEeyJjNOKZ7e9aA" name="createVisualization" visibility="private" method="_nh42UiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nf4EIyueEeyJjNOKZ7e9aA" name="obj" type="_nfTcYSueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nRRncCueEeyJjNOKZ7e9aA" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_niTtFSueEeyJjNOKZ7e9aA">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ng1tcCueEeyJjNOKZ7e9aA" name="fm" visibility="private" type="_nO96UCueEeyJjNOKZ7e9aA" association="_ni90YSueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ng1tciueEeyJjNOKZ7e9aA" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng1tdCueEeyJjNOKZ7e9aA" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng2UgSueEeyJjNOKZ7e9aA" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng2UgiueEeyJjNOKZ7e9aA" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh42VyueEeyJjNOKZ7e9aA" name="VisualizationObject" specification="_neN3QCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh42WCueEeyJjNOKZ7e9aA" name="fm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh42WSueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh42WiueEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh42WyueEeyJjNOKZ7e9aA" type="_nRRncCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;
		this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,String.valueOf(workLoad.getMinPacketReceptionRate()),String.valueOf(workLoad.getE2e())); 
		this.suffix = suffix; 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh42XCueEeyJjNOKZ7e9aA" name="VisualizationObject" specification="_neOeUSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh42XSueEeyJjNOKZ7e9aA" name="fm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh42XiueEeyJjNOKZ7e9aA" name="warp" type="_nQ_6oSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh42XyueEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh42YCueEeyJjNOKZ7e9aA" type="_nRRncCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;
		if (warp.getNumFaults() > 0) {
			this.nameExtension = nameExtension(warp.getSchedulerName(),
					warp.getNumFaults()); 
		} else {
			this.nameExtension = nameExtension(warp.getSchedulerName(),
					warp.getMinPacketReceptionRate(),
					warp.getE2e()); 
		}
		this.suffix = suffix;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh42YSueEeyJjNOKZ7e9aA" name="VisualizationObject" specification="_neOeWCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh42YiueEeyJjNOKZ7e9aA" name="fm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh42YyueEeyJjNOKZ7e9aA" name="warp" type="_nQ_6oSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh42ZCueEeyJjNOKZ7e9aA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh42ZSueEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh42ZiueEeyJjNOKZ7e9aA" type="_nRRncCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;
		if (warp.getNumFaults() > 0) {
			this.nameExtension = nameExtension(warp.getSchedulerName(),
					warp.getNumFaults()) + nameExtension; 
		} else {
			this.nameExtension = nameExtension(warp.getSchedulerName(),
					warp.getMinPacketReceptionRate(),
					warp.getE2e()) + nameExtension; 
		}
		
		this.suffix = suffix;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh5dYCueEeyJjNOKZ7e9aA" name="VisualizationObject" specification="_nePFZCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh5dYSueEeyJjNOKZ7e9aA" name="fm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh5dYiueEeyJjNOKZ7e9aA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh5dYyueEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh5dZCueEeyJjNOKZ7e9aA" type="_nRRncCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;
		this.nameExtension = nameExtension; 
		this.suffix = suffix;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh5dZSueEeyJjNOKZ7e9aA" name="nameExtension" specification="_nf5SQCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh5dZiueEeyJjNOKZ7e9aA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh5dZyueEeyJjNOKZ7e9aA" name="m" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh5daCueEeyJjNOKZ7e9aA" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh5daSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sM-%sE2E&quot;,
				schName,
				String.valueOf(m),
				String.valueOf(e2e)); 
		return extension;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh5daiueEeyJjNOKZ7e9aA" name="nameExtension" specification="_nRTcoCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh5dayueEeyJjNOKZ7e9aA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh5dbCueEeyJjNOKZ7e9aA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh5dbSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;,
				schName,
				String.valueOf(numFaults)); 
		return extension;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh5dbiueEeyJjNOKZ7e9aA" name="getFileManager" specification="_nRTcpCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh5dbyueEeyJjNOKZ7e9aA" type="_nO96UCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return fm;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh5dcCueEeyJjNOKZ7e9aA" name="visualization" specification="_nRUDsCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh5dcSueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();
		content.add(NOT_IMPLEMENTED);
		return content;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh5dciueEeyJjNOKZ7e9aA" name="createFile" specification="_nRUDsSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh5dcyueEeyJjNOKZ7e9aA" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh5ddCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix );
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh5ddSueEeyJjNOKZ7e9aA" name="fileVisualization" specification="_nRUDtCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh5ddiueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();
 	fileContent.addAll(visualization());
 	fileContent.addAll(createFooter());
 	return fileContent;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh5ddyueEeyJjNOKZ7e9aA" name="displayVisualization" specification="_nRUqwCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh5deCueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return visualization();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh6EcCueEeyJjNOKZ7e9aA" name="createHeader" specification="_nRUqwSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh6EcSueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();
		return header;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh6EciueEeyJjNOKZ7e9aA" name="createFooter" specification="_nRUqwiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh6EcyueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();
		return footer;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nRTcoCueEeyJjNOKZ7e9aA" name="nameExtension" visibility="private" method="_nh5daiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nRTcoSueEeyJjNOKZ7e9aA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nRTcoiueEeyJjNOKZ7e9aA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nRTcoyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nRTcpCueEeyJjNOKZ7e9aA" name="getFileManager" method="_nh5dbiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niTtFiueEeyJjNOKZ7e9aA">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_nePscCueEeyJjNOKZ7e9aA" type="_nO96UCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nRUDsCueEeyJjNOKZ7e9aA" name="visualization" method="_nh5dcCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nePscSueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nRUDsSueEeyJjNOKZ7e9aA" name="createFile" method="_nh5dciueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nRUDsiueEeyJjNOKZ7e9aA" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nRUDsyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nRUDtCueEeyJjNOKZ7e9aA" name="fileVisualization" method="_nh5ddSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nePsciueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nRUqwCueEeyJjNOKZ7e9aA" name="displayVisualization" method="_nh5ddyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nePscyueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nRUqwSueEeyJjNOKZ7e9aA" name="createHeader" method="_nh6EcCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nePsdCueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nRUqwiueEeyJjNOKZ7e9aA" name="createFooter" method="_nh6EciueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nePsdSueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_neN3QCueEeyJjNOKZ7e9aA" name="VisualizationObject" visibility="package" method="_nh42VyueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_neN3RCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_neN3RSueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_neN3QSueEeyJjNOKZ7e9aA" name="fm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neN3QiueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neN3QyueEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neOeUCueEeyJjNOKZ7e9aA" type="_nRRncCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_neOeUSueEeyJjNOKZ7e9aA" name="VisualizationObject" visibility="package" method="_nh42XCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_neOeVSueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_neOeViueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_neOeUiueEeyJjNOKZ7e9aA" name="fm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neOeUyueEeyJjNOKZ7e9aA" name="warp" type="_nQ_6oSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neOeVCueEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_neOeVyueEeyJjNOKZ7e9aA" type="_nRRncCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_neOeWCueEeyJjNOKZ7e9aA" name="VisualizationObject" visibility="package" method="_nh42YSueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nePFYSueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nePFYiueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_neOeWSueEeyJjNOKZ7e9aA" name="fm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neOeWiueEeyJjNOKZ7e9aA" name="warp" type="_nQ_6oSueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neOeWyueEeyJjNOKZ7e9aA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nePFYCueEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nePFYyueEeyJjNOKZ7e9aA" type="_nRRncCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nePFZCueEeyJjNOKZ7e9aA" name="VisualizationObject" visibility="package" method="_nh5dYCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nePFaCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nePFaSueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nePFZSueEeyJjNOKZ7e9aA" name="fm" type="_nO96UCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nePFZiueEeyJjNOKZ7e9aA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nePFZyueEeyJjNOKZ7e9aA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nePFaiueEeyJjNOKZ7e9aA" type="_nRRncCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nf5SQCueEeyJjNOKZ7e9aA" name="nameExtension" visibility="private" method="_nh5dZSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nf5SQSueEeyJjNOKZ7e9aA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nf5SQiueEeyJjNOKZ7e9aA" name="m" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nf5SQyueEeyJjNOKZ7e9aA" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nf5SRCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_nRXuECueEeyJjNOKZ7e9aA" name="Warp">
              <ownedComment xmi:id="_niTtFyueEeyJjNOKZ7e9aA">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <generalization xmi:id="_neQTgCueEeyJjNOKZ7e9aA" general="_nQ_6oSueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nRXuESueEeyJjNOKZ7e9aA" name="toWorkload">
                <ownedParameter xmi:id="_neQ6kCueEeyJjNOKZ7e9aA" type="_nR2PMCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nRYVICueEeyJjNOKZ7e9aA" name="toProgram">
                <ownedParameter xmi:id="_neQ6kSueEeyJjNOKZ7e9aA" type="_nP8xwCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nRYVISueEeyJjNOKZ7e9aA" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_neQ6kiueEeyJjNOKZ7e9aA" type="_nQdIECueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nRYVIiueEeyJjNOKZ7e9aA" name="toSimulator">
                <ownedParameter xmi:id="_neQ6kyueEeyJjNOKZ7e9aA" type="_nQ9eYSueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nRY8MCueEeyJjNOKZ7e9aA" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_nRY8MSueEeyJjNOKZ7e9aA" name="reliabilitiesMet">
                <ownedParameter xmi:id="_nRY8MiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nRY8MyueEeyJjNOKZ7e9aA" name="deadlinesMet">
                <ownedParameter xmi:id="_nRY8NCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nRZjQCueEeyJjNOKZ7e9aA" name="WarpDSL">
              <ownedComment xmi:id="_niUUICueEeyJjNOKZ7e9aA">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ng2UgyueEeyJjNOKZ7e9aA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng27kCueEeyJjNOKZ7e9aA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng27kSueEeyJjNOKZ7e9aA" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng27kiueEeyJjNOKZ7e9aA" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng27kyueEeyJjNOKZ7e9aA" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng27lCueEeyJjNOKZ7e9aA" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh6rhiueEeyJjNOKZ7e9aA" name="getInstructionParameters" specification="_nRdNoCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh6rhyueEeyJjNOKZ7e9aA" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh6riCueEeyJjNOKZ7e9aA" type="_nc5ooCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;
 	var dsl = new ListenerDsl();
     // Read input file and build AST of graph
     try {
     	CharStream inputInstruction = CharStreams.fromString(instruction);
     	var lexer = new WARPdslLexer(inputInstruction);
     	var instructionTokens = new CommonTokenStream(lexer);
     	var parser = new WARPdslParser(instructionTokens);
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'
     	var warp = new ParseTreeWalker();
     	warp.walk(dsl, instructionTree);
     } catch (Exception e) {
     	e.printStackTrace();
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());
     }
     instructionParametersArrayList = dsl.getInstructionParameters();
     return instructionParametersArrayList;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nRdNoCueEeyJjNOKZ7e9aA" name="getInstructionParameters" method="_nh6rhiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nRdNoSueEeyJjNOKZ7e9aA" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nf6gYCueEeyJjNOKZ7e9aA" type="_nc5ooCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_nRaKUCueEeyJjNOKZ7e9aA" name="InstructionParameters">
                <ownedAttribute xmi:id="_ng27lSueEeyJjNOKZ7e9aA" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng27liueEeyJjNOKZ7e9aA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ng27lyueEeyJjNOKZ7e9aA" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng27mCueEeyJjNOKZ7e9aA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ng3ioCueEeyJjNOKZ7e9aA" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng3ioSueEeyJjNOKZ7e9aA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ng3ioiueEeyJjNOKZ7e9aA" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng3ioyueEeyJjNOKZ7e9aA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ng3ipCueEeyJjNOKZ7e9aA" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng3ipSueEeyJjNOKZ7e9aA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ng3ipiueEeyJjNOKZ7e9aA" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng3ipyueEeyJjNOKZ7e9aA" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ng4JsCueEeyJjNOKZ7e9aA" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng4JsSueEeyJjNOKZ7e9aA" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh6EdCueEeyJjNOKZ7e9aA" name="getCoordinator" specification="_nRaxYCueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh6EdSueEeyJjNOKZ7e9aA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh6EdiueEeyJjNOKZ7e9aA" name="setCoordinator" specification="_nRbYcSueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh6EdyueEeyJjNOKZ7e9aA" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh6EeCueEeyJjNOKZ7e9aA" name="setName" specification="_nRbYcyueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh6EeSueEeyJjNOKZ7e9aA" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh6EeiueEeyJjNOKZ7e9aA" name="setFlow" specification="_nRb_gCueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh6EeyueEeyJjNOKZ7e9aA" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh6EfCueEeyJjNOKZ7e9aA" name="setSrc" specification="_nRb_giueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh6EfSueEeyJjNOKZ7e9aA" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh6rgCueEeyJjNOKZ7e9aA" name="setSnk" specification="_nRb_hCueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh6rgSueEeyJjNOKZ7e9aA" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh6rgiueEeyJjNOKZ7e9aA" name="setChannel" specification="_nRcmkCueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh6rgyueEeyJjNOKZ7e9aA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh6rhCueEeyJjNOKZ7e9aA" name="unused" specification="_nRcmkiueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh6rhSueEeyJjNOKZ7e9aA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_nRaxYCueEeyJjNOKZ7e9aA" name="getCoordinator" method="_nh6EdCueEeyJjNOKZ7e9aA">
                  <ownedComment xmi:id="_niUUISueEeyJjNOKZ7e9aA">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_nRbYcCueEeyJjNOKZ7e9aA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_nRbYcSueEeyJjNOKZ7e9aA" name="setCoordinator" method="_nh6EdiueEeyJjNOKZ7e9aA">
                  <ownedComment xmi:id="_niUUIiueEeyJjNOKZ7e9aA">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_nRbYciueEeyJjNOKZ7e9aA" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_nRbYcyueEeyJjNOKZ7e9aA" name="setName" visibility="private" method="_nh6EeCueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nRbYdCueEeyJjNOKZ7e9aA" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_nRb_gCueEeyJjNOKZ7e9aA" name="setFlow" visibility="private" method="_nh6EeiueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nRb_gSueEeyJjNOKZ7e9aA" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_nRb_giueEeyJjNOKZ7e9aA" name="setSrc" visibility="private" method="_nh6EfCueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nRb_gyueEeyJjNOKZ7e9aA" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_nRb_hCueEeyJjNOKZ7e9aA" name="setSnk" visibility="private" method="_nh6rgCueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nRb_hSueEeyJjNOKZ7e9aA" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_nRcmkCueEeyJjNOKZ7e9aA" name="setChannel" visibility="private" method="_nh6rgiueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nRcmkSueEeyJjNOKZ7e9aA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_nRcmkiueEeyJjNOKZ7e9aA" name="unused" method="_nh6rhCueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nRcmkyueEeyJjNOKZ7e9aA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_nRd0sSueEeyJjNOKZ7e9aA" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_nf7HcSueEeyJjNOKZ7e9aA" general="_nf6gYSueEeyJjNOKZ7e9aA"/>
                <ownedAttribute xmi:id="_ng4JsiueEeyJjNOKZ7e9aA" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ng4wwSueEeyJjNOKZ7e9aA" name="instructionParametersArrayList" visibility="package" type="_nc5ooCueEeyJjNOKZ7e9aA" association="_ni90ZCueEeyJjNOKZ7e9aA"/>
                <ownedAttribute xmi:id="_ng5X0CueEeyJjNOKZ7e9aA" name="instructionParameters" visibility="package" type="_nRaKUCueEeyJjNOKZ7e9aA" association="_ni-bcSueEeyJjNOKZ7e9aA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh6riSueEeyJjNOKZ7e9aA" name="ListenerDsl" specification="_nRebwCueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh6riiueEeyJjNOKZ7e9aA" type="_nRd0sSueEeyJjNOKZ7e9aA" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh6riyueEeyJjNOKZ7e9aA" name="getInstructionParameters" specification="_nRebxCueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh6rjCueEeyJjNOKZ7e9aA" type="_nc5ooCueEeyJjNOKZ7e9aA" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh6rjSueEeyJjNOKZ7e9aA" name="enterAction" specification="_neSIsSueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh6rjiueEeyJjNOKZ7e9aA" name="ctx" type="_neRhoCueEeyJjNOKZ7e9aA"/>
                  <language>java</language>
                  <body>inAction = true;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh6rjyueEeyJjNOKZ7e9aA" name="exitAction" specification="_neSvwiueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh6rkCueEeyJjNOKZ7e9aA" name="ctx" type="_neRhoCueEeyJjNOKZ7e9aA"/>
                  <language>java</language>
                  <body>inAction = false;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh7SkCueEeyJjNOKZ7e9aA" name="exitFlowName" specification="_neT94SueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh7SkSueEeyJjNOKZ7e9aA" name="ctx" type="_neTW0yueEeyJjNOKZ7e9aA"/>
                  <language>java</language>
                  <body>if (inAction) {
             String flowName = ctx.getText(); // get the flow name
             instructionParameters.setFlow(flowName);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh7SkiueEeyJjNOKZ7e9aA" name="exitCmd" specification="_neUk8SueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh7SkyueEeyJjNOKZ7e9aA" name="ctx" type="_neT95iueEeyJjNOKZ7e9aA"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name
         instructionParameters.setName(command);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh7SlCueEeyJjNOKZ7e9aA" name="exitSrcNode" specification="_neVMBCueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh7SlSueEeyJjNOKZ7e9aA" name="ctx" type="_neVMAiueEeyJjNOKZ7e9aA"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name
         instructionParameters.setSrc(srcName);
         var command = instructionParameters.getName();
         if (command.equals(PUSH)) {
         	/* if push then coordinator is src 
         	 */
         	instructionParameters.setCoordinator(srcName);
         }else {
         	/* otherwise listener is src */
         	instructionParameters.setListener(srcName);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh7SliueEeyJjNOKZ7e9aA" name="exitSnkNode" specification="_neWaICueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh7SlyueEeyJjNOKZ7e9aA" name="ctx" type="_neVzEyueEeyJjNOKZ7e9aA"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name
         instructionParameters.setSnk(snkName);
         var command = instructionParameters.getName();
         if (command.equals(PUSH)) {
         	/* if push then listener is snk */
         	instructionParameters.setListener(snkName);
         }else {
         	/* otherwise coordinator is snk 
         	 */
         	instructionParameters.setCoordinator(snkName);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh7SmCueEeyJjNOKZ7e9aA" name="exitChannel" specification="_neXBMSueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nh7SmSueEeyJjNOKZ7e9aA" name="ctx" type="_neWaJSueEeyJjNOKZ7e9aA"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name
     	String channel; // resulting channel that will be extracted from the channel string
     	Integer index = channelString.indexOf('#');
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {
     		channel = channelString.substring(index+1); // get string starting at first channel number
     	} else {
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN
     	}	
         instructionParameters.setChannel(channel); 
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_nRebwCueEeyJjNOKZ7e9aA" name="ListenerDsl" visibility="package" method="_nh6riSueEeyJjNOKZ7e9aA">
                  <eAnnotations xmi:id="_nRebwSueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_nRebwiueEeyJjNOKZ7e9aA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_nRebwyueEeyJjNOKZ7e9aA" type="_nRd0sSueEeyJjNOKZ7e9aA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_nRebxCueEeyJjNOKZ7e9aA" name="getInstructionParameters" method="_nh6riyueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_nf7HcCueEeyJjNOKZ7e9aA" type="_nc5ooCueEeyJjNOKZ7e9aA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_neSIsSueEeyJjNOKZ7e9aA" name="enterAction" method="_nh6rjSueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_neSIsiueEeyJjNOKZ7e9aA" name="ctx" type="_neRhoCueEeyJjNOKZ7e9aA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_neSvwiueEeyJjNOKZ7e9aA" name="exitAction" method="_nh6rjyueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_neSvwyueEeyJjNOKZ7e9aA" name="ctx" type="_neRhoCueEeyJjNOKZ7e9aA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_neT94SueEeyJjNOKZ7e9aA" name="exitFlowName" method="_nh7SkCueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_neT94iueEeyJjNOKZ7e9aA" name="ctx" type="_neTW0yueEeyJjNOKZ7e9aA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_neUk8SueEeyJjNOKZ7e9aA" name="exitCmd" method="_nh7SkiueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_neUk8iueEeyJjNOKZ7e9aA" name="ctx" type="_neT95iueEeyJjNOKZ7e9aA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_neVMBCueEeyJjNOKZ7e9aA" name="exitSrcNode" method="_nh7SlCueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_neVMBSueEeyJjNOKZ7e9aA" name="ctx" type="_neVMAiueEeyJjNOKZ7e9aA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_neWaICueEeyJjNOKZ7e9aA" name="exitSnkNode" method="_nh7SliueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_neWaISueEeyJjNOKZ7e9aA" name="ctx" type="_neVzEyueEeyJjNOKZ7e9aA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_neXBMSueEeyJjNOKZ7e9aA" name="exitChannel" method="_nh7SmCueEeyJjNOKZ7e9aA">
                  <ownedParameter xmi:id="_neXBMiueEeyJjNOKZ7e9aA" name="ctx" type="_neWaJSueEeyJjNOKZ7e9aA"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nRkiYCueEeyJjNOKZ7e9aA" name="WarpPoset">
              <ownedComment xmi:id="_niUUIyueEeyJjNOKZ7e9aA">
                <body>ConnectivityPoset extends Poset by selecting
the base station in the flow as the primary 
coordinator

@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_neZdcCueEeyJjNOKZ7e9aA" general="_nPpPwCueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh75oCueEeyJjNOKZ7e9aA" name="WarpPoset" specification="_neY2YCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh75oSueEeyJjNOKZ7e9aA" name="workload" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh75oiueEeyJjNOKZ7e9aA" type="_nRkiYCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(workload);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh75oyueEeyJjNOKZ7e9aA" name="findCoordinator" specification="_nf7ugCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh75pCueEeyJjNOKZ7e9aA" name="nodesInFlow" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh75pSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();
		var baseName = baseStation.getName();
		var size = nodesInFlow.size();
		/* assume flow sink is the coordinator */
		Integer coordinatorIndex = size-1;

		if (baseName.equals(nodesInFlow.get(0).getName())) {
			/* flow src is coordinator, so update index */
			coordinatorIndex = 0;
		}
		return coordinatorIndex;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_neY2YCueEeyJjNOKZ7e9aA" name="WarpPoset" visibility="package" method="_nh75oCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_neY2YiueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_neY2YyueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_neY2YSueEeyJjNOKZ7e9aA" name="workload" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neY2ZCueEeyJjNOKZ7e9aA" type="_nRkiYCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nf7ugCueEeyJjNOKZ7e9aA" name="findCoordinator" visibility="protected" method="_nh75oyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nf8VkCueEeyJjNOKZ7e9aA" name="nodesInFlow" type="_nc5ooCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nf8VkSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nRlwgCueEeyJjNOKZ7e9aA" name="WarpSystem">
              <ownedComment xmi:id="_niUUJCueEeyJjNOKZ7e9aA">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ng5-4CueEeyJjNOKZ7e9aA" name="program" visibility="private" type="_nP8xwCueEeyJjNOKZ7e9aA" association="_ni-bdCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ng5-4iueEeyJjNOKZ7e9aA" name="workLoad" visibility="private" type="_nR2PMCueEeyJjNOKZ7e9aA" association="_ni_CgSueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ng5-5CueEeyJjNOKZ7e9aA" name="ra" visibility="private" type="_nQdIECueEeyJjNOKZ7e9aA" association="_ni_pkSueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ng6l8SueEeyJjNOKZ7e9aA" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng7NBCueEeyJjNOKZ7e9aA" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng7NBSueEeyJjNOKZ7e9aA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng70ECueEeyJjNOKZ7e9aA" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng70ESueEeyJjNOKZ7e9aA" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_neZdcSueEeyJjNOKZ7e9aA" client="_nRlwgCueEeyJjNOKZ7e9aA" supplier="_nRXuECueEeyJjNOKZ7e9aA" contract="_nRXuECueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh75qCueEeyJjNOKZ7e9aA" name="WarpSystem" specification="_nf88oiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh75qSueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh75qiueEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh75qyueEeyJjNOKZ7e9aA" name="choice" type="_nfozkCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh75rCueEeyJjNOKZ7e9aA" type="_nRlwgCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;
		this.numChannels = numChannels;
		createProgram(workLoad, numChannels, choice);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh8gsCueEeyJjNOKZ7e9aA" name="toWorkload" specification="_nRmXkCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh8gsSueEeyJjNOKZ7e9aA" type="_nR2PMCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return workLoad;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh8gsiueEeyJjNOKZ7e9aA" name="toProgram" specification="_nRm-oyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh8gsyueEeyJjNOKZ7e9aA" type="_nP8xwCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return program;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh8gtCueEeyJjNOKZ7e9aA" name="toReliabilityAnalysis" specification="_nRnlsiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh8gtSueEeyJjNOKZ7e9aA" type="_nQdIECueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);
		return ra;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh8gtiueEeyJjNOKZ7e9aA" name="toSimulator" specification="_nRoMwiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh8gtyueEeyJjNOKZ7e9aA" type="_nQ9eYSueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return null;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh8guCueEeyJjNOKZ7e9aA" name="reliabilitiesMet" specification="_nRoMxiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh8guSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {
			ra = new ReliabilityAnalysis(program);
		} 
		return ra.verifyReliabilities();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh8guiueEeyJjNOKZ7e9aA" name="deadlinesMet" specification="_nRoz1CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh8guyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;
		if (program.deadlineMisses().size() > 0) {
			result = false;
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh8gvCueEeyJjNOKZ7e9aA" name="createProgram" specification="_nf9jsyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh8gvSueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh8gviueEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh8gvyueEeyJjNOKZ7e9aA" name="choice" type="_nfozkCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh8gwCueEeyJjNOKZ7e9aA" name="getNumFaults" specification="_nRpa5CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh8gwSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh8gwiueEeyJjNOKZ7e9aA" name="getMinPacketReceptionRate" specification="_nRqB9CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh8gwyueEeyJjNOKZ7e9aA" type="_nfrP0iueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh9HwCueEeyJjNOKZ7e9aA" name="getE2e" specification="_nRqpAiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh9HwSueEeyJjNOKZ7e9aA" type="_nfrP0iueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh9HwiueEeyJjNOKZ7e9aA" name="getName" specification="_nRrQECueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh9HwyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh9HxCueEeyJjNOKZ7e9aA" name="getSchedulerName" specification="_nRrQFSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh9HxSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh9HxiueEeyJjNOKZ7e9aA" name="getNumTransmissions" specification="_nRr3JCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh9HxyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh9HyCueEeyJjNOKZ7e9aA" name="getOptimizationFlag" specification="_nRseMiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh9HySueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nRmXkCueEeyJjNOKZ7e9aA" name="toWorkload" method="_nh8gsCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neaEgCueEeyJjNOKZ7e9aA" type="_nR2PMCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nRm-oyueEeyJjNOKZ7e9aA" name="toProgram" method="_nh8gsiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neaEgSueEeyJjNOKZ7e9aA" type="_nP8xwCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nRnlsiueEeyJjNOKZ7e9aA" name="toReliabilityAnalysis" method="_nh8gtCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neaEgiueEeyJjNOKZ7e9aA" type="_nQdIECueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nRoMwiueEeyJjNOKZ7e9aA" name="toSimulator" method="_nh8gtiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neaEgyueEeyJjNOKZ7e9aA" type="_nQ9eYSueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nRoMxiueEeyJjNOKZ7e9aA" name="reliabilitiesMet" method="_nh8guCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nRoz0CueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nRoz1CueEeyJjNOKZ7e9aA" name="deadlinesMet" method="_nh8guiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nRpa4CueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nRpa5CueEeyJjNOKZ7e9aA" name="getNumFaults" method="_nh8gwCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nRqB8CueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nRqB9CueEeyJjNOKZ7e9aA" name="getMinPacketReceptionRate" method="_nh8gwiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nf9jtyueEeyJjNOKZ7e9aA" type="_nfrP0iueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nRqpAiueEeyJjNOKZ7e9aA" name="getE2e" method="_nh9HwCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nf-KwCueEeyJjNOKZ7e9aA" type="_nfrP0iueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nRrQECueEeyJjNOKZ7e9aA" name="getName" method="_nh9HwiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nRrQESueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nRrQFSueEeyJjNOKZ7e9aA" name="getSchedulerName" method="_nh9HxCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nRr3ICueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nRr3JCueEeyJjNOKZ7e9aA" name="getNumTransmissions" method="_nh9HxiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nRr3JSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nRseMiueEeyJjNOKZ7e9aA" name="getOptimizationFlag" method="_nh9HyCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nRseMyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nRtFQCueEeyJjNOKZ7e9aA" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_nf88oiueEeyJjNOKZ7e9aA" name="WarpSystem" method="_nh75qCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nf9jsCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nf9jsSueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nf88oyueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nf88pCueEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nf88pSueEeyJjNOKZ7e9aA" name="choice" type="_nfozkCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nf9jsiueEeyJjNOKZ7e9aA" type="_nRlwgCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nf9jsyueEeyJjNOKZ7e9aA" name="createProgram" visibility="private" method="_nh8gvCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nf9jtCueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nf9jtSueEeyJjNOKZ7e9aA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nf9jtiueEeyJjNOKZ7e9aA" name="choice" type="_nfozkCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nRvhgCueEeyJjNOKZ7e9aA" name="WarpTester">
              <ownedComment xmi:id="_niUUJSueEeyJjNOKZ7e9aA">
                <body>Represents a WarpTester which tests WARP using different system and scheduler choices and visualizes
the work load along with outputting different specified files to show if WARP is working correctly according to
constraints
@author sgoddard
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ng8bICueEeyJjNOKZ7e9aA" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng8bISueEeyJjNOKZ7e9aA" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng8bIiueEeyJjNOKZ7e9aA" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_nfrP0iueEeyJjNOKZ7e9aA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng8bIyueEeyJjNOKZ7e9aA" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng8bJCueEeyJjNOKZ7e9aA" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_nfrP0iueEeyJjNOKZ7e9aA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng8bJSueEeyJjNOKZ7e9aA" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng8bJiueEeyJjNOKZ7e9aA" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng8bJyueEeyJjNOKZ7e9aA" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng8bKCueEeyJjNOKZ7e9aA" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_nRAhsCueEeyJjNOKZ7e9aA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng9CMCueEeyJjNOKZ7e9aA" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng9CMSueEeyJjNOKZ7e9aA" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng9CMiueEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng9CMyueEeyJjNOKZ7e9aA" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng9CNSueEeyJjNOKZ7e9aA" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng9CNyueEeyJjNOKZ7e9aA" name="minLQ" visibility="private" isStatic="true" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ng9pQSueEeyJjNOKZ7e9aA" name="e2e" visibility="private" isStatic="true" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_ng9pQyueEeyJjNOKZ7e9aA" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng9pRSueEeyJjNOKZ7e9aA" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng-QUSueEeyJjNOKZ7e9aA" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng-QUyueEeyJjNOKZ7e9aA" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng-QVSueEeyJjNOKZ7e9aA" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng-3YSueEeyJjNOKZ7e9aA" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng-3YyueEeyJjNOKZ7e9aA" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng-3ZSueEeyJjNOKZ7e9aA" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ng-3ZiueEeyJjNOKZ7e9aA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng_ecCueEeyJjNOKZ7e9aA" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng_eciueEeyJjNOKZ7e9aA" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ng_edCueEeyJjNOKZ7e9aA" name="schedulerSelected" visibility="private" isStatic="true" type="_nRAhsCueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh9HyiueEeyJjNOKZ7e9aA" name="main" specification="_nRxWsCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh9HyyueEeyJjNOKZ7e9aA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nh9HzCueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters
		setWarpParameters(args);
		
		// and print out the values if in verbose mode
		if (verboseMode) {
			printWarpParameters();
		}
		
		// Create and visualize the workload
		// inputFile string, which may be null, 
		WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile); 
		if (allRequested) {
			for (WorkLoadChoices choice : WorkLoadChoices.values()) {
				visualize(workLoad, choice); // visualize all Program choices
			}
			// Create and visualize the Warp System
			if (schedulerRequested) {
				Warp warp = SystemFactory.create(workLoad,nChannels,schedulerSelected);
				verifyPerformanceRequirements(warp);
				for (SystemChoices choice : SystemChoices.values()) {
					visualize(warp, choice); // visualize all System choices
				}
			} else { // create a system for all scheduler choices
				for (ScheduleChoices sch: ScheduleChoices.values()) {
					schedulerSelected = sch;
					Warp warp = SystemFactory.create(workLoad,nChannels,schedulerSelected);
					verifyPerformanceRequirements(warp);
					for (SystemChoices choice : SystemChoices.values()) {
						visualize(warp, choice);  // visualize all System choices
					}
				}
			}
		} else { // visualize warp workload, source program and other requested items
			visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);
			if (wfRequested) {
				visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);
			}
			if (gvRequested) {
				visualize(workLoad, WorkLoadChoices.GRAPHVIZ);
			}
			Warp warp = SystemFactory.create(workLoad,nChannels,schedulerSelected);
			verifyPerformanceRequirements(warp);
			visualize(warp, SystemChoices.SOURCE);
			if (latencyRequested) {
				visualize(warp, SystemChoices.LATENCY_REPORT);
			}
			if (raRequested) {
				visualize(warp, SystemChoices.RELIABILITIES);
			}			
		}
			
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh9u0CueEeyJjNOKZ7e9aA" name="visualize" specification="_neeV8CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh9u0SueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh9u0iueEeyJjNOKZ7e9aA" name="choice" type="_nRIdgyueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createWorkLoadVisualization(workLoad, 
				outputSubDirectory, choice);
		if (viz != null) {
			if (verboseMode) {
				viz.toDisplay();
			}
			viz.toFile();
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh9u0yueEeyJjNOKZ7e9aA" name="visualize" specification="_neeV8yueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh9u1CueEeyJjNOKZ7e9aA" name="warp" type="_nRXuECueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh9u1SueEeyJjNOKZ7e9aA" name="choice" type="_nRH2cCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, 
				outputSubDirectory, choice);
		if (viz != null) {
			viz.toFile();
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh9u1iueEeyJjNOKZ7e9aA" name="verifyPerformanceRequirements" specification="_nee9ACueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh9u1yueEeyJjNOKZ7e9aA" name="warp" type="_nRXuECueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>verifyDeadlines(warp);
		verifyReliabilities(warp);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh9u2CueEeyJjNOKZ7e9aA" name="verifyReliabilities" specification="_nee9AiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh9u2SueEeyJjNOKZ7e9aA" name="warp" type="_nRXuECueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART ) {
			/* RealTime HART doesn't adhere to reliability targets */	
			if (!warp.reliabilitiesMet()) {
				System.err.printf(&quot;\n\tERROR: Not all flows meet the end-to-end &quot;
						+ &quot;reliability of %s under %s scheduling.\n&quot;,
						String.valueOf(e2e), schedulerSelected.toString());
			} else if (verboseMode) {
				System.out.printf(&quot;\n\tAll flows meet the end-to-end reliability &quot;
						+ &quot;of %s under %s scheduling.\n&quot;,
						String.valueOf(e2e), schedulerSelected.toString());
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh9u2iueEeyJjNOKZ7e9aA" name="verifyDeadlines" specification="_nee9BCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh9u2yueEeyJjNOKZ7e9aA" name="warp" type="_nRXuECueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {
			System.err.printf(
					&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;, 
					schedulerSelected.toString());
			visualize(warp, SystemChoices.DEADLINE_REPORT);
		} else if (verboseMode) {
			System.out.printf(
					&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;, 
					schedulerSelected.toString());
		} 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh9u3CueEeyJjNOKZ7e9aA" name="setWarpParameters" specification="_nRx9wSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh9u3SueEeyJjNOKZ7e9aA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nh9u3iueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this function--need to set up globals?
		
		// create holder objects for storing results ...
	    // BooleanHolder debug = new BooleanHolder();
		StringHolder schedulerSelected = new StringHolder();
		IntHolder channels = new IntHolder();
		IntHolder faults = new IntHolder();
		DoubleHolder m = new DoubleHolder();
		DoubleHolder end2end = new DoubleHolder();
		BooleanHolder gv = new BooleanHolder();
		BooleanHolder wf = new BooleanHolder();
		BooleanHolder ra = new BooleanHolder();
		BooleanHolder s = new BooleanHolder();
		BooleanHolder all = new BooleanHolder();
		BooleanHolder latency = new BooleanHolder();
		BooleanHolder verbose = new BooleanHolder();
		StringHolder input = new StringHolder();
		StringHolder output = new StringHolder();
 
		// create the parser and specify the allowed options ...
		ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);
	    parser.addOption (&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;, schedulerSelected);
	    parser.addOption (&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);
	    parser.addOption (&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);
	    parser.addOption (&quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;, end2end);
	    parser.addOption (&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;, faults);
	    parser.addOption (&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);
	    parser.addOption (&quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;, wf);
	    parser.addOption (&quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;, ra);
	    parser.addOption (&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);
	    parser.addOption (&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);
	    parser.addOption (&quot;-l, --latency  %v #prints end-to-end latency for each flow instance&quot;, latency);
	    parser.addOption (&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);
	    parser.addOption (&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;, output);
	    parser.addOption (&quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;, verbose);
	    
		
 
		// match the arguments ...
		parser.matchAllArgs (args);
		
		// Set WARP system configuration options
		if (channels.value > 0) {
			nChannels = channels.value; // set option specified
		} else {
			nChannels = NUM_CHANNELS; // set to default
		}
		if (faults.value > 0) { // global variable for # of Faults tolerated per edge 
			numFaults = faults.value; // set option specified
		} else {
			numFaults = DEFAULT_FAULTS_TOLERATED; // set to default
		}
		if (m.value > 0.0) { // global variable for minimum Link Quality in system 
			minLQ = m.value; // set option specified
		} else {
			minLQ = MIN_LQ; // set to default
		}
		if (end2end.value > 0.0) { // global variable for minimum Link Quality in system
			e2e = end2end.value; // set option specified
		} else {
			e2e = E2E; // set to default
		}		
		if (output.value != null) { // default output subdirectory (from working directory)
			outputSubDirectory = output.value; // set option specified
		} else {
			outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default
		}

		gvRequested = gv.value; // GraphVis file requested flag
		wfRequested = wf.value; // WARP file requested flag
		raRequested = ra.value; // Reliability Analysis file requested flag
		simRequested = s.value; // Simulation file requested flag
		allRequested = all.value; // all out files requested flag
		latencyRequested = latency.value; // latency report requested flag
		verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)
		inputFile = input.value; // input file specified
		if (schedulerSelected.value != null) {  // can't switch on a null value so check then switch
			schedulerRequested = true;
			switch (schedulerSelected.value) {
		        case &quot;priority&quot;:
		        	WarpTester.schedulerSelected = ScheduleChoices.PRIORITY;
		            break;
		                
		        case &quot;rm&quot;:
		        	WarpTester.schedulerSelected = ScheduleChoices.RM;
		            break;
		                 
		        case &quot;dm&quot;:
		        	WarpTester.schedulerSelected = ScheduleChoices.DM;
		            break;
		            
		        case &quot;rtHart&quot;:
		        	WarpTester.schedulerSelected = ScheduleChoices.RTHART;
		            break;
		                    
		        case &quot;poset&quot;:
		        	WarpTester.schedulerSelected = ScheduleChoices.POSET_PRIORITY;
		            break;
		            
		        default:
		        	WarpTester.schedulerSelected = ScheduleChoices.PRIORITY;
		            break;
			}
		} else { // null value when no scheduler specified; so use default
			WarpTester.schedulerSelected = DEFAULT_SCHEDULER;
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh9u3yueEeyJjNOKZ7e9aA" name="printWarpParameters" specification="_nRyk0SueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>// Print out each of the system configuration values
		System.out.println (&quot;WARP system configuration values:&quot;);
		System.out.println (&quot;\tScheduler=&quot; + schedulerSelected);
		System.out.println (&quot;\tnChanels=&quot; + nChannels);
		System.out.println (&quot;\tnumFaults=&quot; + numFaults);
		System.out.println (&quot;\tminLQ=&quot; + minLQ);
		System.out.println (&quot;\tE2E=&quot; + e2e);
		System.out.println (&quot;\tgvRequest flag=&quot; + gvRequested);
		System.out.println (&quot;\twfRequest flag=&quot; + wfRequested);
		System.out.println (&quot;\traRequest flag=&quot; + raRequested);
		System.out.println (&quot;\tsimRequest flag=&quot; + simRequested);
		System.out.println (&quot;\tallOutFilesRequest flag=&quot; + allRequested);
		System.out.println (&quot;\tlatency flag=&quot; + latencyRequested);
		if (inputFile != null) {
			System.out.println (&quot;\tinput file=&quot; + inputFile);
		} else {
			System.out.println (&quot;\tNo input file specified; will be requested when needed.&quot;);
		}
		System.out.println (&quot;\toutputSubDirectory=&quot; + outputSubDirectory);
		System.out.println (&quot;\tverbose flag=&quot; + verboseMode);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nRxWsCueEeyJjNOKZ7e9aA" name="main" isStatic="true" method="_nh9HyiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niUUJiueEeyJjNOKZ7e9aA">
                  <body>Visualizes workload according to type of file requested, system choices and scheduler choices
	 * along with outputting other requested files to show data about the WARP program
	 * @param args Command line options</body>
                </ownedComment>
                <ownedParameter xmi:id="_nRxWsSueEeyJjNOKZ7e9aA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nRxWsiueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nRx9wSueEeyJjNOKZ7e9aA" name="setWarpParameters" visibility="private" isStatic="true" method="_nh9u3CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nRx9wiueEeyJjNOKZ7e9aA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nRyk0CueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nRyk0SueEeyJjNOKZ7e9aA" name="printWarpParameters" visibility="private" isStatic="true" method="_nh9u3yueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_neeV8CueEeyJjNOKZ7e9aA" name="visualize" visibility="private" isStatic="true" method="_nh9u0CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neeV8SueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neeV8iueEeyJjNOKZ7e9aA" name="choice" type="_nRIdgyueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_neeV8yueEeyJjNOKZ7e9aA" name="visualize" visibility="private" isStatic="true" method="_nh9u0yueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neeV9CueEeyJjNOKZ7e9aA" name="warp" type="_nRXuECueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neeV9SueEeyJjNOKZ7e9aA" name="choice" type="_nRH2cCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nee9ACueEeyJjNOKZ7e9aA" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_nh9u1iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nee9ASueEeyJjNOKZ7e9aA" name="warp" type="_nRXuECueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nee9AiueEeyJjNOKZ7e9aA" name="verifyReliabilities" visibility="private" isStatic="true" method="_nh9u2CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nee9AyueEeyJjNOKZ7e9aA" name="warp" type="_nRXuECueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nee9BCueEeyJjNOKZ7e9aA" name="verifyDeadlines" visibility="private" isStatic="true" method="_nh9u2iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nee9BSueEeyJjNOKZ7e9aA" name="warp" type="_nRXuECueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nR2PMCueEeyJjNOKZ7e9aA" name="WorkLoad">
              <ownedComment xmi:id="_niU7MCueEeyJjNOKZ7e9aA">
                <body>WorkLoad creates an object, given an input file, containing information that will be
used to measure the graphs efficiency.

@author sgoddard
 *</body>
              </ownedComment>
              <generalization xmi:id="_nelqsyueEeyJjNOKZ7e9aA" general="_nSK_UCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_nhAFgSueEeyJjNOKZ7e9aA" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nhAFgiueEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhAFgyueEeyJjNOKZ7e9aA" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nhAskCueEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhAskSueEeyJjNOKZ7e9aA" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nhAskiueEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhAskyueEeyJjNOKZ7e9aA" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nhAslCueEeyJjNOKZ7e9aA" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhAslSueEeyJjNOKZ7e9aA" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nhAsliueEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhAslyueEeyJjNOKZ7e9aA" name="minPacketReceptionRate" type="_nfrP0iueEeyJjNOKZ7e9aA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nhAsmCueEeyJjNOKZ7e9aA" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhAsmSueEeyJjNOKZ7e9aA" name="e2e" visibility="private" type="_nfrP0iueEeyJjNOKZ7e9aA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nhBToCueEeyJjNOKZ7e9aA" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhBToiueEeyJjNOKZ7e9aA" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nhBToyueEeyJjNOKZ7e9aA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhBTpCueEeyJjNOKZ7e9aA" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nhBTpSueEeyJjNOKZ7e9aA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhB6sSueEeyJjNOKZ7e9aA" name="flows" type="_nPMj0CueEeyJjNOKZ7e9aA" association="_niU7MSueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_nhB6siueEeyJjNOKZ7e9aA" name="nodes" type="_nPjJICueEeyJjNOKZ7e9aA" association="_niU7MyueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_nhB6syueEeyJjNOKZ7e9aA" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhB6tSueEeyJjNOKZ7e9aA" name="flowNamesInOriginalOrder" type="_nc5ooCueEeyJjNOKZ7e9aA" association="_ni_plCueEeyJjNOKZ7e9aA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nhChwSueEeyJjNOKZ7e9aA" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhChwiueEeyJjNOKZ7e9aA" name="flowNamesInPriorityOrder" type="_nc5ooCueEeyJjNOKZ7e9aA" association="_njAQoSueEeyJjNOKZ7e9aA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nhDI0CueEeyJjNOKZ7e9aA" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_nejOcSueEeyJjNOKZ7e9aA" client="_nR2PMCueEeyJjNOKZ7e9aA" supplier="_nQeWMCueEeyJjNOKZ7e9aA" contract="_nQeWMCueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh-V4CueEeyJjNOKZ7e9aA" name="WorkLoad" specification="_ngBOECueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh-V4SueEeyJjNOKZ7e9aA" name="m" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh-V4iueEeyJjNOKZ7e9aA" name="e2e" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh-V4yueEeyJjNOKZ7e9aA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh-V5CueEeyJjNOKZ7e9aA" type="_nR2PMCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);
 setDefaultParameters();
 minPacketReceptionRate = m; // use file manager passed to this object
 this.e2e = e2e; // use populate this flows object as the input file is read
 /*
  * Read input file, build the AST of graph and the listener will build the node and flow data
  * objects
  */
 WorkLoadListener.buildNodesAndFlows(this);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh-V5SueEeyJjNOKZ7e9aA" name="WorkLoad" specification="_ngB1ICueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh-V5iueEeyJjNOKZ7e9aA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh-V5yueEeyJjNOKZ7e9aA" name="m" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh-V6CueEeyJjNOKZ7e9aA" name="e2e" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nh-V6SueEeyJjNOKZ7e9aA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh-V6iueEeyJjNOKZ7e9aA" type="_nR2PMCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);
 setDefaultParameters();
 this.numFaults = numFaults;
 minPacketReceptionRate = m; // use file manager passed to this object
 this.e2e = e2e; // use populate this flows object as the input file is read
 /*
  * Read input file, build the AST of graph and the listener will build the node and flow data
  * objects
  */
 WorkLoadListener.buildNodesAndFlows(this);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh-V6yueEeyJjNOKZ7e9aA" name="setDefaultParameters" specification="_nR4rcCueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names
 intForFlowNames = true; // default is that node names are all alpha names
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their
                                               // order
 flowNamesInPriorityOrder = new ArrayList&lt;>();
 numFaults = DEFAULT_TX_NUM;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh-V7CueEeyJjNOKZ7e9aA" name="getE2e" specification="_nR4rcSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh-V7SueEeyJjNOKZ7e9aA" type="_nfrP0iueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return e2e;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh-V7iueEeyJjNOKZ7e9aA" name="getIntForFlowNames" specification="_nR4rciueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh-V7yueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh-V8CueEeyJjNOKZ7e9aA" name="getName" specification="_nR5SgCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh-V8SueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh-V8iueEeyJjNOKZ7e9aA" name="setMinPacketReceptionRate" specification="_ngCcMCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh-V8yueEeyJjNOKZ7e9aA" name="minPacketReceptionRate" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh-V9CueEeyJjNOKZ7e9aA" name="getMaxPhase" specification="_nR5SgiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh-V9SueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());
 return queue.poll().getPhase();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh-V9iueEeyJjNOKZ7e9aA" name="getMinPeriod" specification="_nR5ShCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh-V9yueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());
 return queue.poll().getPeriod();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh-88CueEeyJjNOKZ7e9aA" name="setE2e" specification="_ngCcMiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh-88SueEeyJjNOKZ7e9aA" name="e2e" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>this.e2e = e2e;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh-88iueEeyJjNOKZ7e9aA" name="setIntForFlowNames" specification="_nR55kSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh-88yueEeyJjNOKZ7e9aA" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh-89CueEeyJjNOKZ7e9aA" name="setName" specification="_nR55kyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh-89SueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh-89iueEeyJjNOKZ7e9aA" name="setNodeChannel" specification="_nR6goCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh-89yueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh-8-CueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object
 node.setChannel(channel);
 nodes.put(name, node); // update the nodes map with the updated object
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh-8-SueEeyJjNOKZ7e9aA" name="getNodeChannel" specification="_nR6goyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh-8-iueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh-8-yueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object
 return node.getChannel();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh-8_CueEeyJjNOKZ7e9aA" name="addFlow" specification="_nR7HsCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh-8_SueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (flows.containsKey(flowName)) {
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;
       + &quot;It has been replaced with a new flow\n.&quot;);
 }
 var index = flows.size();
 var flowNode = new Flow(flowName, index, index);
 flows.put(flowName, flowNode);
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we
                            // only set it once
 }
 flowNamesInOriginalOrder.add(flowName);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh-8_iueEeyJjNOKZ7e9aA" name="isIntForNodeNames" specification="_nR7HsiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh-8_yueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints
 return intForNodeNames;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh-9ACueEeyJjNOKZ7e9aA" name="isIntForFlowNames" specification="_nR7HtCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh-9ASueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints
 return intForFlowNames;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh-9AiueEeyJjNOKZ7e9aA" name="addNodeToFlow" specification="_nR7uwCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh-9AyueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh-9BCueEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */
   intForNodeNames = false;
 }
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have
                                     // this node already.
   /* If the node already exists, just need to add to the flow */
   var index = nodes.size(); // nodeIndex will be the order added
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node
   nodes.put(nodeName, graphNode); // add it to the map of nodes
 }
 /*
  * Node is now created and in the nodes map Next we need to get the current flow and add this
  * node to that flow by appending it to the node array for that flow
  */
 var flowNode = getFlow(flowName);
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);
 /* the priority is the node's index in the flow, which is the current array size */
 flowNode.addNode(graphNode);
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh_kACueEeyJjNOKZ7e9aA" name="getFlowPriority" specification="_nR7uwyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh_kASueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh_kAiueEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh_kAyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;
 var flow = getFlow(flowName);
 Iterator&lt;Node> nodes = flow.nodes.iterator();
 while (nodes.hasNext()) {
   var node = nodes.next();
   if (node.getName() == nodeName) {
     priority = node.getPriority(); // found the src node, set its index
     break;
   }
 }
 return priority;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh_kBCueEeyJjNOKZ7e9aA" name="setFlowPriority" specification="_nR8V0CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh_kBSueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh_kBiueEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);
 flowNode.setPriority(priority);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh_kByueEeyJjNOKZ7e9aA" name="setFlowPeriod" specification="_nR8V0yueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh_kCCueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh_kCSueEeyJjNOKZ7e9aA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);
 flowNode.setPeriod(period);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh_kCiueEeyJjNOKZ7e9aA" name="setFlowDeadline" specification="_nR884SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh_kCyueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh_kDCueEeyJjNOKZ7e9aA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);
 flowNode.setDeadline(deadline);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh_kDSueEeyJjNOKZ7e9aA" name="setFlowPhase" specification="_nR885CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh_kDiueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh_kDyueEeyJjNOKZ7e9aA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);
 flowNode.setPhase(phase);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh_kECueEeyJjNOKZ7e9aA" name="getFlowIndex" specification="_nR9j8iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh_kESueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh_kEiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);
 return flowNode.index;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh_kEyueEeyJjNOKZ7e9aA" name="getFlowPriority" specification="_nR9j9SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh_kFCueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh_kFSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);
 return flowNode.getPriority();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh_kFiueEeyJjNOKZ7e9aA" name="getFlowPeriod" specification="_nR-LAiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh_kFyueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh_kGCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);
 return flowNode.getPeriod();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nh_kGSueEeyJjNOKZ7e9aA" name="getFlowDeadline" specification="_nR-LBSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nh_kGiueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nh_kGyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);
 return flowNode.getDeadline();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niALECueEeyJjNOKZ7e9aA" name="getFlowPhase" specification="_nR-yEiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niALESueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niALEiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);
 return flowNode.getPhase();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niALEyueEeyJjNOKZ7e9aA" name="getFlowTxPerLink" specification="_nR_ZICueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niALFCueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niALFSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);
 return flowNode.numTxPerLink;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niALFiueEeyJjNOKZ7e9aA" name="setFlowsInPriorityOrder" specification="_nR_ZIyueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());
 // Now sort by a secondary key, which is index in this case
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))
     .collect(Collectors.toList());
 // Now sort by primary key, which is priority in this case
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))
     .collect(Collectors.toList());
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested
 // order
 flowNamesInPriorityOrder = new ArrayList&lt;>();
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niALFyueEeyJjNOKZ7e9aA" name="setFlowsInDMorder" specification="_nR_ZJCueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());
 /* Now sort by a secondary key, which is priority in this case */
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());
 /* Now sort by primary key, which is deadline in this case */
 List&lt;Flow> sortedFlows = sortedByPriority.stream()
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());
 /*
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested
  * order
  */
 flowNamesInPriorityOrder = new ArrayList&lt;>();
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niALGCueEeyJjNOKZ7e9aA" name="setFlowsInRMorder" specification="_nR_ZJSueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());
 // Now sort by a secondary key, which is priority in this case
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());
 // Now sort by primary key, which is period in this case
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))
     .collect(Collectors.toList());
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested
 // order
 flowNamesInPriorityOrder = new ArrayList&lt;>();
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niALGSueEeyJjNOKZ7e9aA" name="setFlowsInRealTimeHARTorder" specification="_nSAAMCueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niALGiueEeyJjNOKZ7e9aA" name="finalizeCurrentFlow" specification="_nSAAMSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niALGyueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {
   finalizeFlowWithFixedFaultTolerance(flowName);
 } else {
   finalizeFlowWithE2eParameters(flowName);
 }
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niALHCueEeyJjNOKZ7e9aA" name="finalizeFlowWithE2eParameters" specification="_nSAAMyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niALHSueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);
 var m = minPacketReceptionRate; // shorten the name :-)
 if (flowNode != null) {
   var nodes = flowNode.nodes;
   int nHops = nodes.size();
   if (nHops &lt; 1) {
     /*
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was
      * -1 at end
      */
     nHops = 2;
   }
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum
                     // and when m == 1.0
   if (m &lt; 1.0) {
     /*
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #
      * txs per hop
      */
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);
   }
   /* set numTxPerLink based on M, E2E, and flow length */
   flowNode.numTxPerLink = (int) Math.ceil(nTx);
   /* Now compute nTx per link to reach E2E requirement. */
   ArrayList&lt;Integer> linkTxAndTotalCost = nTxPerLinkAndTotalTxCost(flowNode, e2e, m, true);
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;
   flows.put(flowName, flowNode); // update flow node in Flows array
 } else { // should never happen...
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);
 }
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niALHiueEeyJjNOKZ7e9aA" name="finalizeFlowWithFixedFaultTolerance" specification="_nSAnQCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niALHyueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);
 if (flowNode != null) {
   /* set numTxPerLink based on M, E2E, and flow length */
   flowNode.numTxPerLink = numFaults + 1;
   /* Now compute nTx per link to reach E2E requirement. */
   ArrayList&lt;Integer> linkTxAndTotalCost = getFixedTxPerLinkAndTotalTxCost(flowNode);
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;
   flows.put(flowName, flowNode); // update flow node in Flows array
 } else { // should never happen...
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);
 }
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niAyICueEeyJjNOKZ7e9aA" name="getFixedTxPerLinkAndTotalTxCost" specification="_nekckCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niAyISueEeyJjNOKZ7e9aA" name="flow" type="_nPCLwCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niAyIiueEeyJjNOKZ7e9aA" type="_nc5ooCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;
 var nNodesInFlow = nodesInFlow.size();
 ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();
 /*
  * Each node will have at most numFaults+1 transmissions. Because we don't know which nodes will
  * send the message over an edge, we give the cost to each node.
  */
 for (int i = 0; i &lt; nNodesInFlow; i++) {
   txArrayList.add(numFaults + 1);
 }
 /*
  * now compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and
  * each edge requires at least one successful TX.
  */
 var numEdgesInFlow = nNodesInFlow - 1;
 var maxFaultsInFlow = numEdgesInFlow * numFaults;
 txArrayList.add(numEdgesInFlow + maxFaultsInFlow);
 return txArrayList;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niAyIyueEeyJjNOKZ7e9aA" name="nTxPerLinkAndTotalTxCost" specification="_ngDDQCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niAyJCueEeyJjNOKZ7e9aA" name="flow" type="_nPCLwCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niAyJSueEeyJjNOKZ7e9aA" name="e2e" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niAyJiueEeyJjNOKZ7e9aA" name="M" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niAyJyueEeyJjNOKZ7e9aA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niAyKCueEeyJjNOKZ7e9aA" type="_nc5ooCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;
 var nNodesInFlow = nodesInFlow.size(); // The last entry will contain the worst-case cost of
                                        // transmitting E2E in isolation
 // var nPushes = Array(repeating: 0, count: nNodesInFlow+1);
 var nPushes = new Integer[nNodesInFlow + 1]; // Array to track nPushes for each node in this
                                              // flow (same as nTx per link)
 Arrays.fill(nPushes, 0); // initialize to all 0 values
 var nHops = nNodesInFlow - 1;
 // minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E
 // reliability for the flow
 Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); // use max
                                                                                       // to
                                                                                       // handle
                                                                                       // rounding
                                                                                       // error
                                                                                       // when
                                                                                       // e2e ==
                                                                                       // 1.0
 // Now compute reliability of packet reaching each node in the given time slot
 // Start with a 2-D reliability window that is a 2-D matrix of no size
 // each row is a time slot, stating at time 0
 // each column represents the reliability of the packet reaching that node at the
 // current time slot (i.e., the row it is in)
 // will add rows as we compute reliabilities until the final reliability is reached
 // for all nodes.
 var reliabilityWindow = new Vector&lt;Vector&lt;Double>>();
 var newReliabilityRow = new Vector&lt;Double>();
 for (int i = 0; i &lt; nNodesInFlow; i++) {
   newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values
 }
 reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0
 Vector&lt;Double> tmpVector = reliabilityWindow.get(0);
 var currentReliabilityRow = tmpVector.toArray(new Double[tmpVector.size()]);
 // Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1
 // So, we initialize this first entry to 1.0, wich is reliabilityWindow[0][0]
 // We will then update this row with computed values for each node and put it
 // back in the matrix
 currentReliabilityRow[0] = 1.0; // initialize (i.e., P(packet@FlowSrc) = 1
 Double e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1]; // the analysis will end
                                                                       // when the 2e2
                                                                       // reliability metrix is
                                                                       // met, initially the
                                                                       // state is not met and
                                                                       // will be 0 with this
                                                                       // statement
 var timeSlot = 0; // start time at 0
 while (e2eReliabilityState &lt; e2e) { // change to while and increment increment timeSlot because
                                     // we don't know how long this schedule window will last
   var prevReliabilityRow = currentReliabilityRow;
   currentReliabilityRow = newReliabilityRow.toArray(new Double[newReliabilityRow.size()]); // would
                                                                                            // be
                                                                                            // reliabilityWindow[timeSlot]
                                                                                            // if
                                                                                            // working
                                                                                            // through
                                                                                            // a
                                                                                            // schedule
   // Now use each flow:src->sink to update reliability computations
   // this is the update formula for the state probabilities
   // nextState = (1 - M) * prevState + M*NextHighestFlowState
   // use MinLQ for M in above equation

   for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) { // loop through each
                                                                          // node in the flow and
                                                                          // update the sates for
                                                                          // each link (i.e.,
                                                                          // sink->src pair)
     var flowSrcNodeindex = nodeIndex;
     var flowSnkNodeindex = nodeIndex + 1;
     var prevSrcNodeState = prevReliabilityRow[flowSrcNodeindex];
     var prevSnkNodeState = prevReliabilityRow[flowSnkNodeindex];
     Double nextSnkState;
     if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) { // do a push
                                                                                // until PrevSnk
                                                                                // state > e2e to
                                                                                // ensure next
                                                                                // node reaches
                                                                                // target E2E BUT
                                                                                // skip if no
                                                                                // chance of
                                                                                // success (i.e.,
                                                                                // source doesn't
                                                                                // have packet)
       nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState); // need to
                                                                               // continue
                                                                               // attempting to
                                                                               // Tx, so update
                                                                               // current state
       nPushes[nodeIndex] += 1; // increment the number of pushes for for this node to snk node
     } else {
       nextSnkState = prevSnkNodeState; // snkNode has met its reliability. Thus move on to the
                                        // next node and record the reliability met
     }

     if (currentReliabilityRow[flowSrcNodeindex] &lt; prevReliabilityRow[flowSrcNodeindex]) { // probabilities
                                                                                           // are
                                                                                           // non-decreasing
                                                                                           // so
                                                                                           // update
                                                                                           // if
                                                                                           // we
                                                                                           // were
                                                                                           // higher
                                                                                           // by
                                                                                           // carring
                                                                                           // old
                                                                                           // value
                                                                                           // forward
       currentReliabilityRow[flowSrcNodeindex] = prevReliabilityRow[flowSrcNodeindex]; // carry
                                                                                       // forward
                                                                                       // the
                                                                                       // previous
                                                                                       // state
                                                                                       // for the
                                                                                       // src
                                                                                       // node,
                                                                                       // which
                                                                                       // may get
                                                                                       // over
                                                                                       // written
                                                                                       // later
                                                                                       // by
                                                                                       // another
                                                                                       // instruction
                                                                                       // in this
                                                                                       // slot
     }
     currentReliabilityRow[flowSnkNodeindex] = nextSnkState;
   }

   e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1];
   Vector&lt;Double> currentReliabilityVector = new Vector&lt;Double>();
   // convert the row to a vector so we can add it to the reliability window
   Collections.addAll(currentReliabilityVector, currentReliabilityRow);
   if (timeSlot &lt; reliabilityWindow.size()) {
     reliabilityWindow.set(timeSlot, (currentReliabilityVector));
   } else {
     reliabilityWindow.add(currentReliabilityVector);
   }
   timeSlot += 1; // increase to next time slot
 }
 var size = reliabilityWindow.size();
 nPushes[nNodesInFlow] = size; // The total (worst-case) cost to transmit E2E in isolation with
                               // specified reliability target is the number of rows in the
                               // reliabilityWindow
 // Now convert the array to the ArrayList needed to return
 ArrayList&lt;Integer> nPushesArrayList = new ArrayList&lt;Integer>();
 Collections.addAll(nPushesArrayList, nPushes);
 return nPushesArrayList;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niAyKSueEeyJjNOKZ7e9aA" name="getNodesOrderedAlphabetically" specification="_nSBOUCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niAyKiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_niAyKyueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map
 String[] nodeNames = keys.toArray(new String[keys.size()]);
 Arrays.sort(nodeNames); // NodeNames are now sorted
 // However, if names are actually strings of integers, then the sort doesn't come out
 // the way we would like. So, handle that case
 var nodeNamesAsInts = new Integer[nodeNames.length];
 var allIntNames = true; // flag to see if all names are Ints or not
 for (int i = 0; i &lt; nodeNames.length; i++) {
   var nodeName = nodeNames[i];
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {
     // nodeName is an alpha representation of an integer
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);
   } else {
     // nodeName is an alpha name and not an integer, so set flag and terminate loop
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only
                          // set it once
     break; // can stop the loop once we know not all of the names are ints
   }
 }
 if (allIntNames) {
   // If all names are ints, then we need to sort them accordingly
   // Otherwise, we get names in what appears to not be in order because
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string
   }
 }
 return nodeNames;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niAyLCueEeyJjNOKZ7e9aA" name="getFlow" specification="_nSBOVCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niAyLSueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niAyLiueEeyJjNOKZ7e9aA" type="_nPCLwCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node
 if (flow == null) {// return empty node if not found
   flow = new Flow();
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);
 }
 return flow;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niAyLyueEeyJjNOKZ7e9aA" name="getFlowNames" specification="_nSB1YCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niAyMCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_niAyMSueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niAyMiueEeyJjNOKZ7e9aA" name="getNodeIndex" specification="_nSB1ZCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niAyMyueEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niAyNCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now
 if (node != null) {
   index = node.getIndex();
 }
 return index;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niAyNSueEeyJjNOKZ7e9aA" name="getNodesInFlow" specification="_nSCcciueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niAyNiueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niAyNyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_niAyOCueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the
 // nodes in the flow to create an array of the node names in
 // the same order as they exist in the flow specification (i.e., Graph file)
 var flow = flows.get(flowName);
 String[] nodes;
 if (flow != null) {
   nodes = new String[flow.nodes.size()];
   for (int i = 0; i &lt; nodes.length; i++) {
     var node = flow.nodes.get(i); // get the node from the arrayList
     nodes[i] = node.getName(); // get the name and store it in the array
   }

 } else {
   nodes = new String[0]; // return empty array
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);
 }
 return nodes;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niAyOSueEeyJjNOKZ7e9aA" name="getHyperPeriod" specification="_nSDDgCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niAyOiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1
 for (String flowName : getFlowNames()) {
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod
                                                                      // so far and the current
                                                                      // period, then update the
                                                                      // hyperPeriod with that
                                                                      // value
 }
 return hyperPeriod;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niBZMCueEeyJjNOKZ7e9aA" name="getTotalCommunicationCost" specification="_nSDDgiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niBZMSueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niBZMiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();
 var totalCostIndex = linkTxAndTotalCost.size() - 1;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);
 return totalCost;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niBZMyueEeyJjNOKZ7e9aA" name="getLinkCommunicationCosts" specification="_nSDDhSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niBZNCueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niBZNSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_niBZNiueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());
 var lastElement = linkTxAndTotalCost.size() - 1;
 linkTxAndTotalCost.remove(lastElement); /* remove the last element, because that is the sum of
                                         others */
 return linkTxAndTotalCost.toArray(new Integer[0]);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niBZNyueEeyJjNOKZ7e9aA" name="addEdge" specification="_nelqsCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niBZOCueEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niBZOSueEeyJjNOKZ7e9aA" name="edge" type="_nO1-gCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object
 node.addEdge(edge);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niBZOiueEeyJjNOKZ7e9aA" name="maxFlowLength" specification="_nSDqlCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niBZOyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;
 for (Flow flow : flows.values()) {
   maxLength = Math.max(maxLength, flow.nodes.size());
 }
 return maxLength;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nR4rcCueEeyJjNOKZ7e9aA" name="setDefaultParameters" visibility="private" method="_nh-V6yueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nR4rcSueEeyJjNOKZ7e9aA" name="getE2e" method="_nh-V7CueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niU7NyueEeyJjNOKZ7e9aA">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_ngB1KCueEeyJjNOKZ7e9aA" type="_nfrP0iueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nR4rciueEeyJjNOKZ7e9aA" name="getIntForFlowNames" method="_nh-V7iueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niU7OCueEeyJjNOKZ7e9aA">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR4rcyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR5SgCueEeyJjNOKZ7e9aA" name="getName" method="_nh-V8CueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViQCueEeyJjNOKZ7e9aA">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR5SgSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR5SgiueEeyJjNOKZ7e9aA" name="getMaxPhase" method="_nh-V9CueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViQiueEeyJjNOKZ7e9aA">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR5SgyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR5ShCueEeyJjNOKZ7e9aA" name="getMinPeriod" method="_nh-V9iueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViQyueEeyJjNOKZ7e9aA">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR55kCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR55kSueEeyJjNOKZ7e9aA" name="setIntForFlowNames" method="_nh-88iueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViRSueEeyJjNOKZ7e9aA">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR55kiueEeyJjNOKZ7e9aA" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR55kyueEeyJjNOKZ7e9aA" name="setName" method="_nh-89CueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViRiueEeyJjNOKZ7e9aA">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR55lCueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR6goCueEeyJjNOKZ7e9aA" name="setNodeChannel" method="_nh-89iueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViRyueEeyJjNOKZ7e9aA">
                  <body>@param name the node whose channel is to be set
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR6goSueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nR6goiueEeyJjNOKZ7e9aA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR6goyueEeyJjNOKZ7e9aA" name="getNodeChannel" method="_nh-8-SueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViSCueEeyJjNOKZ7e9aA">
                  <body>@param name Name of node
   * @return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR6gpCueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nR6gpSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR7HsCueEeyJjNOKZ7e9aA" name="addFlow" method="_nh-8_CueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViSSueEeyJjNOKZ7e9aA">
                  <body>Adds a new flow mode to the Flows dictionary with a new name, index, and priority with the other parameters 
  * set to default if the flow doesn't have custom parameters
  * @param flowName Flow's name</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR7HsSueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR7HsiueEeyJjNOKZ7e9aA" name="isIntForNodeNames" method="_nh-8_iueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViSiueEeyJjNOKZ7e9aA">
                  <body>Checks if all node names are integers
   * @return A boolean indicating if all node names are integers or not</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR7HsyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR7HtCueEeyJjNOKZ7e9aA" name="isIntForFlowNames" method="_nh-9ACueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViSyueEeyJjNOKZ7e9aA">
                  <body>Checks if all flow names are integers
   * @return A boolean indicating if all flow names are integers or not</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR7HtSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR7uwCueEeyJjNOKZ7e9aA" name="addNodeToFlow" method="_nh-9AiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViTCueEeyJjNOKZ7e9aA">
                  <body>Adds an existing node to a map of nodes or creates a node, if the given node is not already in the map of nodes,
   * and then adds it to the map, once created, it adds the node to the given flow
   * @param flowName Flow's name
   * @param nodeName Node's name</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR7uwSueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nR7uwiueEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR7uwyueEeyJjNOKZ7e9aA" name="getFlowPriority" method="_nh_kACueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViTSueEeyJjNOKZ7e9aA">
                  <body>Gets the given flow node's priority attribute
   * @param flowName Flow's name
   * @param nodeName Node's name
   * @return An integer representing the priority attribute of the given Flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR7uxCueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nR7uxSueEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nR7uxiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR8V0CueEeyJjNOKZ7e9aA" name="setFlowPriority" method="_nh_kBCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViTiueEeyJjNOKZ7e9aA">
                  <body>Set's a given flow node's priority attribute
   * @param flowName Flow's name
   * @param priority Integer to set the given flow's priority attribute to</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR8V0SueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nR8V0iueEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR8V0yueEeyJjNOKZ7e9aA" name="setFlowPeriod" method="_nh_kByueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViTyueEeyJjNOKZ7e9aA">
                  <body>Set's a given flow's period attribute to a given integer, denoting the time between
   * successive releases of a packet of data from the source node
   * @param flowName Flow's name
   * @param period Given period attribute to change the given flow's period to</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR8V1CueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nR884CueEeyJjNOKZ7e9aA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR884SueEeyJjNOKZ7e9aA" name="setFlowDeadline" method="_nh_kCiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViUCueEeyJjNOKZ7e9aA">
                  <body>Set's a given flow's deadline attribute, which is the amount of time that can elapse
   * from the release of a packet and its arrival at the sink node
   * @param flowName Flow's name
   * @param deadline Amount of time the given flow can have for a deadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR884iueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nR884yueEeyJjNOKZ7e9aA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR885CueEeyJjNOKZ7e9aA" name="setFlowPhase" method="_nh_kDSueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViUSueEeyJjNOKZ7e9aA">
                  <body>Set a flow's phase
   * 
   * @param flowName Name of flow
   * @param phase Given phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR9j8CueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nR9j8SueEeyJjNOKZ7e9aA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR9j8iueEeyJjNOKZ7e9aA" name="getFlowIndex" method="_nh_kECueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViUiueEeyJjNOKZ7e9aA">
                  <body>Gets a flow's index
   * 
   * @param flowName Name of flow
   * @return Flow's index</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR9j8yueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nR9j9CueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR9j9SueEeyJjNOKZ7e9aA" name="getFlowPriority" method="_nh_kEyueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViUyueEeyJjNOKZ7e9aA">
                  <body>Gets a flow's priority
   * 
   * @param flowName Name of flow
   * @return Flow's priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR-LACueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nR-LASueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR-LAiueEeyJjNOKZ7e9aA" name="getFlowPeriod" method="_nh_kFiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViVCueEeyJjNOKZ7e9aA">
                  <body>Gets a given Flow's period attribute, which is the time between successive releases
   * of a packet of data from the source node
   * @param flowName Flow's name
   * @return An integer representing the given flow's period attribute</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR-LAyueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nR-LBCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR-LBSueEeyJjNOKZ7e9aA" name="getFlowDeadline" method="_nh_kGSueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViVSueEeyJjNOKZ7e9aA">
                  <body>Gets a given Flow's deadline, which is the amount of time that can elapse
   * from the release of a packet and its arrival at the sink node
   * @param flowName Flow's name
   * @return An integer indicating a flow's allotted deadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR-yECueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nR-yESueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR-yEiueEeyJjNOKZ7e9aA" name="getFlowPhase" method="_niALECueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViViueEeyJjNOKZ7e9aA">
                  <body>Get's a given flow's phase attribute, which is the time offset from time 0 that the
   * first release of data occurs
   * @param flowName Flow's name
   * @return An integer representing the given flow's phase attribute</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR-yEyueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nR-yFCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR_ZICueEeyJjNOKZ7e9aA" name="getFlowTxPerLink" method="_niALEyueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViVyueEeyJjNOKZ7e9aA">
                  <body>Get a given flow's number of transmissions per link
   * @param flowName Flow's name
   * @return An integer representing the given flow's transmissions per link</body>
                </ownedComment>
                <ownedParameter xmi:id="_nR_ZISueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nR_ZIiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nR_ZIyueEeyJjNOKZ7e9aA" name="setFlowsInPriorityOrder" method="_niALFiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViWCueEeyJjNOKZ7e9aA">
                  <body>Arranges the flows from FlowMap in priority order.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_nR_ZJCueEeyJjNOKZ7e9aA" name="setFlowsInDMorder" method="_niALFyueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViWSueEeyJjNOKZ7e9aA">
                  <body>Arranges the flows in FlowMap by deadlines.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_nR_ZJSueEeyJjNOKZ7e9aA" name="setFlowsInRMorder" method="_niALGCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViWiueEeyJjNOKZ7e9aA">
                  <body>Arranges the flows in FlowMap by their periods.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_nSAAMCueEeyJjNOKZ7e9aA" name="setFlowsInRealTimeHARTorder" method="_niALGSueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niWJUCueEeyJjNOKZ7e9aA">
                  <body>Set flows in priority order
   *</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_nSAAMSueEeyJjNOKZ7e9aA" name="finalizeCurrentFlow" method="_niALGiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niWJUSueEeyJjNOKZ7e9aA">
                  <body>Finalize current flow
   * 
   * @param flowName Name of flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_nSAAMiueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSAAMyueEeyJjNOKZ7e9aA" name="finalizeFlowWithE2eParameters" visibility="private" method="_niALHCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nSAANCueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSAnQCueEeyJjNOKZ7e9aA" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_niALHiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nSAnQSueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSBOUCueEeyJjNOKZ7e9aA" name="getNodesOrderedAlphabetically" method="_niAyKSueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niWJUiueEeyJjNOKZ7e9aA">
                  <body>Returns an array of nodes sorted by their names.
   * 
   * @return nodeNames An array of nodes sorted alphabetically</body>
                </ownedComment>
                <ownedParameter xmi:id="_nSBOUSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nSBOUiueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSBOVCueEeyJjNOKZ7e9aA" name="getFlow" visibility="private" method="_niAyLCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nSBOVSueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nelDoSueEeyJjNOKZ7e9aA" type="_nPCLwCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nSB1YCueEeyJjNOKZ7e9aA" name="getFlowNames" method="_niAyLyueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niWJUyueEeyJjNOKZ7e9aA">
                  <body>Public function to return an array of flow names in the order they were read from
   * the graph file.
   * 
   * @return flowNamesInOriginalOrder.toArray(new String[0]) An array of strings containing the
   * flow names from the graph file.</body>
                </ownedComment>
                <ownedParameter xmi:id="_nSB1YSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nSB1YiueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSB1ZCueEeyJjNOKZ7e9aA" name="getNodeIndex" method="_niAyMiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niWJVCueEeyJjNOKZ7e9aA">
                  <body>Public function to return the dictionary of nodes.
   * 
   * @param nodeName A string of the specific node desired. 
   * @return index The nodes index.</body>
                </ownedComment>
                <ownedParameter xmi:id="_nSCccCueEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nSCccSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSCcciueEeyJjNOKZ7e9aA" name="getNodesInFlow" method="_niAyNSueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niWJVSueEeyJjNOKZ7e9aA">
                  <body>Returns an array of nodes in the order that they appear in the flow.
   * 
   * @param flowName A string containing the name of the desired flow.
   * @return nodes An array of all the nodes found in that flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_nSCccyueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nSCcdCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nSCcdSueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSDDgCueEeyJjNOKZ7e9aA" name="getHyperPeriod" method="_niAyOSueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niWJViueEeyJjNOKZ7e9aA">
                  <body>Updates HyperPeriod the the the current period value.
   * 
   * @return hyperPeriod An Integer that represents the current hyperPeriod.</body>
                </ownedComment>
                <ownedParameter xmi:id="_nSDDgSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSDDgiueEeyJjNOKZ7e9aA" name="getTotalCommunicationCost" method="_niBZMCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niWJVyueEeyJjNOKZ7e9aA">
                  <body>Returns the total cost of a given flow.
   * 
   * @param flowName A string of the desired flow. 
   * @return totalCost An integer that represents the total cost of the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_nSDDgyueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nSDDhCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSDDhSueEeyJjNOKZ7e9aA" name="getLinkCommunicationCosts" method="_niBZMyueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niWJWCueEeyJjNOKZ7e9aA">
                  <body>Return an array of the number of transmission needed for each
   * link (i.e. edge in the flow graph) to meet E2E target.
   *
   * @param flowName A string of the desired flow. 
   * @return linkTxAndTotalCost.toArray(new Integer[0]) An array of Integers
   * that contains the total cost of Links within the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_nSDqkCueEeyJjNOKZ7e9aA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nSDqkSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nSDqkiueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSDqlCueEeyJjNOKZ7e9aA" name="maxFlowLength" method="_niBZOiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niWJWiueEeyJjNOKZ7e9aA">
                  <body>Returns the max length of a flow.
   * 
   * @return maxLength An Integer that represents the max length of the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_nSDqlSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nekckCueEeyJjNOKZ7e9aA" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_niAyICueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nekckSueEeyJjNOKZ7e9aA" name="flow" type="_nPCLwCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ngCcNCueEeyJjNOKZ7e9aA" type="_nc5ooCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nelqsCueEeyJjNOKZ7e9aA" name="addEdge" method="_niBZNyueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niWJWSueEeyJjNOKZ7e9aA">
                  <body>Adds an edge connected to the given node.
   * 
   * @param nodeName String of the desired node you wish to add an edge to. 
   * @param edge The Edge that is being added.</body>
                </ownedComment>
                <ownedParameter xmi:id="_nelqsSueEeyJjNOKZ7e9aA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nelqsiueEeyJjNOKZ7e9aA" name="edge" type="_nO1-gCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ngBOECueEeyJjNOKZ7e9aA" name="WorkLoad" visibility="package" method="_nh-V4CueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_ngBOFCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ngBOFSueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_niU7NSueEeyJjNOKZ7e9aA">
                  <body>Creates a workload with the specified information.
   * 
   * @param m
   * @param e2e
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_ngBOESueEeyJjNOKZ7e9aA" name="m" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ngBOEiueEeyJjNOKZ7e9aA" name="e2e" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ngBOEyueEeyJjNOKZ7e9aA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ngBOFiueEeyJjNOKZ7e9aA" type="_nR2PMCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ngB1ICueEeyJjNOKZ7e9aA" name="WorkLoad" visibility="package" method="_nh-V5SueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_ngB1JSueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ngB1JiueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_niU7NiueEeyJjNOKZ7e9aA">
                  <body>Creates a workload with the specified information
   * 
   * @param numFaults
   * @param m 
   * @param e2e 
   * @param inputFileName
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_ngB1ISueEeyJjNOKZ7e9aA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ngB1IiueEeyJjNOKZ7e9aA" name="m" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ngB1IyueEeyJjNOKZ7e9aA" name="e2e" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ngB1JCueEeyJjNOKZ7e9aA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ngB1JyueEeyJjNOKZ7e9aA" type="_nR2PMCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ngCcMCueEeyJjNOKZ7e9aA" name="setMinPacketReceptionRate" method="_nh-V8iueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViQSueEeyJjNOKZ7e9aA">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ngCcMSueEeyJjNOKZ7e9aA" name="minPacketReceptionRate" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ngCcMiueEeyJjNOKZ7e9aA" name="setE2e" method="_nh-88CueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niViRCueEeyJjNOKZ7e9aA">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ngCcMyueEeyJjNOKZ7e9aA" name="e2e" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ngDDQCueEeyJjNOKZ7e9aA" name="nTxPerLinkAndTotalTxCost" visibility="private" method="_niAyIyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ngDDQSueEeyJjNOKZ7e9aA" name="flow" type="_nPCLwCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ngDDQiueEeyJjNOKZ7e9aA" name="e2e" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ngDDQyueEeyJjNOKZ7e9aA" name="M" type="_nfrP0iueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ngDDRCueEeyJjNOKZ7e9aA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ngDqUSueEeyJjNOKZ7e9aA" type="_nc5ooCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nSK_UCueEeyJjNOKZ7e9aA" name="WorkLoadDescription">
              <ownedComment xmi:id="_niWJWyueEeyJjNOKZ7e9aA">
                <body>Provides information on graphs that are given through .txt files

@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_nepVECueEeyJjNOKZ7e9aA" general="_nRRncCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_nhDv4CueEeyJjNOKZ7e9aA" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nhDv4SueEeyJjNOKZ7e9aA" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhDv4iueEeyJjNOKZ7e9aA" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nhDv4yueEeyJjNOKZ7e9aA" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhDv5CueEeyJjNOKZ7e9aA" name="description" visibility="private" type="_nOy7MCueEeyJjNOKZ7e9aA" association="_njAQpCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_nhEW8SueEeyJjNOKZ7e9aA" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhEW8yueEeyJjNOKZ7e9aA" name="fm" visibility="private" type="_nO96UCueEeyJjNOKZ7e9aA" association="_njA3sSueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_nhEW9SueEeyJjNOKZ7e9aA" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niCAQCueEeyJjNOKZ7e9aA" name="WorkLoadDescription" specification="_nSLmYCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niCAQSueEeyJjNOKZ7e9aA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niCAQiueEeyJjNOKZ7e9aA" type="_nSK_UCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor
		this.fm = this.getFileManager();
		initialize(inputFileName);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niCAQyueEeyJjNOKZ7e9aA" name="visualization" specification="_nSLmZSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niCARCueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return description;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niCARSueEeyJjNOKZ7e9aA" name="fileVisualization" specification="_nSMNcyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niCARiueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return description;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niCARyueEeyJjNOKZ7e9aA" name="toString" specification="_nSM0gyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niCASCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niCASSueEeyJjNOKZ7e9aA" name="initialize" specification="_nSNbkyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niCASiueEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents
		InputGraphFile gf = new InputGraphFile(fm);
		inputGraphString = gf.readGraphFile(inputFile);
		this.inputFileName = gf.getGraphFileName();
		description = new Description(inputGraphString);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niCnUCueEeyJjNOKZ7e9aA" name="main" specification="_nSNblSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niCnUSueEeyJjNOKZ7e9aA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_niCnUiueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>//Declarations at the beginning of block 
		int REMOVE_CURLY = 3; //constant to remove curly bracket
		int FLOW_NUM = 1; //used to increment printed flow numbers
		String Temp; //temporary string to hold graph title 
		String graphToString; //used to manipulate file contents
		String[] fileLines; //temporary array to hold contents
		ArrayList&lt;String> sortingList = new ArrayList&lt;>(); //ArrayList used to sort
		
		WorkLoadDescription inputGraph = new WorkLoadDescription(&quot;StressTest4.txt&quot;); 
		
		graphToString = inputGraph.toString(); 
		
		fileLines = graphToString.split(&quot;\n&quot;); //each line becomes its own element in array
				
		//add graph contents to ArrayList
		for(int i = 0; i &lt; fileLines.length; i ++) {
			
			sortingList.add(fileLines[i]);
			
		}
		
		Temp = sortingList.remove(0); //remove brackets and title to focus on sorting
		
		sortingList.remove(sortingList.size() - 1 );
		
		Collections.sort(sortingList); //sort
		//Collections.sort(sortingList, String.CASE_INSENSITIVE_ORDER);
		
		//print graph title followed by sorted contents
		System.out.println(Temp.substring(0, Temp.length() - REMOVE_CURLY));
		
		for(int k = 0; k &lt; sortingList.size(); k ++) {
			
			System.out.println(&quot;Flow &quot; + (k + FLOW_NUM) + &quot;: &quot; + sortingList.get(k));
		
		}
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nSLmYCueEeyJjNOKZ7e9aA" name="WorkLoadDescription" visibility="package" method="_niCAQCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nSLmYiueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nSLmYyueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nSLmYSueEeyJjNOKZ7e9aA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nSLmZCueEeyJjNOKZ7e9aA" type="_nSK_UCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nSLmZSueEeyJjNOKZ7e9aA" name="visualization" method="_niCAQyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neouACueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nSMNcyueEeyJjNOKZ7e9aA" name="fileVisualization" method="_niCARSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neouASueEeyJjNOKZ7e9aA" type="_nOy7MCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nSM0gyueEeyJjNOKZ7e9aA" name="toString" method="_niCARyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nSM0hCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSNbkyueEeyJjNOKZ7e9aA" name="initialize" visibility="private" method="_niCASSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nSNblCueEeyJjNOKZ7e9aA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSNblSueEeyJjNOKZ7e9aA" name="main" isStatic="true" method="_niCnUCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nSNbliueEeyJjNOKZ7e9aA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nSOCoCueEeyJjNOKZ7e9aA" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nSPQwCueEeyJjNOKZ7e9aA" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_niWwYCueEeyJjNOKZ7e9aA">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <generalization xmi:id="_ngFfgCueEeyJjNOKZ7e9aA" general="_ndYJwSueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_nhE-ACueEeyJjNOKZ7e9aA" name="workLoad" visibility="package" type="_nR2PMCueEeyJjNOKZ7e9aA" association="_njA3tCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_nhE-AiueEeyJjNOKZ7e9aA" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niCnUyueEeyJjNOKZ7e9aA" name="WorkLoadListener" specification="_nep8ICueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niCnVCueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niCnVSueEeyJjNOKZ7e9aA" type="_nSPQwCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read
     this.currentFlow = new String();
  // Read input file and build AST of graphFile
     try {
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());
     	var lexer = new WARPLexer(inputGraph);
     	var tokens = new CommonTokenStream(lexer);
     	var parser = new WARPParser(tokens);
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'
     	var warp = new ParseTreeWalker();
     	 // Now populate build the workLoad by walking the input Graph tokens
     	warp.walk(this, warpTree);
     } catch (Exception e) {
     	e.printStackTrace();
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niCnViueEeyJjNOKZ7e9aA" name="buildNodesAndFlows" specification="_nep8JSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niCnVyueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>/*
 	 * Create the listener object, which will read the workLoad 
 	 * description and then buid the node and flow objects that
 	 * instantiates the workLoad. This object is not needed
 	 * after that.
 	 */
 	new WorkLoadListener(workLoad); 
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niCnWCueEeyJjNOKZ7e9aA" name="testPrintStdOut" specification="_nSP30CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niCnWSueEeyJjNOKZ7e9aA" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);
 	System.out.printf(msg);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niCnWiueEeyJjNOKZ7e9aA" name="enterWarpName" specification="_nep8JyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niCnWyueEeyJjNOKZ7e9aA" name="ctx" type="_ndZ-8CueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph 
     workLoad.setName(name); // store the  name for later reference
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niCnXCueEeyJjNOKZ7e9aA" name="enterFlowName" specification="_neqjMyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niCnXSueEeyJjNOKZ7e9aA" name="ctx" type="_ndb0IyueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();
     workLoad.addFlow(currentFlow);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niCnXiueEeyJjNOKZ7e9aA" name="exitPriority" specification="_nerKRCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niCnXyueEeyJjNOKZ7e9aA" name="ctx" type="_nerKQiueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST
     workLoad.setFlowPriority(currentFlow, priority);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niCnYCueEeyJjNOKZ7e9aA" name="exitPeriod" specification="_nerxVCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niCnYSueEeyJjNOKZ7e9aA" name="ctx" type="_nerxUiueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST
     workLoad.setFlowPeriod(currentFlow, period);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niDOYCueEeyJjNOKZ7e9aA" name="exitDeadline" specification="_nes_cSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niDOYSueEeyJjNOKZ7e9aA" name="ctx" type="_nesYZCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST
     workLoad.setFlowDeadline(currentFlow, deadline);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niDOYiueEeyJjNOKZ7e9aA" name="exitPhase" specification="_neuNkCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niDOYyueEeyJjNOKZ7e9aA" name="ctx" type="_netmgyueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST
     workLoad.setFlowPhase(currentFlow, phase);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niDOZCueEeyJjNOKZ7e9aA" name="exitSrcNode" specification="_neuNlSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niDOZSueEeyJjNOKZ7e9aA" name="ctx" type="_ndcbNiueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name
     workLoad.addNodeToFlow(currentFlow, nodeName);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niDOZiueEeyJjNOKZ7e9aA" name="exitSnkNode" specification="_neu0oyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niDOZyueEeyJjNOKZ7e9aA" name="ctx" type="_nddpUiueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name
     workLoad.addNodeToFlow(currentFlow, nodeName);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niDOaCueEeyJjNOKZ7e9aA" name="exitFlow" specification="_nevbsiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niDOaSueEeyJjNOKZ7e9aA" name="ctx" type="_ndeQYyueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nSP30CueEeyJjNOKZ7e9aA" name="testPrintStdOut" method="_niCnWCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nSP30SueEeyJjNOKZ7e9aA" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nep8ICueEeyJjNOKZ7e9aA" name="WorkLoadListener" visibility="private" method="_niCnUyueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nep8IiueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nep8IyueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nep8ISueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_nep8JCueEeyJjNOKZ7e9aA" type="_nSPQwCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nep8JSueEeyJjNOKZ7e9aA" name="buildNodesAndFlows" isStatic="true" method="_niCnViueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nep8JiueEeyJjNOKZ7e9aA" name="workLoad" type="_nR2PMCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nep8JyueEeyJjNOKZ7e9aA" name="enterWarpName" method="_niCnWiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nep8KCueEeyJjNOKZ7e9aA" name="ctx" type="_ndZ-8CueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_neqjMyueEeyJjNOKZ7e9aA" name="enterFlowName" method="_niCnXCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neqjNCueEeyJjNOKZ7e9aA" name="ctx" type="_ndb0IyueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nerKRCueEeyJjNOKZ7e9aA" name="exitPriority" method="_niCnXiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nerKRSueEeyJjNOKZ7e9aA" name="ctx" type="_nerKQiueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nerxVCueEeyJjNOKZ7e9aA" name="exitPeriod" method="_niCnYCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nesYYCueEeyJjNOKZ7e9aA" name="ctx" type="_nerxUiueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nes_cSueEeyJjNOKZ7e9aA" name="exitDeadline" method="_niDOYCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nes_ciueEeyJjNOKZ7e9aA" name="ctx" type="_nesYZCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_neuNkCueEeyJjNOKZ7e9aA" name="exitPhase" method="_niDOYiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neuNkSueEeyJjNOKZ7e9aA" name="ctx" type="_netmgyueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_neuNlSueEeyJjNOKZ7e9aA" name="exitSrcNode" method="_niDOZCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neuNliueEeyJjNOKZ7e9aA" name="ctx" type="_ndcbNiueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_neu0oyueEeyJjNOKZ7e9aA" name="exitSnkNode" method="_niDOZiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_neu0pCueEeyJjNOKZ7e9aA" name="ctx" type="_nddpUiueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nevbsiueEeyJjNOKZ7e9aA" name="exitFlow" method="_niDOaCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nevbsyueEeyJjNOKZ7e9aA" name="ctx" type="_ndeQYyueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nSSUECueEeyJjNOKZ7e9aA" name="WorkLoadTest" visibility="package">
              <ownedAttribute xmi:id="_nhFlESueEeyJjNOKZ7e9aA" name="stressTest4WorkLoad" visibility="package" type="_nR2PMCueEeyJjNOKZ7e9aA" association="_njBewSueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_nhGMISueEeyJjNOKZ7e9aA" name="seeSprayWorkLoad" visibility="package" type="_nR2PMCueEeyJjNOKZ7e9aA" association="_njBexCueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_nhGMIyueEeyJjNOKZ7e9aA" name="test1WorkLoad" visibility="package" type="_nR2PMCueEeyJjNOKZ7e9aA" association="_njCF0SueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_nhGMJSueEeyJjNOKZ7e9aA" name="addFlowTest" visibility="package" type="_nR2PMCueEeyJjNOKZ7e9aA" association="_njCF1CueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_nhGzMSueEeyJjNOKZ7e9aA" name="addFlowCompare" visibility="package" type="_nR2PMCueEeyJjNOKZ7e9aA" association="_njCs4SueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_nhGzMyueEeyJjNOKZ7e9aA" name="addFlowCompareTwo" visibility="package" type="_nR2PMCueEeyJjNOKZ7e9aA" association="_njDT8CueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niDOaiueEeyJjNOKZ7e9aA" name="setUp" specification="_nSTiMCueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Double 	WORKLOAD_M = 3.0;
		Double WORKLOAD_E2E = 2.0;
		//Create work load for stressTest4.txt
		stressTest4WorkLoad = new WorkLoad(WORKLOAD_M, WORKLOAD_E2E, &quot;stressTest4.txt&quot;);
		//Create work load for SeeSpray.txt
		seeSprayWorkLoad = new WorkLoad(WORKLOAD_M, WORKLOAD_E2E, &quot;SeeSpray.txt&quot;);
		//Create work load for Test1.txt
		test1WorkLoad = new WorkLoad(WORKLOAD_M, WORKLOAD_E2E, &quot;Test1.txt&quot;);
		//Create workLoad for addFlowTest.txt
		addFlowTest = new WorkLoad(WORKLOAD_M, WORKLOAD_E2E, &quot;addFlowTest.txt&quot;);
		//Create workLoad for addFlowTest_compare.txt
		addFlowCompare = new WorkLoad(WORKLOAD_M, WORKLOAD_E2E, &quot;addFlowTest_compare.txt&quot;);
		addFlowCompareTwo = new WorkLoad(WORKLOAD_M, WORKLOAD_E2E, &quot;addFlowTest2_compare.txt&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niDOayueEeyJjNOKZ7e9aA" name="testAddFlow" specification="_nSUJQSueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>ArrayList&lt;String> EXPECTED_OUTPUT = new ArrayList&lt;String>();
		ArrayList&lt;String> addFlowOutput = new ArrayList&lt;String>();
		//how do we add flows--is it just the flow name like 'F11'
		addFlowTest.addFlow(&quot;F11&quot;);
		//creating output
		addFlowOutput = addFlowTest.getFlowNamesInOriginalOrder();
		
		EXPECTED_OUTPUT = addFlowCompare.getFlowNamesInOriginalOrder();
		
		assertEquals(EXPECTED_OUTPUT, addFlowOutput, &quot;New flow 'F11' added to workload&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niD1cCueEeyJjNOKZ7e9aA" name="testAddFlowMultiple" specification="_nSUJRSueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>ArrayList&lt;String> EXPECTED_OUTPUT = new ArrayList&lt;String>();
		ArrayList&lt;String> addFlowOutput = new ArrayList&lt;String>();
		
		//how do we add flows--is it just the flow name like 'F11'
		addFlowTest.addFlow(&quot;F11&quot;);
		addFlowTest.addFlow(&quot;F21&quot;);
		addFlowTest.addFlow(&quot;F18&quot;);
		addFlowTest.addFlow(&quot;F13&quot;);
		//creating output
		addFlowOutput = addFlowTest.getFlowNamesInOriginalOrder();
		
		EXPECTED_OUTPUT = addFlowCompareTwo.getFlowNamesInOriginalOrder();
		
		assertEquals(EXPECTED_OUTPUT, addFlowOutput, &quot;Multiple flows added to workload&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niD1cSueEeyJjNOKZ7e9aA" name="testAddNodeToFlowOnce" specification="_nSUwUyueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_NODE_STRING = &quot;[B, C, D, A]&quot;;
		String[] actualNodes;
		String actualNodeString;
		
		//Add node named 'A' to flow named 'F1'
		stressTest4WorkLoad.addNodeToFlow(&quot;F1&quot;,&quot;A&quot;);
		//Get the nodes in flow 'F1' which should now also contain A
		actualNodes = stressTest4WorkLoad.getNodesInFlow(&quot;F1&quot;);
		//Convert the array containing the nodes to string
		actualNodeString = Arrays.toString(actualNodes);
		
		//Compare expected with result
		assertEquals(EXPECTED_NODE_STRING, actualNodeString,
				&quot;Flow F1 in stressTest4.txt after adding a single node 'A'&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niD1ciueEeyJjNOKZ7e9aA" name="testAddNodeToFlowMultiple" specification="_nSVXYiueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_NODE_STRING = &quot;[B, C, D, A, E, J]&quot;;
		String[] actualNodeArray;
		String actualNodeString;
		
		//Add nodes 'A', 'E', and 'J' to flow 'F6' in stressTest4.txt
		stressTest4WorkLoad.addNodeToFlow(&quot;F6&quot;,&quot;A&quot;);
		stressTest4WorkLoad.addNodeToFlow(&quot;F6&quot;,&quot;E&quot;);
		stressTest4WorkLoad.addNodeToFlow(&quot;F6&quot;,&quot;J&quot;);
		//Get the nodes in flow 'F6' which should now also contain 'A', 'E', and 'J'
		actualNodeArray = stressTest4WorkLoad.getNodesInFlow(&quot;F6&quot;);
		//Convert the array containing the nodes to a string
		actualNodeString = Arrays.toString(actualNodeArray);
		
		//Compare expected with results
		assertEquals(EXPECTED_NODE_STRING, actualNodeString,
				&quot;Flow F6 in stressTest4.txt after adding nodes 'A', 'E' and 'J'&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niD1cyueEeyJjNOKZ7e9aA" name="testAddNodeToFlowAlphanumeric" specification="_nSVXZiueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_NODE_STRING = &quot;[C1, B1, A]&quot;;
		String[] actualNodeArray;
		String actualNodeString;
		
		//Add a node 'A' to flow 'F1A' in Test1.txt
		test1WorkLoad.addNodeToFlow(&quot;F1A&quot;,&quot;A&quot;);
		//Get the nodes in flow 'F1A' that should now contain 'A'
		actualNodeArray = test1WorkLoad.getNodesInFlow(&quot;F1A&quot;);
		//Convert the array containing the nodes to a string
		actualNodeString = Arrays.toString(actualNodeArray);
		
		//Compare expected with results
		assertEquals(EXPECTED_NODE_STRING, actualNodeString,
				&quot;Flow F1A in Test1.txt after adding a node 'A'&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niD1dCueEeyJjNOKZ7e9aA" name="testGetFlowPriorityStringString" specification="_nSV-cyueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_NODE_PRIORITY = 0;
		Integer actualNodePriority = stressTest4WorkLoad.getFlowPriority(&quot;F1&quot;,&quot;D&quot;);
		
		//next test will check that this method returns the correct priority when a new node is added
		assertEquals(EXPECTED_NODE_PRIORITY, actualNodePriority, 
				&quot;Priority of node 'D,' belonging to flow 'F1' returned&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niD1dSueEeyJjNOKZ7e9aA" name="testGetFlowPriorityAddedNode" specification="_nSWlgiueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_NODE_PRIORITY = 3;
		Integer actualNodePriority;
		
		//add node to flow
		stressTest4WorkLoad.addNodeToFlow(&quot;F1&quot;, &quot;Y&quot;);
		//because they're 3 nodes in the flow this new flows priority should be 3
		//new nodes priority will be index in flow, and indexing starts at 0 
		actualNodePriority = stressTest4WorkLoad.getFlowPriority(&quot;F1&quot;,&quot;Y&quot;);
		//check if expected and actual is equal
		assertEquals(EXPECTED_NODE_PRIORITY, actualNodePriority, &quot;Priority of newly added node 'Y' in flow 'F1'&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niD1diueEeyJjNOKZ7e9aA" name="testGetFlowPriorityString" specification="_nSWlhiueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_PRIORITY = 1; 
		//test it 
		Integer actualPriority = stressTest4WorkLoad.getFlowPriority(&quot;F1&quot;);
		
		assertEquals(EXPECTED_PRIORITY, actualPriority, &quot;Initial priotiry of F1 returned&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niD1dyueEeyJjNOKZ7e9aA" name="testGetFlowPriorityStringAddedFlow" specification="_nSXMkiueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_PRIORITY = 10; 
		Integer actualPriority;

		//add flow to flowPriorityTest WorkLoad
		stressTest4WorkLoad.addFlow(&quot;F13&quot;);
		/* When new flow added, priority set to index, this is the 10th flow added,
		 * however indexing starts at 0, so new flow has priority 10
		 */
		
		//test it 
		actualPriority = stressTest4WorkLoad.getFlowPriority(&quot;F13&quot;);
		assertEquals(EXPECTED_PRIORITY, actualPriority, &quot;Priotiry of newly added flow 'F13' returned&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niD1eCueEeyJjNOKZ7e9aA" name="testSetFlowPriority" specification="_nSXzoCueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED = 30;
		
		//set flow F5's priority to 30, different than its initial priority of 5
		stressTest4WorkLoad.setFlowPriority(&quot;F5&quot;, 30);
		
		//compare expected priority with actual 
		assertTrue(EXPECTED == stressTest4WorkLoad.getFlowPriority(&quot;F5&quot;), 
				&quot;Priority of flow 'F5' changed, then checked&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niD1eSueEeyJjNOKZ7e9aA" name="testSetFlowDeadlineOnce" specification="_nSXzpCueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_DEADLINE = 100;
		Integer actualDeadline;
		
		//Set the deadline of flow 'F5' in stressTest4.txt to 100
		stressTest4WorkLoad.setFlowDeadline(&quot;F5&quot;, 100);
		//Get the actual deadline of the flow 'F5'
		actualDeadline = stressTest4WorkLoad.getFlowDeadline(&quot;F5&quot;);
		
		//Compare expected with actual deadline
		assertTrue(EXPECTED_DEADLINE == actualDeadline,
				&quot;Deadline of flow F5 in stressTest4.txt after setting it to 100&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niD1eiueEeyJjNOKZ7e9aA" name="testSetFlowDeadlineOverwrite" specification="_nSYasiueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_DEADLINE = 75;
		Integer actualDeadline;
		
		//Set the deadline of flow 'F1' in stressTest4.txt to 100
		stressTest4WorkLoad.setFlowDeadline(&quot;F1&quot;, 100);
		//Set the deadline of flow 'F1' in stressTest4.txt to 75
		stressTest4WorkLoad.setFlowDeadline(&quot;F1&quot;, 75);
		//Get the actual deadline of the flow 'F5'
		actualDeadline = stressTest4WorkLoad.getFlowDeadline(&quot;F1&quot;);
		
		//Compare expected with actual deadline
		assertTrue(EXPECTED_DEADLINE == actualDeadline,
				&quot;Deadline of flow F1 in stressTest4.txt after setting it to 100 then 75&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niD1eyueEeyJjNOKZ7e9aA" name="testSetFlowDeadlineAlphanumeric" specification="_nSYatiueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_DEADLINE = 100;
		Integer actualDeadline;
		
		//Set the deadline of flow 'F1A' in Test1.txt to 100
		test1WorkLoad.setFlowDeadline(&quot;F1A&quot;, 100);
		//Get the actual deadline of the flow 'F1A'
		actualDeadline = test1WorkLoad.getFlowDeadline(&quot;F1A&quot;);
		
		//Compare expected with actual deadline
		assertTrue(EXPECTED_DEADLINE == actualDeadline,
				&quot;Deadline of flow F1A in Test1.txt after setting it to 100&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niD1fCueEeyJjNOKZ7e9aA" name="testGetFlowDeadlineOnce" specification="_nSZBwyueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_DEADLINE = 75;
		//Get the deadline for flow 'F5' in stressTest4.txt
		Integer actualDeadline = stressTest4WorkLoad.getFlowDeadline(&quot;F5&quot;);
		
		//Compare expected deadline with actual deadline
		assertEquals(EXPECTED_DEADLINE, actualDeadline,
				&quot;Getting flow F5's deadline from stressTest4.txt&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niD1fSueEeyJjNOKZ7e9aA" name="testGetFlowDeadlineOnceAlphanumeric" specification="_nSZBxyueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_DEADLINE = 25;
		//Get the deadline for flow 'F1A' in Test1.txt
		Integer actualDeadline = test1WorkLoad.getFlowDeadline(&quot;F1A&quot;);
		
		//Compare expected deadline with actual deadline
		assertEquals(EXPECTED_DEADLINE, actualDeadline,
				&quot;Getting flow F1A's deadline from Test1.txt&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niEcgCueEeyJjNOKZ7e9aA" name="testGetFlowDeadlineMultiple" specification="_nSZo0yueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>//Expected deadline for flow 'F1' is 20
		Integer EXPECTED_DEADLINE = 20;
		//Expected deadline or flow 'F2' is 50
		Integer EXPECTED_DEADLINE2 = 50;
		//Get deadline for flow 'F1' in stressTest4.txt
		Integer actualDeadline = stressTest4WorkLoad.getFlowDeadline(&quot;F1&quot;);
		//Get deadline for flow 'F2' in stressTest4.txt
		Integer actualDeadline2 = stressTest4WorkLoad.getFlowDeadline(&quot;F2&quot;);
		//Hold the actual results in one array and hold the expected in another
		Integer [] actualDeadlines = {actualDeadline, actualDeadline2};
		Integer [] expectedDeadlines = {EXPECTED_DEADLINE, EXPECTED_DEADLINE2};
		
		//Compare expected with actual
		assertEquals(expectedDeadlines, actualDeadlines,
				&quot;Getting flow F1's deadline and then flow F2's deadline from stressTest4.txt&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niEcgSueEeyJjNOKZ7e9aA" name="testGetFlowTxPerLink" specification="_nSZo1CueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_VALUE = 1;
		//initiate actualValue
		Integer actualValue = stressTest4WorkLoad.getFlowTxPerLink(&quot;F8&quot;);
		
		assertEquals(EXPECTED_VALUE, actualValue, &quot;Flow 'F8' txPerLink returned&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niEcgiueEeyJjNOKZ7e9aA" name="testGetFlowTxPerLinkNewFlowNoNodes" specification="_nSaP4yueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_VALUE = 1;
		Integer actualValue;
		
		//add flow with no nodes
		stressTest4WorkLoad.addFlow(&quot;F13&quot;);
		//initiate actualValue
		actualValue = stressTest4WorkLoad.getFlowTxPerLink(&quot;F13&quot;);
		
		assertEquals(EXPECTED_VALUE, actualValue, &quot;New flow 'F13' txPerLink returned&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niEcgyueEeyJjNOKZ7e9aA" name="testSetFlowsInRMorderOnce" specification="_nSaP5yueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_FLOWS = &quot;[F1, F2, F3, F4, F5, F6, F7, F8, F9, F10]&quot;;
		String actualFlows;
		//Arrange flows by period
		stressTest4WorkLoad.setFlowsInRMorder();
		
		//Actual order of flows
		actualFlows = stressTest4WorkLoad.getFlowNamesInPriorityOrder().toString();
		//Compare expected with actual
		assertEquals(EXPECTED_FLOWS, actualFlows,
				&quot;Flows in stressTest4.txt arranged by period&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niEchCueEeyJjNOKZ7e9aA" name="testSetFlowsInRMorderOverwrite" specification="_nSa28yueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_FLOWS = &quot;[F1, F2, F3, F4, F5, F6, F7, F8, F9, F10]&quot;;
		String actualFlows;
		
		//Arrange in order according to period twice
		stressTest4WorkLoad.setFlowsInRMorder();
		stressTest4WorkLoad.setFlowsInRMorder();
		 
		//Actual order of flows arranged by period
		actualFlows = stressTest4WorkLoad.getFlowNamesInPriorityOrder().toString();
		//Compare expected with actual
		assertEquals(EXPECTED_FLOWS, actualFlows,
				&quot;Flows in stressTest4.txt after being arranged by period twice&quot;);

	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niEchSueEeyJjNOKZ7e9aA" name="testSetFlowsInRMorderMultiple" specification="_nSbeACueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_FLOWS = &quot;[F1, F2, F3, F4, F5, F6, F7, F8, F9, F10]&quot;;
		String EXPECTED_FLOWS2 = &quot;[F1B, F1A]&quot;;
		String [] expectedFlowsArray = {EXPECTED_FLOWS, EXPECTED_FLOWS2};

		
		//Arrange stressTest4.txt's flows by period
		stressTest4WorkLoad.setFlowsInRMorder();
		//Arrange Test1.txt's flows by period
		test1WorkLoad.setFlowsInRMorder();
		
		//Using an array to compare both results at once
		String [] actualFlowsArray = {stressTest4WorkLoad.getFlowNamesInPriorityOrder().toString(),
				test1WorkLoad.getFlowNamesInPriorityOrder().toString()};
		//Convert arrays to strings
		String expectedFlows = Arrays.toString(expectedFlowsArray);
		String actualFlows = Arrays.toString(actualFlowsArray);
		//Compare expected with actual
		assertEquals(expectedFlows, actualFlows,
				&quot;Flows in stressTest4.txt and Test1.txt being arranged by period&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niEchiueEeyJjNOKZ7e9aA" name="testSetFlowsInRMorderLargeAlphanumeric" specification="_nSbeBCueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>seeSprayWorkLoad.setFlowsInRMorder();
		//Expected order of flows
		String EXPECTED_FLOWS = &quot;[F6A, F6B, F2A, F28A, F16A, F28B, F2B, F16B, F24A, F12A, F24B, &quot;
				+ &quot;F12B, F20A, F20B, F7B, F7A, F19A, F3B, F19B, F3A, F27A, F15A, F27B, F15B, F23A, &quot;
				+ &quot;F11A, F23B, F11B, F8A, F8B, F4A, F18A, F4B, F18B, F26A, F14A, F26B, F14B, F22A, F10A, &quot;
				+ &quot;F22B, F10B, F30A, F30B, F9B, F9A, F5B, F5A, F29A, F17A, F29B, F1B, F17B, F1A, F25A, F13A, &quot;
				+ &quot;F25B, F13B, F21A, F21B]&quot;; 
		//Actual order of flows
		String actualFlows = seeSprayWorkLoad.getFlowNamesInPriorityOrder().toString();
		//Compare expected with actual
		assertEquals(EXPECTED_FLOWS, actualFlows,
				&quot;Large number of alphanumeric flows in SeeSpray.txt arranged by period&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niEchyueEeyJjNOKZ7e9aA" name="testGetNodesOrderedAlphabetically" specification="_nScFEiueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String[] EXPECTED = {&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;,&quot;F&quot;,&quot;G&quot;,&quot;H&quot;,&quot;I&quot;,&quot;J&quot;,&quot;K&quot;,&quot;L&quot;};
		//order the nodes found in actualWorkLoad alphabetically
		String[] actualNodes = stressTest4WorkLoad.getNodesOrderedAlphabetically();
		
		assertTrue(Arrays.equals(EXPECTED, actualNodes), 
				&quot;An array containg all nodes found in actualWorkLoad ordered alphabetically&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niEciCueEeyJjNOKZ7e9aA" name="testGetNodesOrderedAlphabeticallyAddNumberNode" specification="_nScFFiueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String[] EXPECTED = {&quot;1&quot;,&quot;10&quot;,&quot;7&quot;,&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;,&quot;F&quot;,&quot;G&quot;,&quot;H&quot;,&quot;I&quot;,&quot;J&quot;,&quot;K&quot;,&quot;L&quot;,&quot;M&quot;,&quot;S&quot;,&quot;Z&quot;};
		String[] actualNodes;
		
		//add some nodes, some being numbers, so we can see sorters efficiency
		stressTest4WorkLoad.addNodeToFlow(&quot;F3&quot;, &quot;Z&quot;);
		stressTest4WorkLoad.addNodeToFlow(&quot;F9&quot;, &quot;S&quot;);
		stressTest4WorkLoad.addNodeToFlow(&quot;F5&quot;, &quot;M&quot;);
		stressTest4WorkLoad.addNodeToFlow(&quot;F1&quot;, &quot;1&quot;);
		stressTest4WorkLoad.addNodeToFlow(&quot;F1&quot;, &quot;7&quot;);
		stressTest4WorkLoad.addNodeToFlow(&quot;F1&quot;, &quot;10&quot;);
		
		//order the nodes found in actualWorkLoad alphabetically
		actualNodes = stressTest4WorkLoad.getNodesOrderedAlphabetically();
		
		assertTrue(Arrays.equals(EXPECTED, actualNodes), 
				&quot;An array containg all nodes found in actualWorkLoad ordered alphabetically&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niEciSueEeyJjNOKZ7e9aA" name="testGetNodesOrderedAlphabeticallyAddNodes" specification="_nScsIyueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String[] actualNodes;
		//create String array that contains the expected values
		String[] EXPECTED = {&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;,&quot;F&quot;,&quot;G&quot;,&quot;H&quot;,&quot;I&quot;,&quot;J&quot;,&quot;K&quot;,&quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;S&quot;, &quot;U&quot;, &quot;Z&quot;};
		
		//add some nodes, NOT in alphabetical order, so we can see sorters efficiency
		stressTest4WorkLoad.addNodeToFlow(&quot;F3&quot;, &quot;Z&quot;);
		stressTest4WorkLoad.addNodeToFlow(&quot;F9&quot;, &quot;S&quot;);
		stressTest4WorkLoad.addNodeToFlow(&quot;F5&quot;, &quot;U&quot;);
		stressTest4WorkLoad.addNodeToFlow(&quot;F5&quot;, &quot;M&quot;);
		stressTest4WorkLoad.addNodeToFlow(&quot;F1&quot;, &quot;N&quot;);
		//order the nodes found in actualWorkLoad alphabetically
		actualNodes = stressTest4WorkLoad.getNodesOrderedAlphabetically();
		
		assertTrue(Arrays.equals(EXPECTED, actualNodes), 
				&quot;An array containg all nodes found in actualWorkLoad ordered alphabetically&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niEciiueEeyJjNOKZ7e9aA" name="testGetFlowNamesOnce" specification="_nSdTMCueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_FLOW_NAMES = &quot;[F1, F5, F2, F4, F3, F6, F7, F8, F9, F10]&quot;;
		//Actual flow names using getFlowNames
		String actualFlowNames = Arrays.toString(stressTest4WorkLoad.getFlowNames());
		//Compare expected with actual
		assertEquals(EXPECTED_FLOW_NAMES, actualFlowNames,
				&quot;Get flow names once for stressTest4.txt&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niEciyueEeyJjNOKZ7e9aA" name="testGetFlowNamesAlphanumeric" specification="_nSdTNCueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_FLOW_NAMES = &quot;[F1A, F1B]&quot;;
		//Actual flow names using getFlowNames
		String actualFlowNames = Arrays.toString(test1WorkLoad.getFlowNames());
		//Compare expected with actual
		assertEquals(EXPECTED_FLOW_NAMES, actualFlowNames,
				&quot;Get flow names once for alphanumeric workload of Test1.txt&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niEcjCueEeyJjNOKZ7e9aA" name="testGetFlowNamesOverwrite" specification="_nSd6QyueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_FLOW_NAMES = &quot;[F1, F5, F2, F4, F3, F6, F7, F8, F9, F10]&quot;;
		//Actual flow names using getFlowNames multiple times
		String actualFlowNames = Arrays.toString(stressTest4WorkLoad.getFlowNames());
		//Overwrite itself using same method again
		actualFlowNames = Arrays.toString(stressTest4WorkLoad.getFlowNames());
		//Compare expected with actual
		assertEquals(EXPECTED_FLOW_NAMES, actualFlowNames,
				&quot;Get flow names of stressTest4.txt after already getting them once&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niEcjSueEeyJjNOKZ7e9aA" name="testGetFlowNamesLargeAlphanumeric" specification="_nSehUSueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_FLOW_NAMES = &quot;[F1A, F1B, F2A, F2B, F3A, F3B, F4A, F4B, F5A, F5B, F6A, F6B, F7A, F7B, &quot;
				+ &quot;F8A, F8B, F9A, F9B, F10A, F10B, F11A, F11B, F12A, F12B, F13A, F13B, F14A, F14B, F15A, F15B, &quot;
				+ &quot;F16A, F16B, F17A, F17B, F18A, F18B, F19A, F19B, F20A, F20B, F21A, F21B, F22A, F22B, F23A, F23B, &quot;
				+ &quot;F24A, F24B, F25A, F25B, F26A, F26B, F27A, F27B, F28A, F28B, F29A, F29B, F30A, F30B]&quot;;
		//Actual flow names using getFlowNames
		String actualFlowNames = Arrays.toString(seeSprayWorkLoad.getFlowNames());
		//Compare expected with actual
		assertEquals(EXPECTED_FLOW_NAMES, actualFlowNames,
				&quot;Get flow names once for large alphanumeric workload of SeeSpray.txt&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niEcjiueEeyJjNOKZ7e9aA" name="testGetNodeIndex" specification="_nSehVSueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer[] ACTUAL_INDEX = {3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11};
		//For this test, I'm sorting nodes found in actualWorkLoad alphabetically
		String[] nodesInDoc = stressTest4WorkLoad.getNodesOrderedAlphabetically();
		//I'm then putting it's corresponding index into an Integer array
		Integer[] nodeIndexes = new Integer[nodesInDoc.length];
	
		for(int i = 0; i &lt; nodesInDoc.length; i++) {
			//putting letters corresponding index into nodeIndexes
			nodeIndexes[i] = stressTest4WorkLoad.getNodeIndex(nodesInDoc[i]);
		}
		
		//check if the arrays are equal
		assertTrue(Arrays.equals(nodeIndexes, ACTUAL_INDEX), 
				&quot;An array containg the indexes of nodes, corresponding to the name of the &quot;
				+ &quot;Node in alphabetical order&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niEcjyueEeyJjNOKZ7e9aA" name="testGetNodeIndexExisting" specification="_nSfIYyueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer[] ACTUAL_INDEXES = {3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11};
		//For this test, I'm sorting nodes found in actualWorkLoad alphabetically
		String[] nodesInDoc = stressTest4WorkLoad.getNodesOrderedAlphabetically();
		//I'm then putting it's corresponding index into an Integer array
		Integer[] nodeIndexes = new Integer[nodesInDoc.length];
		
		/* adding an already existing node, index should remain the same,
		 * for this example adding A who's index should remain 3*/
		stressTest4WorkLoad.addNodeToFlow(&quot;F1&quot;, &quot;A&quot;); //flow F1 does not have a node A
		
		for(int i = 0; i &lt; nodesInDoc.length; i++) {
			//putting letters corresponding index into nodeIndexes
			nodeIndexes[i] = stressTest4WorkLoad.getNodeIndex(nodesInDoc[i]);
		}
		
		
		//check if the arrays are equal
		assertTrue(Arrays.equals(nodeIndexes, ACTUAL_INDEXES), 
				&quot;An array containg the indexes of nodes, corresponding to the name of the &quot;
				+ &quot;Node in alphabetical order&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niFDkCueEeyJjNOKZ7e9aA" name="testGetNodeIndexAddNodes" specification="_nSfvciueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer[] ACTUAL_INDEXES = {3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 13, 15, 12};
		String[] nodesInDoc;
		Integer[] nodeIndexes;
		
		//Going to add some nodes to make sure indexes increment correctly
		stressTest4WorkLoad.addNodeToFlow(&quot;F5&quot;, &quot;Z&quot;);
		stressTest4WorkLoad.addNodeToFlow(&quot;F3&quot;, &quot;S&quot;);
		stressTest4WorkLoad.addNodeToFlow(&quot;F9&quot;, &quot;M&quot;);
		stressTest4WorkLoad.addNodeToFlow(&quot;F2&quot;, &quot;X&quot;);
						
		//For this test, I'm sorting nodes found in actualWorkLoad alphabetically
		nodesInDoc = stressTest4WorkLoad.getNodesOrderedAlphabetically();
		//I'm then putting it's corresponding index into an Integer array
		nodeIndexes = new Integer[nodesInDoc.length];
		
		for(int i = 0; i &lt; nodesInDoc.length; i++) {
			//putting letters corresponding index into nodeIndexes
			nodeIndexes[i] = stressTest4WorkLoad.getNodeIndex(nodesInDoc[i]);
		}
		
		
		//check if the arrays are equal
		assertTrue(Arrays.equals(nodeIndexes, ACTUAL_INDEXES), 
				&quot;An array containg the indexes of nodes, corresponding to the name of the &quot;
				+ &quot;Node in alphabetical order&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niFDkSueEeyJjNOKZ7e9aA" name="testGetNodesInFlowOnce" specification="_nSfvdiueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_NODES = &quot;[A, B, C, D, E]&quot;;
		//Actual nodes in flow 'F5' of stressTest4.txt
		String actualNodes = Arrays.toString(stressTest4WorkLoad.getNodesInFlow(&quot;F5&quot;));
		//Compare actual with expected
		assertEquals(EXPECTED_NODES, actualNodes,
				&quot;Get nodes in flow F5 of stressTest4.txt&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niFDkiueEeyJjNOKZ7e9aA" name="testGetNodesInFlowMultiple" specification="_nSgWgyueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>String EXPECTED_NODES_F1 = &quot;[B, C, D]&quot;;
		String EXPECTED_NODES_F2 = &quot;[C, D, E, F, G, H, I]&quot;;
		String EXPECTED_NODES_F5 = &quot;[A, B, C, D, E]&quot;;
		//Actual nodes in flow 'F1' of stressTest4.txt
		String actualNodesF1 = Arrays.toString(stressTest4WorkLoad.getNodesInFlow(&quot;F1&quot;));
		//Actual nodes in flow 'F2' of stressTest4.txt
		String actualNodesF2 = Arrays.toString(stressTest4WorkLoad.getNodesInFlow(&quot;F2&quot;));
		//Actual nodes in flow 'F5' of stressTest4.txt
		String actualNodesF5 = Arrays.toString(stressTest4WorkLoad.getNodesInFlow(&quot;F5&quot;));
		//Use arrays to compare all results at once
		String [] expectedNodesArray = {EXPECTED_NODES_F1, EXPECTED_NODES_F2, EXPECTED_NODES_F5};
		String [] actualNodesArray = {actualNodesF1, actualNodesF2, actualNodesF5};
		//Convert arrays to strings
		String expectedNodes = Arrays.toString(expectedNodesArray);
		String actualNodes = Arrays.toString(actualNodesArray);
		//Compare actual with expected
		assertEquals(expectedNodes, actualNodes.toString(),
				&quot;Get nodes in flows F1, F2, and F5 of stressTest4.txt&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niFDkyueEeyJjNOKZ7e9aA" name="testGetHyperPeriod" specification="_nSgWhyueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_HYPERPERIOD = 300;
		Integer actualHyperPeriod;
		//hyperPeriod just means the LCM of all the distinct periods//
		//for this workLoad we should get a hyper period of 300 --> the LCM of (20, 75, 50, 100)
		actualHyperPeriod = stressTest4WorkLoad.getHyperPeriod();
		
		assertEquals(EXPECTED_HYPERPERIOD, actualHyperPeriod, &quot;actualWorkLoad's hyperPeriod returned&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niFDlCueEeyJjNOKZ7e9aA" name="testGetHyperPeriodAddFlow" specification="_nSg9kyueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_HYPERPERIOD = 2100;
		Integer actualHyperPeriod;
		//now we are going to add a flow and set its period
		stressTest4WorkLoad.addFlow(&quot;F13&quot;);
		stressTest4WorkLoad.setFlowPeriod(&quot;F13&quot;, 35);
		//our new expectedHyperPeriod should be 2100 -> LCM of (20, 75, 50, 100, 35)
		actualHyperPeriod = stressTest4WorkLoad.getHyperPeriod();
		
		assertEquals(EXPECTED_HYPERPERIOD, actualHyperPeriod, 
				&quot;hyperPeriod returned should reflect the addition of a new flow, 'F13'&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niFDlSueEeyJjNOKZ7e9aA" name="testGetHyperPeriodNoSpecifiedPeriods" specification="_nShkoiueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>WorkLoad actualWorkLoad = new WorkLoad(3.0, 2.0, &quot;Example2.txt&quot;);
		//when flow periods not specified all periods default to 100, making LCM of all periods 100
		Integer expectedHyperPeriod = 100;
		Integer actualHyperPeriod = actualWorkLoad.getHyperPeriod();
		
		assertEquals(expectedHyperPeriod, actualHyperPeriod, 
				&quot;hyperPeriod of a WorkLoad who's flows do not explicityly have periods listed&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niFDliueEeyJjNOKZ7e9aA" name="testGetTotalCommunicationCostOnce" specification="_nShkpiueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_COMMUNICATION_COST = 2;
		//Get actual communication cost
		Integer actualTotalCommunicationCost = stressTest4WorkLoad.getTotalCommunicationCost(&quot;F1&quot;);
		//Compare actual communication cost of flow 'F1' with expected
		assertEquals(EXPECTED_COMMUNICATION_COST, actualTotalCommunicationCost,
				&quot;Get flow F1's total communication cost in stressTest4.txt&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niFDlyueEeyJjNOKZ7e9aA" name="testGetTotalCommunicationCostAlphanumeric" specification="_nSiLsyueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_COMMUNICATION_COST = 1;
		//Get actual communication cost of flow 'F1A'
		Integer actualTotalCommunicationCost = test1WorkLoad.getTotalCommunicationCost(&quot;F1A&quot;);
		//Compare actual communication cost of flow 'F1' with expected
		assertEquals(EXPECTED_COMMUNICATION_COST, actualTotalCommunicationCost,
				&quot;Get flow F1A's total communication cost from alphanumeric workload of Test1.txt&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niFDmCueEeyJjNOKZ7e9aA" name="testGetTotalCommunicationCostMultiple" specification="_nSiLtyueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_COMMUNICATION_COST_F1 = 2;
		//Expected communication cost of flow 'F2' should be 6
		Integer EXPECTED_COMMUNICATION_COST_F2 = 6;
		//Expected communication cost of flow 'F3' should be 5
		Integer EXPECTED_COMMUNICATION_COST_F3 = 5;
		//Put expected results in array
		Integer [] expectedTotalCommunicationCostArray = {EXPECTED_COMMUNICATION_COST_F1,
				EXPECTED_COMMUNICATION_COST_F2, EXPECTED_COMMUNICATION_COST_F3};
		//Put actual results in array
		Integer [] actualTotalCommunicationCostArray = {stressTest4WorkLoad.getTotalCommunicationCost(&quot;F1&quot;),
				stressTest4WorkLoad.getTotalCommunicationCost(&quot;F2&quot;), stressTest4WorkLoad.getTotalCommunicationCost(&quot;F3&quot;)};
		//Convert arrays to strings
		String expectedTotalCommunicationCost = Arrays.toString(expectedTotalCommunicationCostArray);
		String actualTotalCommunicationCost = Arrays.toString(actualTotalCommunicationCostArray);
		//Compare actual communication cost of flows 'F1', 'F2', and 'F3' with expected
		assertEquals(expectedTotalCommunicationCost, actualTotalCommunicationCost,
				&quot;Get flows F1, F2, and F3's total communication cost from stressTest4.txt&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niFDmSueEeyJjNOKZ7e9aA" name="testGetLinkCommunicationCosts" specification="_nSiywyueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer[] EXPECTED_COSTS = {1, 1, 0};
		Integer[] linkCosts;
		/* In linkCommunicationCosts each node has a cost depending on how many other 
		 * nodes it communicates with. It's expected that each node in the flow will 
		 * have a cost of 1, EXCEPT for the last one who's cost is 0, because it doesn't
		 * communicate with anyone, all these values are stored in an array*/
		//so F1's array should look like [1,1,0] b/c it has three total nodes in it's flow
		linkCosts = stressTest4WorkLoad.getLinkCommunicationCosts(&quot;F1&quot;);
		
		assertTrue(Arrays.equals(EXPECTED_COSTS, linkCosts), 
				&quot;LinkCommunicationCost of flow, 'F1' returned&quot;);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niFDmiueEeyJjNOKZ7e9aA" name="testGetLinkCommunicationCostsOneNode" specification="_nSjZ0iueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer[] EXPECTED_COSTS = {};
		Integer[] linkCosts;
		//add flow
		stressTest4WorkLoad.addFlow(&quot;F17&quot;);
		//add one node to that flow
		stressTest4WorkLoad.addNodeToFlow(&quot;F17&quot;, &quot;A&quot;);
		//with one node that doesn't communicate to any other node the array should be empty --> I believe
		linkCosts = stressTest4WorkLoad.getLinkCommunicationCosts(&quot;F17&quot;);
		
		assertTrue(Arrays.equals(EXPECTED_COSTS, linkCosts), 
				&quot;LinkCommunicationCost of flow, 'F17' returned&quot;);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niFDmyueEeyJjNOKZ7e9aA" name="testMaxFlowLengthOnce" specification="_nSjZ1iueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_MAX_FLOW_LENGTH = 8;
		//Find actual using function
		Integer actualMaxFlowLength = stressTest4WorkLoad.maxFlowLength();
		//Compare expected with actual
		assertEquals(EXPECTED_MAX_FLOW_LENGTH, actualMaxFlowLength,
				&quot;Max flow length of a workload of stressTest4.txt&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niFDnCueEeyJjNOKZ7e9aA" name="testMaxFlowLengthOverwrite" specification="_nSkA4yueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_MAX_FLOW_LENGTH = 8;
		//Find actual using function twice, see if it changes anything
		Integer actualMaxFlowLength = stressTest4WorkLoad.maxFlowLength();
		//Overwrite itself using method again
		actualMaxFlowLength = stressTest4WorkLoad.maxFlowLength();
		//Compare expected with actual
		assertEquals(EXPECTED_MAX_FLOW_LENGTH, actualMaxFlowLength,
				&quot;Max flow length of a workload of stressTest4.txt using the method twice&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niFqoCueEeyJjNOKZ7e9aA" name="testMaxFlowLengthAlphanumeric" specification="_nSkA5yueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_MAX_FLOW_LENGTH = 2;
		//Find actual using function twice, see if it changes anything
		Integer actualMaxFlowLength = test1WorkLoad.maxFlowLength();
		//Compare expected with actual
		assertEquals(EXPECTED_MAX_FLOW_LENGTH, actualMaxFlowLength,
				&quot;Max flow length of a workload of Test1.txt with alphanumeric flows&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niFqoSueEeyJjNOKZ7e9aA" name="testMaxFlowLengthLargeAlphanumeric" specification="_nSkn8yueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>Integer EXPECTED_MAX_FLOW_LENGTH = 2;
		//Find actual max flow length
		Integer actualMaxFlowLength = seeSprayWorkLoad.maxFlowLength();
		//Compare expected with actual
		assertEquals(EXPECTED_MAX_FLOW_LENGTH, actualMaxFlowLength,
				&quot;Max flow length of a workload of SeeSpray.txt with a large number of flows&quot;);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nSTiMCueEeyJjNOKZ7e9aA" name="setUp" method="_niDOaiueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSUJQSueEeyJjNOKZ7e9aA" name="testAddFlow" visibility="package" method="_niDOayueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSUJRSueEeyJjNOKZ7e9aA" name="testAddFlowMultiple" visibility="package" method="_niD1cCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSUwUyueEeyJjNOKZ7e9aA" name="testAddNodeToFlowOnce" visibility="package" method="_niD1cSueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSVXYiueEeyJjNOKZ7e9aA" name="testAddNodeToFlowMultiple" visibility="package" method="_niD1ciueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSVXZiueEeyJjNOKZ7e9aA" name="testAddNodeToFlowAlphanumeric" visibility="package" method="_niD1cyueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSV-cyueEeyJjNOKZ7e9aA" name="testGetFlowPriorityStringString" visibility="package" method="_niD1dCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSWlgiueEeyJjNOKZ7e9aA" name="testGetFlowPriorityAddedNode" visibility="package" method="_niD1dSueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSWlhiueEeyJjNOKZ7e9aA" name="testGetFlowPriorityString" visibility="package" method="_niD1diueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSXMkiueEeyJjNOKZ7e9aA" name="testGetFlowPriorityStringAddedFlow" visibility="package" method="_niD1dyueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSXzoCueEeyJjNOKZ7e9aA" name="testSetFlowPriority" visibility="package" method="_niD1eCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSXzpCueEeyJjNOKZ7e9aA" name="testSetFlowDeadlineOnce" visibility="package" method="_niD1eSueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSYasiueEeyJjNOKZ7e9aA" name="testSetFlowDeadlineOverwrite" visibility="package" method="_niD1eiueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSYatiueEeyJjNOKZ7e9aA" name="testSetFlowDeadlineAlphanumeric" visibility="package" method="_niD1eyueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSZBwyueEeyJjNOKZ7e9aA" name="testGetFlowDeadlineOnce" visibility="package" method="_niD1fCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSZBxyueEeyJjNOKZ7e9aA" name="testGetFlowDeadlineOnceAlphanumeric" visibility="package" method="_niD1fSueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSZo0yueEeyJjNOKZ7e9aA" name="testGetFlowDeadlineMultiple" visibility="package" method="_niEcgCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSZo1CueEeyJjNOKZ7e9aA" name="testGetFlowTxPerLink" visibility="package" method="_niEcgSueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSaP4yueEeyJjNOKZ7e9aA" name="testGetFlowTxPerLinkNewFlowNoNodes" visibility="package" method="_niEcgiueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSaP5yueEeyJjNOKZ7e9aA" name="testSetFlowsInRMorderOnce" visibility="package" method="_niEcgyueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSa28yueEeyJjNOKZ7e9aA" name="testSetFlowsInRMorderOverwrite" visibility="package" method="_niEchCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSbeACueEeyJjNOKZ7e9aA" name="testSetFlowsInRMorderMultiple" visibility="package" method="_niEchSueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSbeBCueEeyJjNOKZ7e9aA" name="testSetFlowsInRMorderLargeAlphanumeric" visibility="package" method="_niEchiueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nScFEiueEeyJjNOKZ7e9aA" name="testGetNodesOrderedAlphabetically" visibility="package" method="_niEchyueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nScFFiueEeyJjNOKZ7e9aA" name="testGetNodesOrderedAlphabeticallyAddNumberNode" visibility="package" method="_niEciCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nScsIyueEeyJjNOKZ7e9aA" name="testGetNodesOrderedAlphabeticallyAddNodes" visibility="package" method="_niEciSueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSdTMCueEeyJjNOKZ7e9aA" name="testGetFlowNamesOnce" visibility="package" method="_niEciiueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSdTNCueEeyJjNOKZ7e9aA" name="testGetFlowNamesAlphanumeric" visibility="package" method="_niEciyueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSd6QyueEeyJjNOKZ7e9aA" name="testGetFlowNamesOverwrite" visibility="package" method="_niEcjCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSehUSueEeyJjNOKZ7e9aA" name="testGetFlowNamesLargeAlphanumeric" visibility="package" method="_niEcjSueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSehVSueEeyJjNOKZ7e9aA" name="testGetNodeIndex" visibility="package" method="_niEcjiueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSfIYyueEeyJjNOKZ7e9aA" name="testGetNodeIndexExisting" visibility="package" method="_niEcjyueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSfvciueEeyJjNOKZ7e9aA" name="testGetNodeIndexAddNodes" visibility="package" method="_niFDkCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSfvdiueEeyJjNOKZ7e9aA" name="testGetNodesInFlowOnce" visibility="package" method="_niFDkSueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSgWgyueEeyJjNOKZ7e9aA" name="testGetNodesInFlowMultiple" visibility="package" method="_niFDkiueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSgWhyueEeyJjNOKZ7e9aA" name="testGetHyperPeriod" visibility="package" method="_niFDkyueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSg9kyueEeyJjNOKZ7e9aA" name="testGetHyperPeriodAddFlow" visibility="package" method="_niFDlCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nShkoiueEeyJjNOKZ7e9aA" name="testGetHyperPeriodNoSpecifiedPeriods" visibility="package" method="_niFDlSueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nShkpiueEeyJjNOKZ7e9aA" name="testGetTotalCommunicationCostOnce" visibility="package" method="_niFDliueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSiLsyueEeyJjNOKZ7e9aA" name="testGetTotalCommunicationCostAlphanumeric" visibility="package" method="_niFDlyueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSiLtyueEeyJjNOKZ7e9aA" name="testGetTotalCommunicationCostMultiple" visibility="package" method="_niFDmCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSiywyueEeyJjNOKZ7e9aA" name="testGetLinkCommunicationCosts" visibility="package" method="_niFDmSueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSjZ0iueEeyJjNOKZ7e9aA" name="testGetLinkCommunicationCostsOneNode" visibility="package" method="_niFDmiueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSjZ1iueEeyJjNOKZ7e9aA" name="testMaxFlowLengthOnce" visibility="package" method="_niFDmyueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSkA4yueEeyJjNOKZ7e9aA" name="testMaxFlowLengthOverwrite" visibility="package" method="_niFDnCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSkA5yueEeyJjNOKZ7e9aA" name="testMaxFlowLengthAlphanumeric" visibility="package" method="_niFqoCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSkn8yueEeyJjNOKZ7e9aA" name="testMaxFlowLengthLargeAlphanumeric" visibility="package" method="_niFqoSueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nSnrQCueEeyJjNOKZ7e9aA" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_nhIBUCueEeyJjNOKZ7e9aA" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nhIBUSueEeyJjNOKZ7e9aA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhIBUiueEeyJjNOKZ7e9aA" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nhIBUyueEeyJjNOKZ7e9aA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhIBVCueEeyJjNOKZ7e9aA" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nhIBVSueEeyJjNOKZ7e9aA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhIoYCueEeyJjNOKZ7e9aA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nhIoYSueEeyJjNOKZ7e9aA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhIoYiueEeyJjNOKZ7e9aA" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nhIoYyueEeyJjNOKZ7e9aA" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhIoZCueEeyJjNOKZ7e9aA" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhIoZiueEeyJjNOKZ7e9aA" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhJPcCueEeyJjNOKZ7e9aA" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhJPcSueEeyJjNOKZ7e9aA" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhJPciueEeyJjNOKZ7e9aA" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhJPdCueEeyJjNOKZ7e9aA" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhJ2gCueEeyJjNOKZ7e9aA" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhJ2giueEeyJjNOKZ7e9aA" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhJ2gyueEeyJjNOKZ7e9aA" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_nhJ2hCueEeyJjNOKZ7e9aA" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_nhJ2hSueEeyJjNOKZ7e9aA" name="predecessor" type="_nSnrQCueEeyJjNOKZ7e9aA" association="_niWwYSueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_nhJ2hiueEeyJjNOKZ7e9aA" name="endTimes" visibility="private" type="_nQbS5CueEeyJjNOKZ7e9aA" association="_njDT8yueEeyJjNOKZ7e9aA"/>
              <ownedAttribute xmi:id="_nhKdkiueEeyJjNOKZ7e9aA" name="subObjects" type="_nezGEiueEeyJjNOKZ7e9aA" isReadOnly="true" association="_njD7ASueEeyJjNOKZ7e9aA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niFqoiueEeyJjNOKZ7e9aA" name="SchedulableObject" specification="_nSpgcCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niFqoyueEeyJjNOKZ7e9aA" type="_nSnrQCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();
		setNextReleaseTime(0); // initialize parameters
		this.lastUpdateTime = -1; // reset lastUpdate 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niGRsCueEeyJjNOKZ7e9aA" name="SchedulableObject" specification="_neztISueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niGRsSueEeyJjNOKZ7e9aA" name="obj" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niGRsiueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niGRsyueEeyJjNOKZ7e9aA" type="_nSnrQCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();
		this.priority = obj.getPriority();
		this.period = obj.getPeriod();
		this.deadline = obj.getDeadline();
		this.phase = obj.getPhase();
		this.startTime = obj.getStartTime();
		this.endTime = obj.getEndTime();
		this.releaseTime = obj.getReleaseTime(); // initialize parameters
		this.lastUpdateTime = time; // reset lastUpdate 
		this.predecessor = obj.getPredecessor();
		this.endTimes = new PriorityQueue&lt;Integer>(); 
		this.endTimes.addAll(obj.getAllEndTimes());
		this.subObjects = new LinkedList&lt;SchedulableObject>();
		this.subObjects.addAll(obj.getSubObjects());
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niGRtCueEeyJjNOKZ7e9aA" name="SchedulableObject" specification="_nSqHgCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niGRtSueEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niGRtiueEeyJjNOKZ7e9aA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niGRtyueEeyJjNOKZ7e9aA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niGRuCueEeyJjNOKZ7e9aA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niGRuSueEeyJjNOKZ7e9aA" type="_nSnrQCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();
		this.priority = priority;
		this.period = period;
		this.deadline = deadline;
		this.phase = phase;
		setNextReleaseTime(0); // initialize parameters
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niGRuiueEeyJjNOKZ7e9aA" name="SchedulableObject" specification="_nSqHiCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niGRuyueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niGRvCueEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niGRvSueEeyJjNOKZ7e9aA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niGRviueEeyJjNOKZ7e9aA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niGRvyueEeyJjNOKZ7e9aA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niGRwCueEeyJjNOKZ7e9aA" type="_nSnrQCueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();
		this.name = name;
		this.priority = priority;
		this.period = period;
		this.deadline = deadline;
		this.phase = phase;
		setNextReleaseTime(0); // initialize parameters
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niGRwSueEeyJjNOKZ7e9aA" name="setDefaultParameters" specification="_nSqulyueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>this.name = UNKNOWN;
		this.priority = DEFAULT;
		this.period = DEFAULT_PERIOD;
		this.deadline = DEFAULT_DEADLINE;
		this.phase = DEFAULT;
		this.startTime = BEFORE_START;
		this.endTime = BEFORE_START;
		this.predecessor = null; 
		this.endTimes = new PriorityQueue&lt;Integer>(); 
		this.subObjects = new LinkedList&lt;SchedulableObject>();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niGRwiueEeyJjNOKZ7e9aA" name="getAllEndTimes" specification="_nSqumCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niGRwyueEeyJjNOKZ7e9aA" type="_nQbS5CueEeyJjNOKZ7e9aA" direction="return"/>
                <language>java</language>
                <body>return endTimes;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niGRxCueEeyJjNOKZ7e9aA" name="addToEndTimes" specification="_nSrVoSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niGRxSueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q
		 * so that we can track predecessor endTimes
		 * and make sure successors don't start before 
		 * predecessors
		 */
		endTimes.add(time);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niGRxiueEeyJjNOKZ7e9aA" name="peekEndTimes" specification="_nSrVoyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niGRxyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niGRyCueEeyJjNOKZ7e9aA" name="pollEndTimes" specification="_nSr8sSueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>endTimes.poll();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niGRySueEeyJjNOKZ7e9aA" name="addSubObject" specification="_ne0UNCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niGRyiueEeyJjNOKZ7e9aA" name="obj" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <language>java</language>
                <body>subObjects.add(obj);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niG4wCueEeyJjNOKZ7e9aA" name="getName" specification="_nSr8siueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niG4wSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niG4wiueEeyJjNOKZ7e9aA" name="setName" specification="_nSr8tCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niG4wyueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niG4xCueEeyJjNOKZ7e9aA" name="getReleaseTime" specification="_nSsjwCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niG4xSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niG4xiueEeyJjNOKZ7e9aA" name="getPhase" specification="_nSsjwiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niG4xyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niG4yCueEeyJjNOKZ7e9aA" name="getStartTime" specification="_nSsjxCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niG4ySueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niG4yiueEeyJjNOKZ7e9aA" name="setEndTime" specification="_nStK0CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niG4yyueEeyJjNOKZ7e9aA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niG4zCueEeyJjNOKZ7e9aA" name="setStartTime" specification="_nStK0iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niG4zSueEeyJjNOKZ7e9aA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niG4ziueEeyJjNOKZ7e9aA" name="setReleaseTime" specification="_nStK1CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niG4zyueEeyJjNOKZ7e9aA" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niG40CueEeyJjNOKZ7e9aA" name="setPeriod" specification="_nStx4CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niG40SueEeyJjNOKZ7e9aA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niG40iueEeyJjNOKZ7e9aA" name="setPhase" specification="_nStx4iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niG40yueEeyJjNOKZ7e9aA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niG41CueEeyJjNOKZ7e9aA" name="setNextReleaseTime" specification="_nStx5CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niG41SueEeyJjNOKZ7e9aA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {
			// released every (j*period)+phase, for all j >=0
			Integer j = 0;
			if (period > 0) {
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor
			} 
			Integer nextRelease = (j*period)+phase ;
			releaseTime = nextRelease;
			lastUpdateTime = currentTime;
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niHf0CueEeyJjNOKZ7e9aA" name="maxPhaseComparison" specification="_ne0UNiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niHf0SueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niHf0iueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niHf0yueEeyJjNOKZ7e9aA" name="maxPhaseComparison" specification="_ne07QCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niHf1CueEeyJjNOKZ7e9aA" name="obj1" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niHf1SueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niHf1iueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niHf1yueEeyJjNOKZ7e9aA" name="deadlineComparison" specification="_ne07RCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niHf2CueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niHf2SueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niHf2iueEeyJjNOKZ7e9aA" name="deadlineComparison" specification="_ne07RyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niHf2yueEeyJjNOKZ7e9aA" name="obj1" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niHf3CueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niHf3SueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niHf3iueEeyJjNOKZ7e9aA" name="periodComparison" specification="_ne1iUSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niHf3yueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niHf4CueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niHf4SueEeyJjNOKZ7e9aA" name="periodComparison" specification="_ne1iVCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niHf4iueEeyJjNOKZ7e9aA" name="obj1" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niHf4yueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niHf5CueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niHf5SueEeyJjNOKZ7e9aA" name="priorityComparison" specification="_ne1iWCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niHf5iueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niHf5yueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niHf6CueEeyJjNOKZ7e9aA" name="priorityComparison" specification="_ne2JYCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niHf6SueEeyJjNOKZ7e9aA" name="obj1" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niHf6iueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niHf6yueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niIG4CueEeyJjNOKZ7e9aA" name="releaseTimeComparison" specification="_ne2JZCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niIG4SueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niIG4iueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niIG4yueEeyJjNOKZ7e9aA" name="releaseTimeComparison" specification="_ne2JZyueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niIG5CueEeyJjNOKZ7e9aA" name="obj1" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niIG5SueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niIG5iueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niIG5yueEeyJjNOKZ7e9aA" name="LatestReleaseTimeComparison" specification="_ne2wcSueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niIG6CueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niIG6SueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niIG6iueEeyJjNOKZ7e9aA" name="LatestReleaseTimeComparison" specification="_ne2wdCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niIG6yueEeyJjNOKZ7e9aA" name="obj1" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niIG7CueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_niIG7SueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niIG7iueEeyJjNOKZ7e9aA" name="compareAscendingOrder" specification="_nSvnECueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niIG7yueEeyJjNOKZ7e9aA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niIG8CueEeyJjNOKZ7e9aA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niIG8SueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)
			return -1; 
		else if (v1 > v2)
			return 1; 
		return 0; // tied: values are the same 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niIG8iueEeyJjNOKZ7e9aA" name="compareDescendingOrder" specification="_nSvnFCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niIG8yueEeyJjNOKZ7e9aA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niIG9CueEeyJjNOKZ7e9aA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_niIG9SueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)
			return 1; 
		else if (v1 > v2)
			return -1; 
		return 0; // tied: values are the same 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niIG9iueEeyJjNOKZ7e9aA" name="print" specification="_nSwOICueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_niIG9yueEeyJjNOKZ7e9aA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);
		print();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_niIG-CueEeyJjNOKZ7e9aA" name="print" specification="_nSwOIiueEeyJjNOKZ7e9aA">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nSpgcCueEeyJjNOKZ7e9aA" name="SchedulableObject" visibility="package" method="_niFqoiueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nSpgcSueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nSpgciueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nSpgcyueEeyJjNOKZ7e9aA" type="_nSnrQCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nSqHgCueEeyJjNOKZ7e9aA" name="SchedulableObject" visibility="package" method="_niGRtCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nSqHhSueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nSqHhiueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nSqHgSueEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nSqHgiueEeyJjNOKZ7e9aA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nSqHgyueEeyJjNOKZ7e9aA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nSqHhCueEeyJjNOKZ7e9aA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nSqHhyueEeyJjNOKZ7e9aA" type="_nSnrQCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nSqHiCueEeyJjNOKZ7e9aA" name="SchedulableObject" visibility="package" method="_niGRuiueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_nSqulCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nSqulSueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nSqHiSueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nSqukCueEeyJjNOKZ7e9aA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nSqukSueEeyJjNOKZ7e9aA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nSqukiueEeyJjNOKZ7e9aA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nSqukyueEeyJjNOKZ7e9aA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nSquliueEeyJjNOKZ7e9aA" type="_nSnrQCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nSqulyueEeyJjNOKZ7e9aA" name="setDefaultParameters" visibility="private" method="_niGRwSueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSqumCueEeyJjNOKZ7e9aA" name="getAllEndTimes" method="_niGRwiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niXXcSueEeyJjNOKZ7e9aA">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_ne0UMyueEeyJjNOKZ7e9aA" type="_nQbS5CueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nSrVoSueEeyJjNOKZ7e9aA" name="addToEndTimes" method="_niGRxCueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nSrVoiueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSrVoyueEeyJjNOKZ7e9aA" name="peekEndTimes" method="_niGRxiueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nSr8sCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSr8sSueEeyJjNOKZ7e9aA" name="pollEndTimes" method="_niGRyCueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_nSr8siueEeyJjNOKZ7e9aA" name="getName" method="_niG4wCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niXXciueEeyJjNOKZ7e9aA">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_nSr8syueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSr8tCueEeyJjNOKZ7e9aA" name="setName" method="_niG4wiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niXXcyueEeyJjNOKZ7e9aA">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_nSr8tSueEeyJjNOKZ7e9aA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSsjwCueEeyJjNOKZ7e9aA" name="getReleaseTime" method="_niG4xCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niXXdCueEeyJjNOKZ7e9aA">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_nSsjwSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSsjwiueEeyJjNOKZ7e9aA" name="getPhase" method="_niG4xiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niXXdSueEeyJjNOKZ7e9aA">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_nSsjwyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSsjxCueEeyJjNOKZ7e9aA" name="getStartTime" method="_niG4yCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niXXdiueEeyJjNOKZ7e9aA">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_nSsjxSueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nStK0CueEeyJjNOKZ7e9aA" name="setEndTime" method="_niG4yiueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niXXdyueEeyJjNOKZ7e9aA">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_nStK0SueEeyJjNOKZ7e9aA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nStK0iueEeyJjNOKZ7e9aA" name="setStartTime" method="_niG4zCueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niXXeCueEeyJjNOKZ7e9aA">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_nStK0yueEeyJjNOKZ7e9aA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nStK1CueEeyJjNOKZ7e9aA" name="setReleaseTime" method="_niG4ziueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niXXeSueEeyJjNOKZ7e9aA">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_nStK1SueEeyJjNOKZ7e9aA" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nStx4CueEeyJjNOKZ7e9aA" name="setPeriod" method="_niG40CueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niXXeiueEeyJjNOKZ7e9aA">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_nStx4SueEeyJjNOKZ7e9aA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nStx4iueEeyJjNOKZ7e9aA" name="setPhase" method="_niG40iueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niXXeyueEeyJjNOKZ7e9aA">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_nStx4yueEeyJjNOKZ7e9aA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nStx5CueEeyJjNOKZ7e9aA" name="setNextReleaseTime" method="_niG41CueEeyJjNOKZ7e9aA">
                <ownedComment xmi:id="_niXXfCueEeyJjNOKZ7e9aA">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_nStx5SueEeyJjNOKZ7e9aA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSvnECueEeyJjNOKZ7e9aA" name="compareAscendingOrder" method="_niIG7iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nSvnESueEeyJjNOKZ7e9aA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nSvnEiueEeyJjNOKZ7e9aA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nSvnEyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSvnFCueEeyJjNOKZ7e9aA" name="compareDescendingOrder" method="_niIG8iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nSvnFSueEeyJjNOKZ7e9aA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nSvnFiueEeyJjNOKZ7e9aA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nSvnFyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSwOICueEeyJjNOKZ7e9aA" name="print" method="_niIG9iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_nSwOISueEeyJjNOKZ7e9aA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nSwOIiueEeyJjNOKZ7e9aA" name="print" method="_niIG-CueEeyJjNOKZ7e9aA"/>
              <ownedOperation xmi:id="_neztISueEeyJjNOKZ7e9aA" name="SchedulableObject" visibility="package" method="_niGRsCueEeyJjNOKZ7e9aA">
                <eAnnotations xmi:id="_ne0UMCueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ne0UMSueEeyJjNOKZ7e9aA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_niXXcCueEeyJjNOKZ7e9aA">
                  <body>Constructor that creates a copy of schedulable 
	 * parameters of the input obj, but setting its
	 * lastUpdateTime to input time.
	 * 
	 * @param obj
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_neztIiueEeyJjNOKZ7e9aA" name="obj" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_neztIyueEeyJjNOKZ7e9aA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ne0UMiueEeyJjNOKZ7e9aA" type="_nSnrQCueEeyJjNOKZ7e9aA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ne0UNCueEeyJjNOKZ7e9aA" name="addSubObject" method="_niGRySueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ne0UNSueEeyJjNOKZ7e9aA" name="obj" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ne0UNiueEeyJjNOKZ7e9aA" name="maxPhaseComparison" method="_niHf0CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ne0UNyueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ne0UOCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ne07QCueEeyJjNOKZ7e9aA" name="maxPhaseComparison" method="_niHf0yueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ne07QSueEeyJjNOKZ7e9aA" name="obj1" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ne07QiueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ne07QyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ne07RCueEeyJjNOKZ7e9aA" name="deadlineComparison" method="_niHf1yueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ne07RSueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ne07RiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ne07RyueEeyJjNOKZ7e9aA" name="deadlineComparison" method="_niHf2iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ne07SCueEeyJjNOKZ7e9aA" name="obj1" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ne07SSueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ne1iUCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ne1iUSueEeyJjNOKZ7e9aA" name="periodComparison" method="_niHf3iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ne1iUiueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ne1iUyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ne1iVCueEeyJjNOKZ7e9aA" name="periodComparison" method="_niHf4SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ne1iVSueEeyJjNOKZ7e9aA" name="obj1" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ne1iViueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ne1iVyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ne1iWCueEeyJjNOKZ7e9aA" name="priorityComparison" method="_niHf5SueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ne1iWSueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ne1iWiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ne2JYCueEeyJjNOKZ7e9aA" name="priorityComparison" method="_niHf6CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ne2JYSueEeyJjNOKZ7e9aA" name="obj1" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ne2JYiueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ne2JYyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ne2JZCueEeyJjNOKZ7e9aA" name="releaseTimeComparison" method="_niIG4CueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ne2JZSueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ne2JZiueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ne2JZyueEeyJjNOKZ7e9aA" name="releaseTimeComparison" method="_niIG4yueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ne2JaCueEeyJjNOKZ7e9aA" name="obj1" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ne2JaSueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ne2wcCueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ne2wcSueEeyJjNOKZ7e9aA" name="LatestReleaseTimeComparison" method="_niIG5yueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ne2wciueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ne2wcyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ne2wdCueEeyJjNOKZ7e9aA" name="LatestReleaseTimeComparison" method="_niIG6iueEeyJjNOKZ7e9aA">
                <ownedParameter xmi:id="_ne2wdSueEeyJjNOKZ7e9aA" name="obj1" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ne2wdiueEeyJjNOKZ7e9aA" name="obj2" type="_nSnrQCueEeyJjNOKZ7e9aA"/>
                <ownedParameter xmi:id="_ne2wdyueEeyJjNOKZ7e9aA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nfTcYSueEeyJjNOKZ7e9aA" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_nflJMCueEeyJjNOKZ7e9aA" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_nfozkCueEeyJjNOKZ7e9aA" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_nf1n4CueEeyJjNOKZ7e9aA" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_nf22ACueEeyJjNOKZ7e9aA" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_niQCsCueEeyJjNOKZ7e9aA" name="" memberEnd="_ngZBgyueEeyJjNOKZ7e9aA _niQpwCueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_niQpwCueEeyJjNOKZ7e9aA" name="" type="_nO1-gCueEeyJjNOKZ7e9aA" association="_niQCsCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_niU7MSueEeyJjNOKZ7e9aA" name="" memberEnd="_nhB6sSueEeyJjNOKZ7e9aA _niU7MiueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_niU7MiueEeyJjNOKZ7e9aA" name="" type="_nR2PMCueEeyJjNOKZ7e9aA" association="_niU7MSueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_niU7MyueEeyJjNOKZ7e9aA" name="" memberEnd="_nhB6siueEeyJjNOKZ7e9aA _niU7NCueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_niU7NCueEeyJjNOKZ7e9aA" name="" type="_nR2PMCueEeyJjNOKZ7e9aA" association="_niU7MyueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_niWwYSueEeyJjNOKZ7e9aA" name="" memberEnd="_nhJ2hSueEeyJjNOKZ7e9aA _niWwYiueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_niWwYiueEeyJjNOKZ7e9aA" name="" type="_nSnrQCueEeyJjNOKZ7e9aA" association="_niWwYSueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_niuj0CueEeyJjNOKZ7e9aA" name="" memberEnd="_niuj0SueEeyJjNOKZ7e9aA _ngRFsCueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_niuj0SueEeyJjNOKZ7e9aA" name="" type="_nN7_kCueEeyJjNOKZ7e9aA" association="_niuj0CueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_nivK4SueEeyJjNOKZ7e9aA" name="" memberEnd="_nivK4iueEeyJjNOKZ7e9aA _ngRswCueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_nivK4iueEeyJjNOKZ7e9aA" name="" type="_nN7_kCueEeyJjNOKZ7e9aA" association="_nivK4SueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_nivx8SueEeyJjNOKZ7e9aA" name="" memberEnd="_nivx8iueEeyJjNOKZ7e9aA _ngRswiueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_nivx8iueEeyJjNOKZ7e9aA" name="" type="_nN7_kCueEeyJjNOKZ7e9aA" association="_nivx8SueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_nivx9CueEeyJjNOKZ7e9aA" name="" memberEnd="_nivx9SueEeyJjNOKZ7e9aA _ngUJAyueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_nivx9SueEeyJjNOKZ7e9aA" name="" type="_nOW2UCueEeyJjNOKZ7e9aA" association="_nivx9CueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_niwZASueEeyJjNOKZ7e9aA" name="" memberEnd="_niwZAiueEeyJjNOKZ7e9aA _ngUwFCueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_niwZAiueEeyJjNOKZ7e9aA" name="" type="_nOgAQCueEeyJjNOKZ7e9aA" association="_niwZASueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_niwZBCueEeyJjNOKZ7e9aA" name="" memberEnd="_niwZBSueEeyJjNOKZ7e9aA _ngV-MCueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_niwZBSueEeyJjNOKZ7e9aA" name="" type="_nOgAQCueEeyJjNOKZ7e9aA" association="_niwZBCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_nixAESueEeyJjNOKZ7e9aA" name="" memberEnd="_nixAEiueEeyJjNOKZ7e9aA _ngXMUCueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_nixAEiueEeyJjNOKZ7e9aA" name="" type="_nOq_YCueEeyJjNOKZ7e9aA" association="_nixAESueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_nixAFCueEeyJjNOKZ7e9aA" name="" memberEnd="_nixAFSueEeyJjNOKZ7e9aA _ngXzYyueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_nixAFSueEeyJjNOKZ7e9aA" name="" type="_nOq_YCueEeyJjNOKZ7e9aA" association="_nixAFCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_nixnISueEeyJjNOKZ7e9aA" name="" memberEnd="_nixnIiueEeyJjNOKZ7e9aA _ngcE0yueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_nixnIiueEeyJjNOKZ7e9aA" name="" type="_nPCLwCueEeyJjNOKZ7e9aA" association="_nixnISueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_nixnJCueEeyJjNOKZ7e9aA" name="" memberEnd="_nixnJSueEeyJjNOKZ7e9aA _ngdS8CueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_nixnJSueEeyJjNOKZ7e9aA" name="" type="_nPCLwCueEeyJjNOKZ7e9aA" association="_nixnJCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_niyOMSueEeyJjNOKZ7e9aA" name="" memberEnd="_niyOMiueEeyJjNOKZ7e9aA _ngd6ACueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_niyOMiueEeyJjNOKZ7e9aA" name="" type="_nPCLwCueEeyJjNOKZ7e9aA" association="_niyOMSueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_niyONCueEeyJjNOKZ7e9aA" name="" memberEnd="_niyONSueEeyJjNOKZ7e9aA _ngehESueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_niyONSueEeyJjNOKZ7e9aA" name="" type="_nPCLwCueEeyJjNOKZ7e9aA" association="_niyONCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_niy1QSueEeyJjNOKZ7e9aA" name="" memberEnd="_niy1QiueEeyJjNOKZ7e9aA _ngehEyueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_niy1QiueEeyJjNOKZ7e9aA" name="" type="_nPCLwCueEeyJjNOKZ7e9aA" association="_niy1QSueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_niy1RCueEeyJjNOKZ7e9aA" name="" memberEnd="_niy1RSueEeyJjNOKZ7e9aA _nggWRSueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_niy1RSueEeyJjNOKZ7e9aA" name="" type="_nPNx8CueEeyJjNOKZ7e9aA" association="_niy1RCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_nizcUSueEeyJjNOKZ7e9aA" name="" memberEnd="_nizcUiueEeyJjNOKZ7e9aA _ngg9VSueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_nizcUiueEeyJjNOKZ7e9aA" name="" type="_nPNx8CueEeyJjNOKZ7e9aA" association="_nizcUSueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni0DYCueEeyJjNOKZ7e9aA" name="" memberEnd="_ni0DYSueEeyJjNOKZ7e9aA _nghkYSueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni0DYSueEeyJjNOKZ7e9aA" name="" type="_nPSqcCueEeyJjNOKZ7e9aA" association="_ni0DYCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni0DYyueEeyJjNOKZ7e9aA" name="" memberEnd="_ni0DZCueEeyJjNOKZ7e9aA _ngiLciueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni0DZCueEeyJjNOKZ7e9aA" name="" type="_nPVGsCueEeyJjNOKZ7e9aA" association="_ni0DYyueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni0qcSueEeyJjNOKZ7e9aA" name="" memberEnd="_ni0qciueEeyJjNOKZ7e9aA _ngkAoCueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni0qciueEeyJjNOKZ7e9aA" name="" type="_nPdpkCueEeyJjNOKZ7e9aA" association="_ni0qcSueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni0qdCueEeyJjNOKZ7e9aA" name="" memberEnd="_ni0qdSueEeyJjNOKZ7e9aA _nglOwiueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni0qdSueEeyJjNOKZ7e9aA" name="" type="_nPpPwCueEeyJjNOKZ7e9aA" association="_ni0qdCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni1RgSueEeyJjNOKZ7e9aA" name="" memberEnd="_ni1RgiueEeyJjNOKZ7e9aA _nglOxCueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni1RgiueEeyJjNOKZ7e9aA" name="" type="_nPpPwCueEeyJjNOKZ7e9aA" association="_ni1RgSueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni14kSueEeyJjNOKZ7e9aA" name="" memberEnd="_ni14kiueEeyJjNOKZ7e9aA _ngl10SueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni14kiueEeyJjNOKZ7e9aA" name="" type="_nPpPwCueEeyJjNOKZ7e9aA" association="_ni14kSueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni14lCueEeyJjNOKZ7e9aA" name="" memberEnd="_ni14lSueEeyJjNOKZ7e9aA _ngl11iueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni14lSueEeyJjNOKZ7e9aA" name="" type="_nPpPwCueEeyJjNOKZ7e9aA" association="_ni14lCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni2foSueEeyJjNOKZ7e9aA" name="" memberEnd="_ni2foiueEeyJjNOKZ7e9aA _ngmc4SueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni2foiueEeyJjNOKZ7e9aA" name="" type="_nPpPwCueEeyJjNOKZ7e9aA" association="_ni2foSueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni2fpCueEeyJjNOKZ7e9aA" name="" memberEnd="_ni2fpSueEeyJjNOKZ7e9aA _ngmc4yueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni2fpSueEeyJjNOKZ7e9aA" name="" type="_nPpPwCueEeyJjNOKZ7e9aA" association="_ni2fpCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni3GsSueEeyJjNOKZ7e9aA" name="" memberEnd="_ni3GsiueEeyJjNOKZ7e9aA _ngnD8iueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni3GsiueEeyJjNOKZ7e9aA" name="" type="_nPpPwCueEeyJjNOKZ7e9aA" association="_ni3GsSueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni3GtCueEeyJjNOKZ7e9aA" name="" memberEnd="_ni3GtSueEeyJjNOKZ7e9aA _ngnrASueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni3GtSueEeyJjNOKZ7e9aA" name="" type="_nPpPwCueEeyJjNOKZ7e9aA" association="_ni3GtCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni3twCueEeyJjNOKZ7e9aA" name="" memberEnd="_ni3twSueEeyJjNOKZ7e9aA _ngo5JiueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni3twSueEeyJjNOKZ7e9aA" name="" type="_nP8xwCueEeyJjNOKZ7e9aA" association="_ni3twCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni3twyueEeyJjNOKZ7e9aA" name="" memberEnd="_ni3txCueEeyJjNOKZ7e9aA _ngpgMSueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni3txCueEeyJjNOKZ7e9aA" name="" type="_nP8xwCueEeyJjNOKZ7e9aA" association="_ni3twyueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni4U0CueEeyJjNOKZ7e9aA" name="" memberEnd="_ni4U0SueEeyJjNOKZ7e9aA _ngpgMyueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni4U0SueEeyJjNOKZ7e9aA" name="" type="_nP8xwCueEeyJjNOKZ7e9aA" association="_ni4U0CueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni4U0yueEeyJjNOKZ7e9aA" name="" memberEnd="_ni4U1CueEeyJjNOKZ7e9aA _ngquVSueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni4U1CueEeyJjNOKZ7e9aA" name="" type="_nP8xwCueEeyJjNOKZ7e9aA" association="_ni4U0yueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni474CueEeyJjNOKZ7e9aA" name="" memberEnd="_ni474SueEeyJjNOKZ7e9aA _ngr8cSueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni474SueEeyJjNOKZ7e9aA" name="" type="_nP8xwCueEeyJjNOKZ7e9aA" association="_ni474CueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni474yueEeyJjNOKZ7e9aA" name="" memberEnd="_ni475CueEeyJjNOKZ7e9aA _ngr8cyueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni475CueEeyJjNOKZ7e9aA" name="" type="_nP8xwCueEeyJjNOKZ7e9aA" association="_ni474yueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni5i8CueEeyJjNOKZ7e9aA" name="" memberEnd="_ni5i8SueEeyJjNOKZ7e9aA _ngtKlCueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni5i8SueEeyJjNOKZ7e9aA" name="" type="_nQVMQCueEeyJjNOKZ7e9aA" association="_ni5i8CueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni5i8yueEeyJjNOKZ7e9aA" name="" memberEnd="_ni5i9CueEeyJjNOKZ7e9aA _ngtxoSueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni5i9CueEeyJjNOKZ7e9aA" name="" type="_nQVMQCueEeyJjNOKZ7e9aA" association="_ni5i8yueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni6KASueEeyJjNOKZ7e9aA" name="" memberEnd="_ni6KAiueEeyJjNOKZ7e9aA _ngu_wSueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni6KAiueEeyJjNOKZ7e9aA" name="" type="_nQjOsCueEeyJjNOKZ7e9aA" association="_ni6KASueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni6KBCueEeyJjNOKZ7e9aA" name="" memberEnd="_ni6KBSueEeyJjNOKZ7e9aA _ngu_wyueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni6KBSueEeyJjNOKZ7e9aA" name="" type="_nQjOsCueEeyJjNOKZ7e9aA" association="_ni6KBCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni6xESueEeyJjNOKZ7e9aA" name="" memberEnd="_ni6xEiueEeyJjNOKZ7e9aA _ngvm0iueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni6xEiueEeyJjNOKZ7e9aA" name="" type="_nQlD4CueEeyJjNOKZ7e9aA" association="_ni6xESueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni6xFCueEeyJjNOKZ7e9aA" name="" memberEnd="_ni6xFSueEeyJjNOKZ7e9aA _ngxcAyueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni6xFSueEeyJjNOKZ7e9aA" name="" type="_nQuN0CueEeyJjNOKZ7e9aA" association="_ni6xFCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni7YISueEeyJjNOKZ7e9aA" name="" memberEnd="_ni7YIiueEeyJjNOKZ7e9aA _ngxcBSueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni7YIiueEeyJjNOKZ7e9aA" name="" type="_nQuN0CueEeyJjNOKZ7e9aA" association="_ni7YISueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni7YJCueEeyJjNOKZ7e9aA" name="" memberEnd="_ni7_MCueEeyJjNOKZ7e9aA _ngzRNCueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni7_MCueEeyJjNOKZ7e9aA" name="" type="_nRK5wCueEeyJjNOKZ7e9aA" association="_ni7YJCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni7_MiueEeyJjNOKZ7e9aA" name="" memberEnd="_ni7_MyueEeyJjNOKZ7e9aA _ngz4QSueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni7_MyueEeyJjNOKZ7e9aA" name="" type="_nRK5wCueEeyJjNOKZ7e9aA" association="_ni7_MiueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni7_NSueEeyJjNOKZ7e9aA" name="" memberEnd="_ni8mQCueEeyJjNOKZ7e9aA _ngz4QyueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni8mQCueEeyJjNOKZ7e9aA" name="" type="_nRK5wCueEeyJjNOKZ7e9aA" association="_ni7_NSueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni8mQiueEeyJjNOKZ7e9aA" name="" memberEnd="_ni8mQyueEeyJjNOKZ7e9aA _ng0fViueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni8mQyueEeyJjNOKZ7e9aA" name="" type="_nRK5wCueEeyJjNOKZ7e9aA" association="_ni8mQiueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni9NUSueEeyJjNOKZ7e9aA" name="" memberEnd="_ni9NUiueEeyJjNOKZ7e9aA _ng1GYSueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni9NUiueEeyJjNOKZ7e9aA" name="" type="_nRK5wCueEeyJjNOKZ7e9aA" association="_ni9NUSueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni9NVCueEeyJjNOKZ7e9aA" name="" memberEnd="_ni9NVSueEeyJjNOKZ7e9aA _ng1GZCueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni9NVSueEeyJjNOKZ7e9aA" name="" type="_nRK5wCueEeyJjNOKZ7e9aA" association="_ni9NVCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni90YSueEeyJjNOKZ7e9aA" name="" memberEnd="_ni90YiueEeyJjNOKZ7e9aA _ng1tcCueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni90YiueEeyJjNOKZ7e9aA" name="" type="_nRRncCueEeyJjNOKZ7e9aA" association="_ni90YSueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni90ZCueEeyJjNOKZ7e9aA" name="" memberEnd="_ni90ZSueEeyJjNOKZ7e9aA _ng4wwSueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni90ZSueEeyJjNOKZ7e9aA" name="" type="_nRd0sSueEeyJjNOKZ7e9aA" association="_ni90ZCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni-bcSueEeyJjNOKZ7e9aA" name="" memberEnd="_ni-bciueEeyJjNOKZ7e9aA _ng5X0CueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni-bciueEeyJjNOKZ7e9aA" name="" type="_nRd0sSueEeyJjNOKZ7e9aA" association="_ni-bcSueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni-bdCueEeyJjNOKZ7e9aA" name="" memberEnd="_ni-bdSueEeyJjNOKZ7e9aA _ng5-4CueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni-bdSueEeyJjNOKZ7e9aA" name="" type="_nRlwgCueEeyJjNOKZ7e9aA" association="_ni-bdCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni_CgSueEeyJjNOKZ7e9aA" name="" memberEnd="_ni_CgiueEeyJjNOKZ7e9aA _ng5-4iueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni_CgiueEeyJjNOKZ7e9aA" name="" type="_nRlwgCueEeyJjNOKZ7e9aA" association="_ni_CgSueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni_pkSueEeyJjNOKZ7e9aA" name="" memberEnd="_ni_pkiueEeyJjNOKZ7e9aA _ng5-5CueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni_pkiueEeyJjNOKZ7e9aA" name="" type="_nRlwgCueEeyJjNOKZ7e9aA" association="_ni_pkSueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ni_plCueEeyJjNOKZ7e9aA" name="" memberEnd="_ni_plSueEeyJjNOKZ7e9aA _nhB6tSueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_ni_plSueEeyJjNOKZ7e9aA" name="" type="_nR2PMCueEeyJjNOKZ7e9aA" association="_ni_plCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_njAQoSueEeyJjNOKZ7e9aA" name="" memberEnd="_njAQoiueEeyJjNOKZ7e9aA _nhChwiueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_njAQoiueEeyJjNOKZ7e9aA" name="" type="_nR2PMCueEeyJjNOKZ7e9aA" association="_njAQoSueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_njAQpCueEeyJjNOKZ7e9aA" name="" memberEnd="_njAQpSueEeyJjNOKZ7e9aA _nhDv5CueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_njAQpSueEeyJjNOKZ7e9aA" name="" type="_nSK_UCueEeyJjNOKZ7e9aA" association="_njAQpCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_njA3sSueEeyJjNOKZ7e9aA" name="" memberEnd="_njA3siueEeyJjNOKZ7e9aA _nhEW8yueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_njA3siueEeyJjNOKZ7e9aA" name="" type="_nSK_UCueEeyJjNOKZ7e9aA" association="_njA3sSueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_njA3tCueEeyJjNOKZ7e9aA" name="" memberEnd="_njA3tSueEeyJjNOKZ7e9aA _nhE-ACueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_njA3tSueEeyJjNOKZ7e9aA" name="" type="_nSPQwCueEeyJjNOKZ7e9aA" association="_njA3tCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_njBewSueEeyJjNOKZ7e9aA" name="" memberEnd="_njBewiueEeyJjNOKZ7e9aA _nhFlESueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_njBewiueEeyJjNOKZ7e9aA" name="" type="_nSSUECueEeyJjNOKZ7e9aA" association="_njBewSueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_njBexCueEeyJjNOKZ7e9aA" name="" memberEnd="_njBexSueEeyJjNOKZ7e9aA _nhGMISueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_njBexSueEeyJjNOKZ7e9aA" name="" type="_nSSUECueEeyJjNOKZ7e9aA" association="_njBexCueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_njCF0SueEeyJjNOKZ7e9aA" name="" memberEnd="_njCF0iueEeyJjNOKZ7e9aA _nhGMIyueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_njCF0iueEeyJjNOKZ7e9aA" name="" type="_nSSUECueEeyJjNOKZ7e9aA" association="_njCF0SueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_njCF1CueEeyJjNOKZ7e9aA" name="" memberEnd="_njCF1SueEeyJjNOKZ7e9aA _nhGMJSueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_njCF1SueEeyJjNOKZ7e9aA" name="" type="_nSSUECueEeyJjNOKZ7e9aA" association="_njCF1CueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_njCs4SueEeyJjNOKZ7e9aA" name="" memberEnd="_njCs4iueEeyJjNOKZ7e9aA _nhGzMSueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_njCs4iueEeyJjNOKZ7e9aA" name="" type="_nSSUECueEeyJjNOKZ7e9aA" association="_njCs4SueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_njDT8CueEeyJjNOKZ7e9aA" name="" memberEnd="_njDT8SueEeyJjNOKZ7e9aA _nhGzMyueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_njDT8SueEeyJjNOKZ7e9aA" name="" type="_nSSUECueEeyJjNOKZ7e9aA" association="_njDT8CueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_njDT8yueEeyJjNOKZ7e9aA" name="" memberEnd="_njDT9CueEeyJjNOKZ7e9aA _nhJ2hiueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_njDT9CueEeyJjNOKZ7e9aA" name="" type="_nSnrQCueEeyJjNOKZ7e9aA" association="_njDT8yueEeyJjNOKZ7e9aA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_njD7ASueEeyJjNOKZ7e9aA" name="" memberEnd="_njD7AiueEeyJjNOKZ7e9aA _nhKdkiueEeyJjNOKZ7e9aA">
              <ownedEnd xmi:id="_njD7AiueEeyJjNOKZ7e9aA" name="" type="_nSnrQCueEeyJjNOKZ7e9aA" association="_njD7ASueEeyJjNOKZ7e9aA"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_nKlwoCueEeyJjNOKZ7e9aA" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_ndL8gCueEeyJjNOKZ7e9aA" name="Authentication"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ndwkQiueEeyJjNOKZ7e9aA" name="Utilities"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_nKx94SueEeyJjNOKZ7e9aA" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_ndYJwSueEeyJjNOKZ7e9aA" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ndYJwyueEeyJjNOKZ7e9aA" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ndYw0SueEeyJjNOKZ7e9aA" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_nf6gYSueEeyJjNOKZ7e9aA" name="WARPdslBaseListener"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_nJ83cCueEeyJjNOKZ7e9aA" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_nJ9egCueEeyJjNOKZ7e9aA" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_nKWgECueEeyJjNOKZ7e9aA" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_ndDZoCueEeyJjNOKZ7e9aA" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_nL_e0CueEeyJjNOKZ7e9aA" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_neinYSueEeyJjNOKZ7e9aA" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_nQbS5CueEeyJjNOKZ7e9aA" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_nc4agCueEeyJjNOKZ7e9aA" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_nc5ooCueEeyJjNOKZ7e9aA" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_nc6PsCueEeyJjNOKZ7e9aA" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nc6PsiueEeyJjNOKZ7e9aA" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nc62wSueEeyJjNOKZ7e9aA" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ndI5MCueEeyJjNOKZ7e9aA" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ndnaUCueEeyJjNOKZ7e9aA" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_negyMCueEeyJjNOKZ7e9aA" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_nehZQSueEeyJjNOKZ7e9aA" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_neiAUCueEeyJjNOKZ7e9aA" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_neiAUiueEeyJjNOKZ7e9aA" name="Vector"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_nezGECueEeyJjNOKZ7e9aA" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nezGEiueEeyJjNOKZ7e9aA" name="Queue"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_nKlwoSueEeyJjNOKZ7e9aA" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_ndMjkSueEeyJjNOKZ7e9aA" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ndMjkyueEeyJjNOKZ7e9aA" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ndfegCueEeyJjNOKZ7e9aA" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ndgFkSueEeyJjNOKZ7e9aA" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_nKlwoiueEeyJjNOKZ7e9aA" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_nKmXsCueEeyJjNOKZ7e9aA" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_ndNKoSueEeyJjNOKZ7e9aA" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_ndNKoyueEeyJjNOKZ7e9aA" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_ndNxsSueEeyJjNOKZ7e9aA" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_nLJKQCueEeyJjNOKZ7e9aA" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_ndwkQCueEeyJjNOKZ7e9aA" name="Math"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nfGoESueEeyJjNOKZ7e9aA" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_nfbYMCueEeyJjNOKZ7e9aA" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_nfrP0iueEeyJjNOKZ7e9aA" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_nKmXsSueEeyJjNOKZ7e9aA" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_nKmXsiueEeyJjNOKZ7e9aA" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_ndOYwSueEeyJjNOKZ7e9aA" name="JFileChooser"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_nKmXsyueEeyJjNOKZ7e9aA" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_nKmXtCueEeyJjNOKZ7e9aA" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_nKmXtSueEeyJjNOKZ7e9aA" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_ndOYwyueEeyJjNOKZ7e9aA" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_nKxW0CueEeyJjNOKZ7e9aA" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_nKxW0SueEeyJjNOKZ7e9aA" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_nKxW0iueEeyJjNOKZ7e9aA" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_nKxW0yueEeyJjNOKZ7e9aA" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_nKx94CueEeyJjNOKZ7e9aA" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_ndW7oSueEeyJjNOKZ7e9aA" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_ndXisSueEeyJjNOKZ7e9aA" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_ndVtgCueEeyJjNOKZ7e9aA" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ndWUkSueEeyJjNOKZ7e9aA" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ndWUkyueEeyJjNOKZ7e9aA" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_nMQkkCueEeyJjNOKZ7e9aA" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_nMQkkSueEeyJjNOKZ7e9aA" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_nMQkkiueEeyJjNOKZ7e9aA" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_newCwCueEeyJjNOKZ7e9aA" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_newp0SueEeyJjNOKZ7e9aA" name="BeforeEach"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_nexQ4SueEeyJjNOKZ7e9aA" name="Test"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_nK2PUCueEeyJjNOKZ7e9aA" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_ndZ-8CueEeyJjNOKZ7e9aA" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ndbNECueEeyJjNOKZ7e9aA" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ndb0IyueEeyJjNOKZ7e9aA" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ndcbNiueEeyJjNOKZ7e9aA" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_nddpUiueEeyJjNOKZ7e9aA" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ndeQYyueEeyJjNOKZ7e9aA" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_nerKQiueEeyJjNOKZ7e9aA" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_nerxUiueEeyJjNOKZ7e9aA" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_nesYZCueEeyJjNOKZ7e9aA" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_netmgyueEeyJjNOKZ7e9aA" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_nLwOQCueEeyJjNOKZ7e9aA" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_neRhoCueEeyJjNOKZ7e9aA" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_neTW0yueEeyJjNOKZ7e9aA" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_neT95iueEeyJjNOKZ7e9aA" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_neVMAiueEeyJjNOKZ7e9aA" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_neVzEyueEeyJjNOKZ7e9aA" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_neWaJSueEeyJjNOKZ7e9aA" name="ChannelContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_nL6mUCueEeyJjNOKZ7e9aA" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_neb5sCueEeyJjNOKZ7e9aA" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_neb5siueEeyJjNOKZ7e9aA" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_necgwSueEeyJjNOKZ7e9aA" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_necgwyueEeyJjNOKZ7e9aA" name="StringHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_nedH0SueEeyJjNOKZ7e9aA" name="IntHolder"/>
    </packagedElement>
    <profileApplication xmi:id="_mcDPoCueEeyJjNOKZ7e9aA">
      <eAnnotations xmi:id="_mcHhECueEeyJjNOKZ7e9aA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_mcJ9UCueEeyJjNOKZ7e9aA" base_Package="_mS_aQCueEeyJjNOKZ7e9aA">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_nN4VMCueEeyJjNOKZ7e9aA" genericsValue="T,E" base_Element="_nN2gACueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nN_C4CueEeyJjNOKZ7e9aA" base_Element="_nN-b0CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nN_p8CueEeyJjNOKZ7e9aA" base_Element="_nN-b0CueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nOCtQCueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_nODUUCueEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_nOCtQSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nOEicCueEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_nOD7YCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nOFwkCueEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_nOFJgCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nOG-sCueEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_nOGXoCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nOIM0CueEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_nOG-sSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nOcV4CueEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_nObu0CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nOicgCueEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_nOh1ciueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nOs0kCueEeyJjNOKZ7e9aA" base_Element="_nOsNgCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nOs0kSueEeyJjNOKZ7e9aA" base_Element="_nOsNgCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nOs0kiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nOtboCueEeyJjNOKZ7e9aA" base_Element="_nOs0kyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nOtboSueEeyJjNOKZ7e9aA" base_Element="_nOs0kyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nOtboiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nOuCsCueEeyJjNOKZ7e9aA" base_Element="_nOtboyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nOuCsSueEeyJjNOKZ7e9aA" base_Element="_nOtboyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nOuCsiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_nOyUICueEeyJjNOKZ7e9aA" genericsValue="T extends SchedulableObject" base_Element="_nOxGACueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nO0wYSueEeyJjNOKZ7e9aA" base_Element="_nO0JVyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nO1XcCueEeyJjNOKZ7e9aA" base_Element="_nO0JVyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nO1XcSueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nO3MoSueEeyJjNOKZ7e9aA" base_Element="_nO3MoCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nO6P8CueEeyJjNOKZ7e9aA" base_Element="_nO5o4CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nO6P8SueEeyJjNOKZ7e9aA" base_Element="_nO5o4CueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nO6P8iueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nO63ACueEeyJjNOKZ7e9aA" base_Element="_nO6P8yueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nO63ASueEeyJjNOKZ7e9aA" base_Element="_nO6P8yueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nO63AiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nO7eECueEeyJjNOKZ7e9aA" base_Element="_nO63AyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nO7eESueEeyJjNOKZ7e9aA" base_Element="_nO63AyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nO7eEiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_nPF2ICueEeyJjNOKZ7e9aA" genericsValue="Node" base_Element="_nPFPESueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nPGdMCueEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_nPF2ISueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nPHEQCueEeyJjNOKZ7e9aA" genericsValue="Integer" base_Element="_nPGdMSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nPI5ciueEeyJjNOKZ7e9aA" base_Element="_nPI5cCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nPJggCueEeyJjNOKZ7e9aA" base_Element="_nPI5cCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nPJggSueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nPPAECueEeyJjNOKZ7e9aA" base_Element="_nPOZACueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nPPAESueEeyJjNOKZ7e9aA" base_Element="_nPOZACueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nPPAEiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_nPbNUSueEeyJjNOKZ7e9aA" genericsValue="T extends SchedulableObject" base_Element="_nPbNUCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nPdCgCueEeyJjNOKZ7e9aA" genericsValue="T extends SchedulableObject" base_Element="_nPcbcCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nPfewiueEeyJjNOKZ7e9aA" base_Element="_nPfewCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nPgF0CueEeyJjNOKZ7e9aA" base_Element="_nPfewCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nPgF0SueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nPgs4yueEeyJjNOKZ7e9aA" base_Element="_nPgs4SueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nPhT8CueEeyJjNOKZ7e9aA" base_Element="_nPgs4SueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nPhT8SueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nPhT8yueEeyJjNOKZ7e9aA" base_Element="_nPhT8iueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nPh7ACueEeyJjNOKZ7e9aA" base_Element="_nPhT8iueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nPh7ASueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nPmMcCueEeyJjNOKZ7e9aA" base_Element="_nPllZSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nPmMcSueEeyJjNOKZ7e9aA" base_Element="_nPllZSueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nPmMciueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_nPnakCueEeyJjNOKZ7e9aA" genericsValue="T extends SchedulableObject" base_Element="_nPmzgCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nPrsACueEeyJjNOKZ7e9aA" genericsValue="String, Integer" base_Element="_nPrE8CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nPs6ICueEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_nPsTECueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Array xmi:id="_nPthMyueEeyJjNOKZ7e9aA" base_Element="_nPthMCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nP3SMCueEeyJjNOKZ7e9aA" base_Element="_nP2rICueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nP3SMSueEeyJjNOKZ7e9aA" base_Element="_nP2rICueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nP3SMiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_nP8KsCueEeyJjNOKZ7e9aA" genericsValue="T extends SchedulableObject" base_Element="_nP7joCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nQIX8SueEeyJjNOKZ7e9aA" base_Element="_nQIX8CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nQIX8iueEeyJjNOKZ7e9aA" base_Element="_nQIX8CueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nQIX8yueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nQI_ASueEeyJjNOKZ7e9aA" base_Element="_nQI_ACueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nQI_AiueEeyJjNOKZ7e9aA" base_Element="_nQI_ACueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nQI_AyueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nQJmEiueEeyJjNOKZ7e9aA" base_Element="_nQJmECueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nQKNICueEeyJjNOKZ7e9aA" base_Element="_nQJmECueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nQKNISueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nQKNJCueEeyJjNOKZ7e9aA" base_Element="_nQKNIiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nQK0MCueEeyJjNOKZ7e9aA" base_Element="_nQKNIiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nQK0MSueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nQLbQiueEeyJjNOKZ7e9aA" base_Element="_nQLbQCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nQLbQyueEeyJjNOKZ7e9aA" base_Element="_nQLbQCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nQLbRCueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nQWaYCueEeyJjNOKZ7e9aA" base_Element="_nQVzUCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nQWaYSueEeyJjNOKZ7e9aA" base_Element="_nQVzUCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nQWaYiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nQXBcCueEeyJjNOKZ7e9aA" base_Element="_nQWaYyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nQXBcSueEeyJjNOKZ7e9aA" base_Element="_nQWaYyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nQXBciueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_nQY2oCueEeyJjNOKZ7e9aA" genericsValue="T extends SchedulableObject" base_Element="_nQYPkCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nQar0CueEeyJjNOKZ7e9aA" genericsValue="T extends SchedulableObject" base_Element="_nQaEwCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nQb58CueEeyJjNOKZ7e9aA" base_Element="_nQbS5CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nQchACueEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_nQb58SueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nQmSACueEeyJjNOKZ7e9aA" base_Element="_nQlq8CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nQmSASueEeyJjNOKZ7e9aA" base_Element="_nQlq8CueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nQmSAiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_nQouQCueEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_nQoHMCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nQrxkCueEeyJjNOKZ7e9aA" genericsValue="T extends SchedulableObject" base_Element="_nQrKgCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nQs_sSueEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_nQs_sCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nQ-sgCueEeyJjNOKZ7e9aA" genericsValue="T extends SchedulableObject" base_Element="_nQ-FcCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nQ_6oCueEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_nQ_TkCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nRBIwCueEeyJjNOKZ7e9aA" base_Element="_nRAhsCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nREzICueEeyJjNOKZ7e9aA" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_nREMECueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nRH2cSueEeyJjNOKZ7e9aA" base_Element="_nRH2cCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nRIdhCueEeyJjNOKZ7e9aA" base_Element="_nRIdgyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nRMu8CueEeyJjNOKZ7e9aA" base_Element="_nRMH4CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nRMu8SueEeyJjNOKZ7e9aA" base_Element="_nRMH4CueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nRMu8iueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nRNWACueEeyJjNOKZ7e9aA" base_Element="_nRMu8yueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nRNWASueEeyJjNOKZ7e9aA" base_Element="_nRMu8yueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nRNWAiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nRNWBSueEeyJjNOKZ7e9aA" base_Element="_nRNWAyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nRN9ECueEeyJjNOKZ7e9aA" base_Element="_nRNWAyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nRN9ESueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_nRd0sCueEeyJjNOKZ7e9aA" genericsValue="InstructionParameters" base_Element="_nRdNoCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nRfC0CueEeyJjNOKZ7e9aA" genericsValue="InstructionParameters" base_Element="_nRebxCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nRm-oCueEeyJjNOKZ7e9aA" base_Element="_nRmXkCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nRm-oSueEeyJjNOKZ7e9aA" base_Element="_nRmXkCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nRm-oiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nRm-pCueEeyJjNOKZ7e9aA" base_Element="_nRm-oyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nRnlsCueEeyJjNOKZ7e9aA" base_Element="_nRm-oyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nRnlsSueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nRnlsyueEeyJjNOKZ7e9aA" base_Element="_nRnlsiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nRoMwCueEeyJjNOKZ7e9aA" base_Element="_nRnlsiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nRoMwSueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nRoMwyueEeyJjNOKZ7e9aA" base_Element="_nRoMwiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nRoMxCueEeyJjNOKZ7e9aA" base_Element="_nRoMwiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nRoMxSueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nRoz0SueEeyJjNOKZ7e9aA" base_Element="_nRoMxiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nRoz0iueEeyJjNOKZ7e9aA" base_Element="_nRoMxiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nRoz0yueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nRpa4SueEeyJjNOKZ7e9aA" base_Element="_nRoz1CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nRpa4iueEeyJjNOKZ7e9aA" base_Element="_nRoz1CueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nRpa4yueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nRqB8SueEeyJjNOKZ7e9aA" base_Element="_nRpa5CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nRqB8iueEeyJjNOKZ7e9aA" base_Element="_nRpa5CueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nRqB8yueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nRqB9SueEeyJjNOKZ7e9aA" base_Element="_nRqB9CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nRqpACueEeyJjNOKZ7e9aA" base_Element="_nRqB9CueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nRqpASueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nRqpAyueEeyJjNOKZ7e9aA" base_Element="_nRqpAiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nRqpBCueEeyJjNOKZ7e9aA" base_Element="_nRqpAiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nRqpBSueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nRrQEiueEeyJjNOKZ7e9aA" base_Element="_nRrQECueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nRrQEyueEeyJjNOKZ7e9aA" base_Element="_nRrQECueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nRrQFCueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nRr3ISueEeyJjNOKZ7e9aA" base_Element="_nRrQFSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nRr3IiueEeyJjNOKZ7e9aA" base_Element="_nRrQFSueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nRr3IyueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nRr3JiueEeyJjNOKZ7e9aA" base_Element="_nRr3JCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nRseMCueEeyJjNOKZ7e9aA" base_Element="_nRr3JCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nRseMSueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nRseNCueEeyJjNOKZ7e9aA" base_Element="_nRseMiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nRseNSueEeyJjNOKZ7e9aA" base_Element="_nRseMiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nRseNiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nRtFQSueEeyJjNOKZ7e9aA" base_Element="_nRtFQCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nRtFQiueEeyJjNOKZ7e9aA" base_Element="_nRtFQCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nRtFQyueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_nRx9wCueEeyJjNOKZ7e9aA" dimensions="1" base_Element="_nRxWsSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Array xmi:id="_nSBOUyueEeyJjNOKZ7e9aA" base_Element="_nSBOUCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Array xmi:id="_nSB1YyueEeyJjNOKZ7e9aA" base_Element="_nSB1YCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Array xmi:id="_nSCcdiueEeyJjNOKZ7e9aA" base_Element="_nSCcciueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Array xmi:id="_nSDqkyueEeyJjNOKZ7e9aA" base_Element="_nSDDhSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSMNcCueEeyJjNOKZ7e9aA" base_Element="_nSLmZSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSMNcSueEeyJjNOKZ7e9aA" base_Element="_nSLmZSueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSMNciueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSM0gCueEeyJjNOKZ7e9aA" base_Element="_nSMNcyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSM0gSueEeyJjNOKZ7e9aA" base_Element="_nSMNcyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSM0giueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSNbkCueEeyJjNOKZ7e9aA" base_Element="_nSM0gyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSNbkSueEeyJjNOKZ7e9aA" base_Element="_nSM0gyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSNbkiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSTiMSueEeyJjNOKZ7e9aA" base_Element="_nSTiMCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSTiMiueEeyJjNOKZ7e9aA" base_Element="_nSTiMCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSUJQCueEeyJjNOKZ7e9aA" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSUJQiueEeyJjNOKZ7e9aA" base_Element="_nSUJQSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSUJQyueEeyJjNOKZ7e9aA" base_Element="_nSUJQSueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSUJRCueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSUwUCueEeyJjNOKZ7e9aA" base_Element="_nSUJRSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSUwUSueEeyJjNOKZ7e9aA" base_Element="_nSUJRSueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSUwUiueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSUwVCueEeyJjNOKZ7e9aA" base_Element="_nSUwUyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSVXYCueEeyJjNOKZ7e9aA" base_Element="_nSUwUyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSVXYSueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSVXYyueEeyJjNOKZ7e9aA" base_Element="_nSVXYiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSVXZCueEeyJjNOKZ7e9aA" base_Element="_nSVXYiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSVXZSueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSV-cCueEeyJjNOKZ7e9aA" base_Element="_nSVXZiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSV-cSueEeyJjNOKZ7e9aA" base_Element="_nSVXZiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSV-ciueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSV-dCueEeyJjNOKZ7e9aA" base_Element="_nSV-cyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSWlgCueEeyJjNOKZ7e9aA" base_Element="_nSV-cyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSWlgSueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSWlgyueEeyJjNOKZ7e9aA" base_Element="_nSWlgiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSWlhCueEeyJjNOKZ7e9aA" base_Element="_nSWlgiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSWlhSueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSWlhyueEeyJjNOKZ7e9aA" base_Element="_nSWlhiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSXMkCueEeyJjNOKZ7e9aA" base_Element="_nSWlhiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSXMkSueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSXMkyueEeyJjNOKZ7e9aA" base_Element="_nSXMkiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSXMlCueEeyJjNOKZ7e9aA" base_Element="_nSXMkiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSXMlSueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSXzoSueEeyJjNOKZ7e9aA" base_Element="_nSXzoCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSXzoiueEeyJjNOKZ7e9aA" base_Element="_nSXzoCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSXzoyueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSXzpSueEeyJjNOKZ7e9aA" base_Element="_nSXzpCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSYasCueEeyJjNOKZ7e9aA" base_Element="_nSXzpCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSYasSueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSYasyueEeyJjNOKZ7e9aA" base_Element="_nSYasiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSYatCueEeyJjNOKZ7e9aA" base_Element="_nSYasiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSYatSueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSZBwCueEeyJjNOKZ7e9aA" base_Element="_nSYatiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSZBwSueEeyJjNOKZ7e9aA" base_Element="_nSYatiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSZBwiueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSZBxCueEeyJjNOKZ7e9aA" base_Element="_nSZBwyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSZBxSueEeyJjNOKZ7e9aA" base_Element="_nSZBwyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSZBxiueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSZo0CueEeyJjNOKZ7e9aA" base_Element="_nSZBxyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSZo0SueEeyJjNOKZ7e9aA" base_Element="_nSZBxyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSZo0iueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSaP4CueEeyJjNOKZ7e9aA" base_Element="_nSZo1CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSaP4SueEeyJjNOKZ7e9aA" base_Element="_nSZo1CueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSaP4iueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSaP5CueEeyJjNOKZ7e9aA" base_Element="_nSaP4yueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSaP5SueEeyJjNOKZ7e9aA" base_Element="_nSaP4yueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSaP5iueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSa28CueEeyJjNOKZ7e9aA" base_Element="_nSaP5yueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSa28SueEeyJjNOKZ7e9aA" base_Element="_nSaP5yueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSa28iueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSa29CueEeyJjNOKZ7e9aA" base_Element="_nSa28yueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSa29SueEeyJjNOKZ7e9aA" base_Element="_nSa28yueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSa29iueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSbeASueEeyJjNOKZ7e9aA" base_Element="_nSbeACueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSbeAiueEeyJjNOKZ7e9aA" base_Element="_nSbeACueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSbeAyueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSbeBSueEeyJjNOKZ7e9aA" base_Element="_nSbeBCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nScFECueEeyJjNOKZ7e9aA" base_Element="_nSbeBCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nScFESueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nScFEyueEeyJjNOKZ7e9aA" base_Element="_nScFEiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nScFFCueEeyJjNOKZ7e9aA" base_Element="_nScFEiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nScFFSueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nScsICueEeyJjNOKZ7e9aA" base_Element="_nScFFiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nScsISueEeyJjNOKZ7e9aA" base_Element="_nScFFiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nScsIiueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nScsJCueEeyJjNOKZ7e9aA" base_Element="_nScsIyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nScsJSueEeyJjNOKZ7e9aA" base_Element="_nScsIyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nScsJiueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSdTMSueEeyJjNOKZ7e9aA" base_Element="_nSdTMCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSdTMiueEeyJjNOKZ7e9aA" base_Element="_nSdTMCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSdTMyueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSd6QCueEeyJjNOKZ7e9aA" base_Element="_nSdTNCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSd6QSueEeyJjNOKZ7e9aA" base_Element="_nSdTNCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSd6QiueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSd6RCueEeyJjNOKZ7e9aA" base_Element="_nSd6QyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSd6RSueEeyJjNOKZ7e9aA" base_Element="_nSd6QyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSehUCueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSehUiueEeyJjNOKZ7e9aA" base_Element="_nSehUSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSehUyueEeyJjNOKZ7e9aA" base_Element="_nSehUSueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSehVCueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSfIYCueEeyJjNOKZ7e9aA" base_Element="_nSehVSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSfIYSueEeyJjNOKZ7e9aA" base_Element="_nSehVSueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSfIYiueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSfIZCueEeyJjNOKZ7e9aA" base_Element="_nSfIYyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSfvcCueEeyJjNOKZ7e9aA" base_Element="_nSfIYyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSfvcSueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSfvcyueEeyJjNOKZ7e9aA" base_Element="_nSfvciueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSfvdCueEeyJjNOKZ7e9aA" base_Element="_nSfvciueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSfvdSueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSgWgCueEeyJjNOKZ7e9aA" base_Element="_nSfvdiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSgWgSueEeyJjNOKZ7e9aA" base_Element="_nSfvdiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSgWgiueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSgWhCueEeyJjNOKZ7e9aA" base_Element="_nSgWgyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSgWhSueEeyJjNOKZ7e9aA" base_Element="_nSgWgyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSgWhiueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSg9kCueEeyJjNOKZ7e9aA" base_Element="_nSgWhyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSg9kSueEeyJjNOKZ7e9aA" base_Element="_nSgWhyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSg9kiueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSg9lCueEeyJjNOKZ7e9aA" base_Element="_nSg9kyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nShkoCueEeyJjNOKZ7e9aA" base_Element="_nSg9kyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nShkoSueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nShkoyueEeyJjNOKZ7e9aA" base_Element="_nShkoiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nShkpCueEeyJjNOKZ7e9aA" base_Element="_nShkoiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nShkpSueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSiLsCueEeyJjNOKZ7e9aA" base_Element="_nShkpiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSiLsSueEeyJjNOKZ7e9aA" base_Element="_nShkpiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSiLsiueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSiLtCueEeyJjNOKZ7e9aA" base_Element="_nSiLsyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSiLtSueEeyJjNOKZ7e9aA" base_Element="_nSiLsyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSiLtiueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSiywCueEeyJjNOKZ7e9aA" base_Element="_nSiLtyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSiywSueEeyJjNOKZ7e9aA" base_Element="_nSiLtyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSiywiueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSiyxCueEeyJjNOKZ7e9aA" base_Element="_nSiywyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSjZ0CueEeyJjNOKZ7e9aA" base_Element="_nSiywyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSjZ0SueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSjZ0yueEeyJjNOKZ7e9aA" base_Element="_nSjZ0iueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSjZ1CueEeyJjNOKZ7e9aA" base_Element="_nSjZ0iueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSjZ1SueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSkA4CueEeyJjNOKZ7e9aA" base_Element="_nSjZ1iueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSkA4SueEeyJjNOKZ7e9aA" base_Element="_nSjZ1iueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSkA4iueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSkA5CueEeyJjNOKZ7e9aA" base_Element="_nSkA4yueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSkA5SueEeyJjNOKZ7e9aA" base_Element="_nSkA4yueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSkA5iueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSkn8CueEeyJjNOKZ7e9aA" base_Element="_nSkA5yueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSkn8SueEeyJjNOKZ7e9aA" base_Element="_nSkA5yueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSkn8iueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nSkn9CueEeyJjNOKZ7e9aA" base_Element="_nSkn8yueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nSlPACueEeyJjNOKZ7e9aA" base_Element="_nSkn8yueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nSlPASueEeyJjNOKZ7e9aA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_nSrVoCueEeyJjNOKZ7e9aA" genericsValue="Integer" base_Element="_nSqumCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nc4agSueEeyJjNOKZ7e9aA" base_Element="_nc4agCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nc5ooSueEeyJjNOKZ7e9aA" base_Element="_nc5ooCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nc6PsSueEeyJjNOKZ7e9aA" base_Element="_nc6PsCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nc62wCueEeyJjNOKZ7e9aA" base_Element="_nc6PsiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nc62wiueEeyJjNOKZ7e9aA" base_Element="_nc62wSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nc9TBCueEeyJjNOKZ7e9aA" base_Element="_nc9TASueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nc96ECueEeyJjNOKZ7e9aA" base_Element="_nc9TASueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nc96ESueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_nc_IMCueEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_nc-hJyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nc_vQCueEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_nc_IMiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_ndBkcSueEeyJjNOKZ7e9aA" genericsValue="String, Activation" base_Element="_ndBkcCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ndEAsCueEeyJjNOKZ7e9aA" base_Element="_ndDZoCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ndGc8CueEeyJjNOKZ7e9aA" base_Element="_ndF15iueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_ndGc8SueEeyJjNOKZ7e9aA" base_Element="_ndF15iueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_ndGc8iueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ndI5MSueEeyJjNOKZ7e9aA" base_Element="_ndI5MCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ndKuYSueEeyJjNOKZ7e9aA" base_Element="_ndKHUCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_ndKuYiueEeyJjNOKZ7e9aA" base_Element="_ndKHUCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_ndKuYyueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ndMjkCueEeyJjNOKZ7e9aA" base_Element="_ndL8gCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ndMjkiueEeyJjNOKZ7e9aA" base_Element="_ndMjkSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ndNKoCueEeyJjNOKZ7e9aA" base_Element="_ndMjkyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ndNKoiueEeyJjNOKZ7e9aA" base_Element="_ndNKoSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ndNxsCueEeyJjNOKZ7e9aA" base_Element="_ndNKoyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ndOYwCueEeyJjNOKZ7e9aA" base_Element="_ndNxsSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ndOYwiueEeyJjNOKZ7e9aA" base_Element="_ndOYwSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ndO_0CueEeyJjNOKZ7e9aA" base_Element="_ndOYwyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ndQ1AyueEeyJjNOKZ7e9aA" base_Element="_ndQ1ACueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_ndQ1BCueEeyJjNOKZ7e9aA" base_Element="_ndQ1ACueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_ndQ1BSueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ndTRQSueEeyJjNOKZ7e9aA" genericsValue="String, Flow" base_Element="_ndTRQCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_ndT4USueEeyJjNOKZ7e9aA" genericsValue="Node, Activation" base_Element="_ndT4UCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ndWUkCueEeyJjNOKZ7e9aA" base_Element="_ndVtgCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ndWUkiueEeyJjNOKZ7e9aA" base_Element="_ndWUkSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ndW7oCueEeyJjNOKZ7e9aA" base_Element="_ndWUkyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ndXisCueEeyJjNOKZ7e9aA" base_Element="_ndW7oSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ndYJwCueEeyJjNOKZ7e9aA" base_Element="_ndXisSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ndYJwiueEeyJjNOKZ7e9aA" base_Element="_ndYJwSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ndYw0CueEeyJjNOKZ7e9aA" base_Element="_ndYJwyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ndYw0iueEeyJjNOKZ7e9aA" base_Element="_ndYw0SueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ndZ-8SueEeyJjNOKZ7e9aA" base_Element="_ndZ-8CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ndamASueEeyJjNOKZ7e9aA" base_Element="_ndZ-8iueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_ndamAiueEeyJjNOKZ7e9aA" base_Element="_ndZ-8iueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_ndamAyueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ndbNESueEeyJjNOKZ7e9aA" base_Element="_ndbNECueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ndb0ICueEeyJjNOKZ7e9aA" base_Element="_ndbNEiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_ndb0ISueEeyJjNOKZ7e9aA" base_Element="_ndbNEiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_ndb0IiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ndcbMCueEeyJjNOKZ7e9aA" base_Element="_ndb0IyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ndcbMyueEeyJjNOKZ7e9aA" base_Element="_ndcbMSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_ndcbNCueEeyJjNOKZ7e9aA" base_Element="_ndcbMSueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_ndcbNSueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_nddCQCueEeyJjNOKZ7e9aA" base_Element="_ndcbNiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nddCQyueEeyJjNOKZ7e9aA" base_Element="_nddCQSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nddpUCueEeyJjNOKZ7e9aA" base_Element="_nddCQSueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nddpUSueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_nddpUyueEeyJjNOKZ7e9aA" base_Element="_nddpUiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ndeQYCueEeyJjNOKZ7e9aA" base_Element="_nddpVCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_ndeQYSueEeyJjNOKZ7e9aA" base_Element="_nddpVCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_ndeQYiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ndeQZCueEeyJjNOKZ7e9aA" base_Element="_ndeQYyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nde3ciueEeyJjNOKZ7e9aA" base_Element="_nde3cCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nde3cyueEeyJjNOKZ7e9aA" base_Element="_nde3cCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nde3dCueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ndgFkCueEeyJjNOKZ7e9aA" base_Element="_ndfegCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ndgsoCueEeyJjNOKZ7e9aA" base_Element="_ndgFkSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_ndih0SueEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_ndih0CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ndkXAiueEeyJjNOKZ7e9aA" base_Element="_ndjv8CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_ndkXAyueEeyJjNOKZ7e9aA" base_Element="_ndjv8CueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_ndkXBCueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ndmMMCueEeyJjNOKZ7e9aA" genericsValue="String, Node" base_Element="_ndllICueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ndoBYCueEeyJjNOKZ7e9aA" base_Element="_ndnaUCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ndrrwyueEeyJjNOKZ7e9aA" base_Element="_ndrrwCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_ndsS0CueEeyJjNOKZ7e9aA" base_Element="_ndrrwCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_ndsS0SueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ndtg8CueEeyJjNOKZ7e9aA" genericsValue="ScheduleTime" base_Element="_nds54yueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ndvWICueEeyJjNOKZ7e9aA" base_Element="_nduvEyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_ndvWISueEeyJjNOKZ7e9aA" base_Element="_nduvEyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_ndvWIiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ndwkQSueEeyJjNOKZ7e9aA" base_Element="_ndwkQCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ndxLUCueEeyJjNOKZ7e9aA" base_Element="_ndwkQiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nd6VQSueEeyJjNOKZ7e9aA" genericsValue="String,InstructionTimeSlot" base_Element="_nd6VQCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nd9YkCueEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_nd8xgCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nd9_oSueEeyJjNOKZ7e9aA" genericsValue="Double" base_Element="_nd9_oCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nd-msSueEeyJjNOKZ7e9aA" genericsValue="Double,ReliabilityRow" base_Element="_nd-msCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_neCRESueEeyJjNOKZ7e9aA" base_Element="_neCRECueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_neHwoSueEeyJjNOKZ7e9aA" genericsValue="Activation,Row&lt;Activation>" base_Element="_neHwoCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_neI-wCueEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_neIXsSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_neJl0CueEeyJjNOKZ7e9aA" base_Element="_neI-wiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_neKz8SueEeyJjNOKZ7e9aA" base_Element="_neKz8CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_neLbACueEeyJjNOKZ7e9aA" base_Element="_neKz8iueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_neSIsCueEeyJjNOKZ7e9aA" base_Element="_neRhoCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_neSIsyueEeyJjNOKZ7e9aA" base_Element="_neSIsSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_neSvwCueEeyJjNOKZ7e9aA" base_Element="_neSIsSueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_neSvwSueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_neTW0CueEeyJjNOKZ7e9aA" base_Element="_neSvwiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_neTW0SueEeyJjNOKZ7e9aA" base_Element="_neSvwiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_neTW0iueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_neT94CueEeyJjNOKZ7e9aA" base_Element="_neTW0yueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_neT94yueEeyJjNOKZ7e9aA" base_Element="_neT94SueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_neT95CueEeyJjNOKZ7e9aA" base_Element="_neT94SueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_neT95SueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_neUk8CueEeyJjNOKZ7e9aA" base_Element="_neT95iueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_neUk8yueEeyJjNOKZ7e9aA" base_Element="_neUk8SueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_neVMACueEeyJjNOKZ7e9aA" base_Element="_neUk8SueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_neVMASueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_neVMAyueEeyJjNOKZ7e9aA" base_Element="_neVMAiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_neVzECueEeyJjNOKZ7e9aA" base_Element="_neVMBCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_neVzESueEeyJjNOKZ7e9aA" base_Element="_neVMBCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_neVzEiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_neVzFCueEeyJjNOKZ7e9aA" base_Element="_neVzEyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_neWaIiueEeyJjNOKZ7e9aA" base_Element="_neWaICueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_neWaIyueEeyJjNOKZ7e9aA" base_Element="_neWaICueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_neWaJCueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_neXBMCueEeyJjNOKZ7e9aA" base_Element="_neWaJSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_neXBMyueEeyJjNOKZ7e9aA" base_Element="_neXBMSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_neXoQCueEeyJjNOKZ7e9aA" base_Element="_neXBMSueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_neXoQSueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_neb5sSueEeyJjNOKZ7e9aA" base_Element="_neb5sCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_necgwCueEeyJjNOKZ7e9aA" base_Element="_neb5siueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_necgwiueEeyJjNOKZ7e9aA" base_Element="_necgwSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nedH0CueEeyJjNOKZ7e9aA" base_Element="_necgwyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nedH0iueEeyJjNOKZ7e9aA" base_Element="_nedH0SueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nehZQCueEeyJjNOKZ7e9aA" base_Element="_negyMCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nehZQiueEeyJjNOKZ7e9aA" base_Element="_nehZQSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_neiAUSueEeyJjNOKZ7e9aA" base_Element="_neiAUCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_neinYCueEeyJjNOKZ7e9aA" base_Element="_neiAUiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nejOcCueEeyJjNOKZ7e9aA" base_Element="_neinYSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nelDoCueEeyJjNOKZ7e9aA" genericsValue="Integer" base_Element="_nekckCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_neqjMCueEeyJjNOKZ7e9aA" base_Element="_nep8JyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_neqjMSueEeyJjNOKZ7e9aA" base_Element="_nep8JyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_neqjMiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_neqjNSueEeyJjNOKZ7e9aA" base_Element="_neqjMyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nerKQCueEeyJjNOKZ7e9aA" base_Element="_neqjMyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nerKQSueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_nerKQyueEeyJjNOKZ7e9aA" base_Element="_nerKQiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nerKRiueEeyJjNOKZ7e9aA" base_Element="_nerKRCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nerxUCueEeyJjNOKZ7e9aA" base_Element="_nerKRCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nerxUSueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_nerxUyueEeyJjNOKZ7e9aA" base_Element="_nerxUiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nesYYSueEeyJjNOKZ7e9aA" base_Element="_nerxVCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nesYYiueEeyJjNOKZ7e9aA" base_Element="_nerxVCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nesYYyueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_nes_cCueEeyJjNOKZ7e9aA" base_Element="_nesYZCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_netmgCueEeyJjNOKZ7e9aA" base_Element="_nes_cSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_netmgSueEeyJjNOKZ7e9aA" base_Element="_nes_cSueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_netmgiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_netmhCueEeyJjNOKZ7e9aA" base_Element="_netmgyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_neuNkiueEeyJjNOKZ7e9aA" base_Element="_neuNkCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_neuNkyueEeyJjNOKZ7e9aA" base_Element="_neuNkCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_neuNlCueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_neu0oCueEeyJjNOKZ7e9aA" base_Element="_neuNlSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_neu0oSueEeyJjNOKZ7e9aA" base_Element="_neuNlSueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_neu0oiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_neu0pSueEeyJjNOKZ7e9aA" base_Element="_neu0oyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nevbsCueEeyJjNOKZ7e9aA" base_Element="_neu0oyueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nevbsSueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nevbtCueEeyJjNOKZ7e9aA" base_Element="_nevbsiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nevbtSueEeyJjNOKZ7e9aA" base_Element="_nevbsiueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nevbtiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_newp0CueEeyJjNOKZ7e9aA" base_Element="_newCwCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nexQ4CueEeyJjNOKZ7e9aA" base_Element="_newp0SueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nexQ4iueEeyJjNOKZ7e9aA" base_Element="_nexQ4SueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nezGESueEeyJjNOKZ7e9aA" base_Element="_nezGECueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_neztICueEeyJjNOKZ7e9aA" base_Element="_nezGEiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfGoECueEeyJjNOKZ7e9aA" genericsValue="T, E" base_Element="_nfGBACueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nfHPICueEeyJjNOKZ7e9aA" base_Element="_nfGoESueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfH2MCueEeyJjNOKZ7e9aA" genericsValue="Activation" base_Element="_nfHPISueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfJEUCueEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_nfIdQSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfJrYCueEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_nfJEUiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfKScCueEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_nfJrYiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfK5gSueEeyJjNOKZ7e9aA" genericsValue="ScheduleTime" base_Element="_nfK5gCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfMusSueEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_nfMusCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfOj5yueEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_nfOj4SueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfPK8CueEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_nfOj4iueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfPyASueEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_nfPyACueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfQZESueEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_nfPyAyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfRnMCueEeyJjNOKZ7e9aA" genericsValue="Activation" base_Element="_nfRAICueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nfSOQSueEeyJjNOKZ7e9aA" base_Element="_nfRnMSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfSOQiueEeyJjNOKZ7e9aA" genericsValue="Node" base_Element="_nfRnMiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nfS1UCueEeyJjNOKZ7e9aA" base_Element="_nfRnMSueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nfS1USueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_nfTcYCueEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_nfS1UiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nfTcYiueEeyJjNOKZ7e9aA" base_Element="_nfTcYSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nfUDdCueEeyJjNOKZ7e9aA" base_Element="_nfUDcCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nfUDdSueEeyJjNOKZ7e9aA" base_Element="_nfUDcCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nfUDdiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_nfUqgSueEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_nfUqgCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfV4oCueEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_nfVRkCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfXGwSueEeyJjNOKZ7e9aA" genericsValue="Flow" base_Element="_nfXGwCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfY78CueEeyJjNOKZ7e9aA" genericsValue="Node" base_Element="_nfYU4iueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfY78yueEeyJjNOKZ7e9aA" genericsValue="Integer" base_Element="_nfY78iueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nfbYMSueEeyJjNOKZ7e9aA" base_Element="_nfbYMCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfdNYSueEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_nfdNYCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nfebgCueEeyJjNOKZ7e9aA" base_Element="_nfd0cCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nfebgSueEeyJjNOKZ7e9aA" base_Element="_nfd0cCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nfebgiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_nffCkCueEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_nfebgyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nfgQsCueEeyJjNOKZ7e9aA" base_Element="_nffpoCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nfgQsSueEeyJjNOKZ7e9aA" base_Element="_nffpoCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nfgQsiueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_nfg3wCueEeyJjNOKZ7e9aA" genericsValue="Node" base_Element="_nfgQsyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfiF4SueEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_nfiF4CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nfis9CueEeyJjNOKZ7e9aA" base_Element="_nfis8CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nfis9SueEeyJjNOKZ7e9aA" base_Element="_nfis8CueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nfis9iueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_nfj7EiueEeyJjNOKZ7e9aA" genericsValue="Node" base_Element="_nfj7ECueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Array xmi:id="_nfkiIyueEeyJjNOKZ7e9aA" base_Element="_nfj7EyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfkiJCueEeyJjNOKZ7e9aA" genericsValue="Node" base_Element="_nfkiICueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nflwQCueEeyJjNOKZ7e9aA" base_Element="_nflJMCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfm-YCueEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_nfmXUiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nfm-ZSueEeyJjNOKZ7e9aA" base_Element="_nfm-YSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nfnlcCueEeyJjNOKZ7e9aA" base_Element="_nfm-YSueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nfnlcSueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_nfoMgSueEeyJjNOKZ7e9aA" genericsValue="String, Integer" base_Element="_nfoMgCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nfozkSueEeyJjNOKZ7e9aA" base_Element="_nfozkCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nfr24CueEeyJjNOKZ7e9aA" base_Element="_nfrP0iueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nftsESueEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_nftsECueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nfuTJCueEeyJjNOKZ7e9aA" base_Element="_nfuTICueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nfu6MCueEeyJjNOKZ7e9aA" base_Element="_nfuTICueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nfu6MSueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_nfxWciueEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_nfxWcSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfykkCueEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_nfx9gSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfzLoCueEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_nfykkiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nfzLoSueEeyJjNOKZ7e9aA" genericsValue="T" base_Element="_nfykkyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nf1A0iueEeyJjNOKZ7e9aA" genericsValue="E" base_Element="_nf1A0SueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nf2O8CueEeyJjNOKZ7e9aA" base_Element="_nf1n4CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nf22ASueEeyJjNOKZ7e9aA" base_Element="_nf22ACueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_nf4rMCueEeyJjNOKZ7e9aA" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_nf4EIiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nf4rMSueEeyJjNOKZ7e9aA" base_Element="_nf4EIiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nf6gYiueEeyJjNOKZ7e9aA" base_Element="_nf6gYSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nf8VkiueEeyJjNOKZ7e9aA" base_Element="_nf7ugCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nf8VkyueEeyJjNOKZ7e9aA" genericsValue="Node" base_Element="_nf8VkCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Annotations xmi:id="_nf88oCueEeyJjNOKZ7e9aA" base_Element="_nf7ugCueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_nf88oSueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ngDqUCueEeyJjNOKZ7e9aA" genericsValue="Integer" base_Element="_ngDDQCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_ngRFsSueEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_ngRFsCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_ngRswSueEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_ngRswCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_ngST0CueEeyJjNOKZ7e9aA" genericsValue="ScheduleTime" base_Element="_ngRswiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngUJACueEeyJjNOKZ7e9aA" base_Element="_ngTh9CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngUJAiueEeyJjNOKZ7e9aA" base_Element="_ngUJASueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_ngUwECueEeyJjNOKZ7e9aA" genericsValue="ChannelSet" base_Element="_ngUJAyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngUwESueEeyJjNOKZ7e9aA" base_Element="_ngUJAyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_ngVXICueEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_ngUwFCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngVXISueEeyJjNOKZ7e9aA" base_Element="_ngUwFCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngVXIyueEeyJjNOKZ7e9aA" base_Element="_ngVXIiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_ngV-MSueEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_ngV-MCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngV-MiueEeyJjNOKZ7e9aA" base_Element="_ngV-MCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngWlQCueEeyJjNOKZ7e9aA" base_Element="_ngV-MyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngWlQiueEeyJjNOKZ7e9aA" base_Element="_ngWlQSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngXMUSueEeyJjNOKZ7e9aA" base_Element="_ngXMUCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngXzYCueEeyJjNOKZ7e9aA" base_Element="_ngXMUiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngXzYiueEeyJjNOKZ7e9aA" base_Element="_ngXzYSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngXzZCueEeyJjNOKZ7e9aA" base_Element="_ngXzYyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngaPoCueEeyJjNOKZ7e9aA" base_Element="_ngZokyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngbdwiueEeyJjNOKZ7e9aA" base_Element="_ngbdwCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngcE0CueEeyJjNOKZ7e9aA" base_Element="_ngbdwyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngcE0iueEeyJjNOKZ7e9aA" base_Element="_ngcE0SueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_ngcr4CueEeyJjNOKZ7e9aA" genericsValue="Node" base_Element="_ngcE0yueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngcr4SueEeyJjNOKZ7e9aA" base_Element="_ngcE0yueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_ngdS8SueEeyJjNOKZ7e9aA" genericsValue="Integer" base_Element="_ngdS8CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngdS8iueEeyJjNOKZ7e9aA" base_Element="_ngdS8CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_ngd6ASueEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_ngd6ACueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngehECueEeyJjNOKZ7e9aA" base_Element="_ngd6ACueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngehEiueEeyJjNOKZ7e9aA" base_Element="_ngehESueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngehFCueEeyJjNOKZ7e9aA" base_Element="_ngehEyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nggWQiueEeyJjNOKZ7e9aA" base_Element="_nggWQSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nggWRCueEeyJjNOKZ7e9aA" base_Element="_nggWQyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngg9UCueEeyJjNOKZ7e9aA" base_Element="_nggWRSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngg9UiueEeyJjNOKZ7e9aA" base_Element="_ngg9USueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngg9VCueEeyJjNOKZ7e9aA" base_Element="_ngg9UyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nghkYCueEeyJjNOKZ7e9aA" base_Element="_ngg9VSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nghkYiueEeyJjNOKZ7e9aA" base_Element="_nghkYSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngiLcyueEeyJjNOKZ7e9aA" base_Element="_ngiLciueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngiygCueEeyJjNOKZ7e9aA" base_Element="_ngiLdSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngiygyueEeyJjNOKZ7e9aA" base_Element="_ngiygSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_ngkAoSueEeyJjNOKZ7e9aA" genericsValue="Edge" base_Element="_ngkAoCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nglOwyueEeyJjNOKZ7e9aA" base_Element="_nglOwiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngl10CueEeyJjNOKZ7e9aA" base_Element="_nglOxCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngl11SueEeyJjNOKZ7e9aA" base_Element="_ngl10SueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngmc4CueEeyJjNOKZ7e9aA" base_Element="_ngl11iueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngmc4iueEeyJjNOKZ7e9aA" base_Element="_ngmc4SueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_ngnD8CueEeyJjNOKZ7e9aA" genericsValue="Activation" base_Element="_ngmc4yueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngnD8SueEeyJjNOKZ7e9aA" base_Element="_ngmc4yueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_ngnD8yueEeyJjNOKZ7e9aA" genericsValue="String, Integer" base_Element="_ngnD8iueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngnrACueEeyJjNOKZ7e9aA" base_Element="_ngnD8iueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngnrAiueEeyJjNOKZ7e9aA" base_Element="_ngnrASueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngpgMCueEeyJjNOKZ7e9aA" base_Element="_ngo5JiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngpgMiueEeyJjNOKZ7e9aA" base_Element="_ngpgMSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngpgNCueEeyJjNOKZ7e9aA" base_Element="_ngpgMyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngqHQCueEeyJjNOKZ7e9aA" base_Element="_ngpgNSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngqHQiueEeyJjNOKZ7e9aA" base_Element="_ngqHQSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngquUCueEeyJjNOKZ7e9aA" base_Element="_ngqHQyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngquUiueEeyJjNOKZ7e9aA" base_Element="_ngquUSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngquVCueEeyJjNOKZ7e9aA" base_Element="_ngquUyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngrVYCueEeyJjNOKZ7e9aA" base_Element="_ngquVSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngrVYiueEeyJjNOKZ7e9aA" base_Element="_ngrVYSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngrVZCueEeyJjNOKZ7e9aA" base_Element="_ngrVYyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngr8cCueEeyJjNOKZ7e9aA" base_Element="_ngrVZSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngr8ciueEeyJjNOKZ7e9aA" base_Element="_ngr8cSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngr8dCueEeyJjNOKZ7e9aA" base_Element="_ngr8cyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngtxoCueEeyJjNOKZ7e9aA" base_Element="_ngtKlCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngtxoiueEeyJjNOKZ7e9aA" base_Element="_ngtxoSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngu_wiueEeyJjNOKZ7e9aA" base_Element="_ngu_wSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngu_xCueEeyJjNOKZ7e9aA" base_Element="_ngu_wyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngvm0yueEeyJjNOKZ7e9aA" base_Element="_ngvm0iueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngvm1SueEeyJjNOKZ7e9aA" base_Element="_ngvm1CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngw08SueEeyJjNOKZ7e9aA" base_Element="_ngw08CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngw08yueEeyJjNOKZ7e9aA" base_Element="_ngw08iueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngxcACueEeyJjNOKZ7e9aA" base_Element="_ngw09CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngxcAiueEeyJjNOKZ7e9aA" base_Element="_ngxcASueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngxcBCueEeyJjNOKZ7e9aA" base_Element="_ngxcAyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngxcBiueEeyJjNOKZ7e9aA" base_Element="_ngxcBSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngyDESueEeyJjNOKZ7e9aA" base_Element="_ngyDECueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngyDEyueEeyJjNOKZ7e9aA" base_Element="_ngyDEiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngz4QCueEeyJjNOKZ7e9aA" base_Element="_ngzRNCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngz4QiueEeyJjNOKZ7e9aA" base_Element="_ngz4QSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ngz4RCueEeyJjNOKZ7e9aA" base_Element="_ngz4QyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng0fUSueEeyJjNOKZ7e9aA" base_Element="_ng0fUCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng0fUyueEeyJjNOKZ7e9aA" base_Element="_ng0fUiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng0fVSueEeyJjNOKZ7e9aA" base_Element="_ng0fVCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng1GYCueEeyJjNOKZ7e9aA" base_Element="_ng0fViueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng1GYyueEeyJjNOKZ7e9aA" base_Element="_ng1GYSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng1GZiueEeyJjNOKZ7e9aA" base_Element="_ng1GZCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng1tcSueEeyJjNOKZ7e9aA" base_Element="_ng1tcCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng1tcyueEeyJjNOKZ7e9aA" base_Element="_ng1tciueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng2UgCueEeyJjNOKZ7e9aA" base_Element="_ng1tdCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng3iqCueEeyJjNOKZ7e9aA" base_Element="_ng3ipiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng4wwCueEeyJjNOKZ7e9aA" base_Element="_ng4JsiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_ng4wwiueEeyJjNOKZ7e9aA" genericsValue="InstructionParameters" base_Element="_ng4wwSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng4wwyueEeyJjNOKZ7e9aA" base_Element="_ng4wwSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng5X0SueEeyJjNOKZ7e9aA" base_Element="_ng5X0CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng5-4SueEeyJjNOKZ7e9aA" base_Element="_ng5-4CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng5-4yueEeyJjNOKZ7e9aA" base_Element="_ng5-4iueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng6l8CueEeyJjNOKZ7e9aA" base_Element="_ng5-5CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng6l8iueEeyJjNOKZ7e9aA" base_Element="_ng6l8SueEeyJjNOKZ7e9aA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_ng7NACueEeyJjNOKZ7e9aA" name="getNumChannels" method="_nh75piueEeyJjNOKZ7e9aA">
      <ownedParameter xmi:id="_ng7NASueEeyJjNOKZ7e9aA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_ng7NAiueEeyJjNOKZ7e9aA" base_Element="_ng7NACueEeyJjNOKZ7e9aA">
    <annotations xmi:id="_ng7NAyueEeyJjNOKZ7e9aA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng7NBiueEeyJjNOKZ7e9aA" base_Element="_ng7NBCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng70EiueEeyJjNOKZ7e9aA" base_Element="_ng70ECueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng9CNCueEeyJjNOKZ7e9aA" base_Element="_ng9CMyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng9CNiueEeyJjNOKZ7e9aA" base_Element="_ng9CNSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng9pQCueEeyJjNOKZ7e9aA" base_Element="_ng9CNyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng9pQiueEeyJjNOKZ7e9aA" base_Element="_ng9pQSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng9pRCueEeyJjNOKZ7e9aA" base_Element="_ng9pQyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng-QUCueEeyJjNOKZ7e9aA" base_Element="_ng9pRSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng-QUiueEeyJjNOKZ7e9aA" base_Element="_ng-QUSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng-QVCueEeyJjNOKZ7e9aA" base_Element="_ng-QUyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng-3YCueEeyJjNOKZ7e9aA" base_Element="_ng-QVSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng-3YiueEeyJjNOKZ7e9aA" base_Element="_ng-3YSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng-3ZCueEeyJjNOKZ7e9aA" base_Element="_ng-3YyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng-3ZyueEeyJjNOKZ7e9aA" base_Element="_ng-3ZSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng_ecSueEeyJjNOKZ7e9aA" base_Element="_ng_ecCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ng_ecyueEeyJjNOKZ7e9aA" base_Element="_ng_eciueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nhAFgCueEeyJjNOKZ7e9aA" base_Element="_ng_edCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nhBToSueEeyJjNOKZ7e9aA" base_Element="_nhAsmSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nhB6sCueEeyJjNOKZ7e9aA" base_Element="_nhBTpCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nhB6tCueEeyJjNOKZ7e9aA" base_Element="_nhB6syueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nhChwCueEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_nhB6tSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nhChwyueEeyJjNOKZ7e9aA" genericsValue="String" base_Element="_nhChwiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nhEW8CueEeyJjNOKZ7e9aA" base_Element="_nhDv5CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nhEW8iueEeyJjNOKZ7e9aA" base_Element="_nhEW8SueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nhEW9CueEeyJjNOKZ7e9aA" base_Element="_nhEW8yueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nhE-ASueEeyJjNOKZ7e9aA" base_Element="_nhE-ACueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nhFlECueEeyJjNOKZ7e9aA" base_Element="_nhE-AiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nhGMICueEeyJjNOKZ7e9aA" base_Element="_nhFlESueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nhGMIiueEeyJjNOKZ7e9aA" base_Element="_nhGMISueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nhGMJCueEeyJjNOKZ7e9aA" base_Element="_nhGMIyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nhGzMCueEeyJjNOKZ7e9aA" base_Element="_nhGMJSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nhGzMiueEeyJjNOKZ7e9aA" base_Element="_nhGzMSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nhGzNCueEeyJjNOKZ7e9aA" base_Element="_nhGzMyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nhIoZSueEeyJjNOKZ7e9aA" base_Element="_nhIoZCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nhJPcyueEeyJjNOKZ7e9aA" base_Element="_nhJPciueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nhJPdSueEeyJjNOKZ7e9aA" base_Element="_nhJPdCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nhJ2gSueEeyJjNOKZ7e9aA" base_Element="_nhJ2gCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nhKdkCueEeyJjNOKZ7e9aA" genericsValue="Integer" base_Element="_nhJ2hiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nhKdkSueEeyJjNOKZ7e9aA" base_Element="_nhJ2hiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Generics xmi:id="_nhLEoCueEeyJjNOKZ7e9aA" genericsValue="SchedulableObject" base_Element="_nhKdkiueEeyJjNOKZ7e9aA"/>
  <uml:OpaqueBehavior xmi:id="_nh75piueEeyJjNOKZ7e9aA" name="getNumChannels" specification="_ng7NACueEeyJjNOKZ7e9aA">
    <ownedParameter xmi:id="_nh75pyueEeyJjNOKZ7e9aA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_nivK4CueEeyJjNOKZ7e9aA" base_Element="_niuj0CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nivx8CueEeyJjNOKZ7e9aA" base_Element="_nivK4SueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nivx8yueEeyJjNOKZ7e9aA" base_Element="_nivx8SueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_niwZACueEeyJjNOKZ7e9aA" base_Element="_nivx9CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_niwZAyueEeyJjNOKZ7e9aA" base_Element="_niwZASueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nixAECueEeyJjNOKZ7e9aA" base_Element="_niwZBCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nixAEyueEeyJjNOKZ7e9aA" base_Element="_nixAESueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nixnICueEeyJjNOKZ7e9aA" base_Element="_nixAFCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nixnIyueEeyJjNOKZ7e9aA" base_Element="_nixnISueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_niyOMCueEeyJjNOKZ7e9aA" base_Element="_nixnJCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_niyOMyueEeyJjNOKZ7e9aA" base_Element="_niyOMSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_niy1QCueEeyJjNOKZ7e9aA" base_Element="_niyONCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_niy1QyueEeyJjNOKZ7e9aA" base_Element="_niy1QSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nizcUCueEeyJjNOKZ7e9aA" base_Element="_niy1RCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_nizcUyueEeyJjNOKZ7e9aA" base_Element="_nizcUSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni0DYiueEeyJjNOKZ7e9aA" base_Element="_ni0DYCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni0qcCueEeyJjNOKZ7e9aA" base_Element="_ni0DYyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni0qcyueEeyJjNOKZ7e9aA" base_Element="_ni0qcSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni1RgCueEeyJjNOKZ7e9aA" base_Element="_ni0qdCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni14kCueEeyJjNOKZ7e9aA" base_Element="_ni1RgSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni14kyueEeyJjNOKZ7e9aA" base_Element="_ni14kSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni2foCueEeyJjNOKZ7e9aA" base_Element="_ni14lCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni2foyueEeyJjNOKZ7e9aA" base_Element="_ni2foSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni3GsCueEeyJjNOKZ7e9aA" base_Element="_ni2fpCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni3GsyueEeyJjNOKZ7e9aA" base_Element="_ni3GsSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni3GtiueEeyJjNOKZ7e9aA" base_Element="_ni3GtCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni3twiueEeyJjNOKZ7e9aA" base_Element="_ni3twCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni3txSueEeyJjNOKZ7e9aA" base_Element="_ni3twyueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni4U0iueEeyJjNOKZ7e9aA" base_Element="_ni4U0CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni4U1SueEeyJjNOKZ7e9aA" base_Element="_ni4U0yueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni474iueEeyJjNOKZ7e9aA" base_Element="_ni474CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni475SueEeyJjNOKZ7e9aA" base_Element="_ni474yueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni5i8iueEeyJjNOKZ7e9aA" base_Element="_ni5i8CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni6KACueEeyJjNOKZ7e9aA" base_Element="_ni5i8yueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni6KAyueEeyJjNOKZ7e9aA" base_Element="_ni6KASueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni6xECueEeyJjNOKZ7e9aA" base_Element="_ni6KBCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni6xEyueEeyJjNOKZ7e9aA" base_Element="_ni6xESueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni7YICueEeyJjNOKZ7e9aA" base_Element="_ni6xFCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni7YIyueEeyJjNOKZ7e9aA" base_Element="_ni7YISueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni7_MSueEeyJjNOKZ7e9aA" base_Element="_ni7YJCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni7_NCueEeyJjNOKZ7e9aA" base_Element="_ni7_MiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni8mQSueEeyJjNOKZ7e9aA" base_Element="_ni7_NSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni9NUCueEeyJjNOKZ7e9aA" base_Element="_ni8mQiueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni9NUyueEeyJjNOKZ7e9aA" base_Element="_ni9NUSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni90YCueEeyJjNOKZ7e9aA" base_Element="_ni9NVCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni90YyueEeyJjNOKZ7e9aA" base_Element="_ni90YSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni-bcCueEeyJjNOKZ7e9aA" base_Element="_ni90ZCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni-bcyueEeyJjNOKZ7e9aA" base_Element="_ni-bcSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni_CgCueEeyJjNOKZ7e9aA" base_Element="_ni-bdCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni_pkCueEeyJjNOKZ7e9aA" base_Element="_ni_CgSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_ni_pkyueEeyJjNOKZ7e9aA" base_Element="_ni_pkSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_njAQoCueEeyJjNOKZ7e9aA" base_Element="_ni_plCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_njAQoyueEeyJjNOKZ7e9aA" base_Element="_njAQoSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_njA3sCueEeyJjNOKZ7e9aA" base_Element="_njAQpCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_njA3syueEeyJjNOKZ7e9aA" base_Element="_njA3sSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_njBewCueEeyJjNOKZ7e9aA" base_Element="_njA3tCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_njBewyueEeyJjNOKZ7e9aA" base_Element="_njBewSueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_njCF0CueEeyJjNOKZ7e9aA" base_Element="_njBexCueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_njCF0yueEeyJjNOKZ7e9aA" base_Element="_njCF0SueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_njCs4CueEeyJjNOKZ7e9aA" base_Element="_njCF1CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_njCs4yueEeyJjNOKZ7e9aA" base_Element="_njCs4SueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_njDT8iueEeyJjNOKZ7e9aA" base_Element="_njDT8CueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_njD7ACueEeyJjNOKZ7e9aA" base_Element="_njDT8yueEeyJjNOKZ7e9aA"/>
  <UMLLabProfile:Reference xmi:id="_njD7AyueEeyJjNOKZ7e9aA" base_Element="_njD7ASueEeyJjNOKZ7e9aA"/>
</xmi:XMI>
